{"version":3,"sources":["actions/index.js","components/LoadingSpinner.js","components/MapBox.js","pages/Map.js","components/TopButton.js","pages/Home.js","components/Heart.js","components/Pagination.js","pages/BookMark.js","components/Header.js","components/MenuBar.js","pages/UserInfo.js","pages/More.js","components/ModalConfirm.js","components/GoBackButton.js","pages/MyPage.js","components/Toggle.js","pages/Login.js","pages/PasswordEdit.js","pages/SignUp.js","pages/MyPost.js","pages/Write.js","pages/PostRead.js","pages/ReadBookMarkPost.js","pages/PostEdit.js","components/FirstPage/One.js","components/FirstPage/Two.js","components/FirstPage/Three.js","components/FirstPage/Four.js","pages/Loading.js","pages/FirstPage.js","pages/Messenger.js","pages/Messenger2.js","pages/EditUserInfo.js","pages/ChatRoom.js","components/GlobalStyle.js","App.js","reducers/initialState.js","reducers/itemReducer.js","reducers/index.js","store/store.js","index.js"],"names":["CHANGE_USER_INFO","UPDATE_CURRENT_PAGE","UPDATE_START_END_PAGE","CHANGE_USER_GENDER","CHANGE_IS_LOGIN","CHANGE_USER_PW","CHANGE_SEARCH_WORD","CHANGE_SELECT_WORD","CHANGE_CUR_LOCATION","UPDATE_WEATHERINFO","UPDATE_USER_POST","UPDATE_POST_ID","CHANGE_WHEATER_FILTER","CHANGE_MAP_PAGE","CHANGE_CURROOM","CHANGE_NEWMSGSECTION","changeSearchword","searchWord","type","payload","changeIsLogin","trueOrFalse","userPosts","postinfo","updatePostId","pageId","changeMapPage","mapPage","Spinner","styled","img","props","size","duration","LoadingSpinner","src","ImgContainer","div","PostListModal","SlideModal","bottom","GraphModal","GraphTitle","GraphTitleDiv","GraphTitleDiv2","BarGraphFlex","BarGraphchild","url","process","Location","useSelector","state","itemReducer","weatherFilter","useState","isLoading","setisLoading","history","useHistory","dispatch","useDispatch","kakao","window","sunny","cloudy","rainy","snowy","weatherCount","setWeatherCount","weatherApi","setweatherApi","bottom_id","createdAt","id","post_content","post_photo","post_title","temp","top_id","updatedAt","user_id","weather","wind","xLocation","yLocation","postList","setPostList","console","log","useEffect","container","document","getElementById","options","center","maps","LatLng","level","map","Map","zoomControl","ZoomControl","addControl","ControlPosition","LEFT","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","lon","longitude","locPosition","displayMarker","changeCurLocation","message","marker","Marker","iwContent","InfoWindow","content","removable","open","setCenter","services","Geocoder","addressSearch","result","status","Status","OK","y","x","event","addListener","mouseEvent","latlng","latLng","getLat","getLng","timer","clusterer","MarkerClusterer","averageCenter","minLevel","$","get","data","markers","positions","i","n","idx","outer_id","infowindow","addMarkers","clearTimeout","setTimeout","bounds","getBounds","swLatlng","getSouthWest","neLatlng","getNorthEast","toString","axios","La","Ma","method","headers","withCredentials","then","res","length","getCenter","fcstValue","Box","Box2","EmoticonBox","PostTitle","PostContent","PostBox","PostImg","IconImg","LoadingBoxDiv","Button","button","bgGrey","isText","labels","datasets","backgroundColor","hoverBackgroundColor","data2","label","borderColor","borderWidth","hoverBorderColor","isOnOff","setisOnOff","postBoxHandler","e","elem","target","classList","contains","parentNode","push","pathname","postId","onClick","icon","faChevronDown","faChevronUp","className","post","Container","TopButton","ScrollY","setScrollY","btnStatus","setBtnStatus","handleFollow","scrollY","addEventListener","removeEventListener","alt","scrollTo","top","behavior","HomeContainer","TodaysDate","LeftContainer1","LeftNav1","nav","LeftNav2","LeftNav3","Codi","RightContainer","RightNav1","Home","item","curLocation","weatherData","setWeatherData","curAddress","setcurAddress","currentPosts","setcurrentPosts","right","left","address","curtPost","todaysDate","settodaysDate","currentDate","date","Date","getFullYear","getMonth","getDate","currentTemp","setcurrentTemp","currentWind","setcurrentWind","currentWeather","setcurrentWeather","currentOuter","setcurrentOuter","currentTop","setcurrentTop","currentBottom","setcurrentBottom","tempArr","windArr","weatherArr","outerArr","topArr","bottomArr","getCount","arr","reduce","pv","cv","tempObj","windObj","weatherObj","outerObj","topObj","bottomObj","newTempArr","Object","values","newWindArr","newWeatherArr","newOuterArr","newTopArr","newBottomArr","tempMaxNum","Math","max","windMaxNum","weatherMaxNum","outerMaxNum","topMaxNum","bottomMaxNum","matchKey","obj","maxNum","key","maxTemp","maxWind","maxWeather","maxOuter","maxTop","maxBottom","photoClickHandler","undefined","info","baseDate","nanoid","baseTime","el","Bookmark","like","bookmarkHandler","color","faHeart","PaginationContainer","attrs","PageNumbersList","ul","ArrowButton","span","PageNumberItem","li","Pagination","unit","dataLength","itemsPerPage","numberButtonClickHandler","numberOfPages","ceil","numberArr","Array","fill","startIdx","setStartIdx","lastIdx","setLastIdx","cutArrInit","cutArr","setCutArr","tempIdxEnd","slice","prev","number","Outer","BookMarkPhoto","BookMarkList","BookMark","userInfo","readPostId","postInfo","bookmarkList","setBookmarkList","Number","post_id","post_info","formatDate","dateString","dateOnly","toLocaleDateString","postClickHandler","setCurrentPage","HeaderOuter","TitleAndLogo","isMobileLogo","Center","InputAndSubmit","StyledPostCode","DaumPostcode","Input","input","Buttons","Button3","Buttons3","Cancel","Buttons2","Header","isInput","isLogin","searchEvent","setSearchEvent","onFocus","setOnFocus","setweatherFilter","changeWeatherFilter","onChange","value","placeholder","faSearch","onComplete","roadAddress","faSun","faCloud","faCloudRain","faSnowflake","token","JSON","parse","localStorage","getItem","Authorization","clear","MenuBar","InfoBoxes","InfoBox","UserInfo","More","Popup","section","ModalConfirm","children","closeHandler","yesHandler","noHandler","faTimes","GoBackButton","faChevronLeft","goBack","ProfileArea","ProfileImg","ButtonArea","GridArea","MyPage","isModalOpen","setIsModalOpen","user_Photo","gender","location","delete","name","ToggleContainer","Desc","Toggle","isOn","setisOn","LoginOuter","LoginStyledArticle","article","LoginInputAndTitle","LoginInputText","LoginValidationListBox","LoginButtons","LoginButton","StyledArticle","InputAndTitle","InputAndTitle2","InputText","ValidationListBox","Button2","google","PhotoUploadSection","form","PhotoBox","PhotoBox2","clientUrl","Login","idInput","setIdInput","pwInput","setPwInput","idInputMessage","setIdInputMessage","pwInputMessage","setPwInputMessage","GOOGLE_LOGIN_URL","socialLogined","setSocialLogined","nickNameInput","inputSignUpData","setInputSignUpData","hash","URL","href","accessToken","split","authorization","accept","email","verified_email","res2","alert","setInputVaildMessage","inputVaildMessage","socialAutoLogin","setUploadedImg","fileName","filePath","setItem","stringify","userRoadAddress","setRoadUserAddress","genderToggle","photo","setPhoto","uploadedImg","complevent","onSubmit","preventDefault","formData","FormData","append","catch","err","error","files","nickName","user_photo","prevInput","prevText","password","assign","faGoogle","StyledLi","valid","edit","TextButton","PasswordEdit","curPwd","setCurPwd","newPwd","setNewPwd","curPwdInputWarning","setCurPwdInputWarning","isNoInput","isTooShort","isWrongType","newPwdInputWarning","setNewPwdInputWarning","isValid","setIsValid","validationReg","modalSelected","setModalSelected","test","newPwdValid","SignUp","emailInput","emailVaildCode","pwCheckInput","setPwCheckInput","pwCheckInputMessage","setPwCheckInputMessage","codeOn","setCodeOn","idOnChangeHanlder","strongPassword","str","isMatch","pwd1","pwd2","indexOf","temporary_id","code","MyPost","start","end","current","dataArr","currentPage","firstIdx","round","PictureSection","DesktopRight","ButtonsAndSelects","FlexColumnCenter","FilteringButtons","FilteringBtn","active","TextSection","SelectArea","WriteText","textarea","small","Secret","Write","selectWeather","setSelectWeather","selectWind","setSelectWind","selectTemp","setSelectTemp","title","setTitle","isFilteringBtnActive","setIsFilteringBtnActive","breezy","windy","strong","isFilteringBtnActive2","setIsFilteringBtnActive2","cold","hot","isFilteringBtnActive3","setIsFilteringBtnActive3","selectValueOuter","setSelectValueOuter","selectValueTop","setSelectValueTop","selectValueBottom","setSelectValueBottom","postText","setPostText","weatherFunc","select","weatherFunc2","weatherFunc3","random","min","parseFloat","toFixed","getRandomIntInclusive","floor","substr","sFunc","PostHeader","Title","BookmarkIcon","Profile","WeatherInfo","Icon","TodayCodi","Post","PostRead","postIds","postData","setPostData","noIdWarning","setNoIdWarning","params","bookmarked","setBookmarked","setEdit","removePost","setRemovePost","modalNoButtonHandler","modalCloseButtonHandler","dateObject","hourAndMin","toLocaleTimeString","hour12","Contents","HalfPage","AnimatedP","p","delay","AnimatedImg","One","delayOne","delayTwo","TitleAndContents","ContentsUnderTitle","AnimatedTitle","h2","Two","delayThree","delayFour","delayFive","TwoPictures","Three","Four","LoadingContainer","hide","Loading","FirstPageContainer","FirstPage","ProfileName","UserPhotoDiv","UserPhotoImg","RoomChatDiv","RoomList","FriendInput","FriendInputAndBtn","FriendListDiv","io","connect","Messenger","prevmsg","setprevmsg","newMsgSection","setNewMsgSection","receiver_id","setreceiver_id","joinedRoom","setjoinedRoom","roomInOut","recievemessage","roomListClick","clickRoomName","room","joinRoom","Set","roomNamefunc","required","user_id_sort","sort","roomName","faPlusSquare","replace","ChatList","socket","Messenger2","setroomName","curRoom","setcurRoom","msg","setmsg","msgevent","setmsgevent","setRoomInOut","on","msg2","roomlist","chatcontent","msgfunc","emit","faPaperPlane","opponent","MeDiv","YouDiv","ChatRoom","msgobj","newmsg","GlobalStyle","createGlobalStyle","App","userinfo","login","exact","path","to","initialState","selectWord","editPassword","homePost","action","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","logger","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.7789e722.chunk.js","sourcesContent":["// action types\nexport const CHANGE_USER_INFO = \"CHANGE_USER_INFO\"\nexport const UPDATE_CURRENT_PAGE = \"UPDATE_CURRENT_PAGE\"\nexport const UPDATE_START_END_PAGE = \"UPDATE_START_END_PAGE\"\nexport const CHANGE_USER_GENDER = \"CHANGE_USER_GENDER\"\nexport const CHANGE_IS_LOGIN = \"CHANGE_IS_LOGIN\"\nexport const CHANGE_USER_PW = \"CHANGE_USER_PW\"\nexport const CHANGE_SEARCH_WORD = \"CHANGE_SEARCH_WORD\"\nexport const CHANGE_SELECT_WORD = \"CHANGE_SELECT_WORD\"\nexport const CHANGE_CUR_LOCATION = \"CHANGE_CUR_LOCATION\"\n\nexport const UPDATE_WEATHERINFO = \"UPDATE_WEATHERINFO\"\nexport const UPDATE_USER_POST = \"UPDATE_USER_POST\"\nexport const UPDATE_POST_ID = \"UPDATE_POST_ID\"\nexport const UPDATE_HOME_POST = \"UPDATE_HOME_POST\"\n\nexport const CHANGE_WHEATER_FILTER = \"CHANGE_WHEATER_FILTER\"\nexport const CHANGE_MAP_PAGE = \"CHANGE_MAP_PAGE\"\nexport const CHANGE_CURROOM = \"CHANGE_CURROOM\"\nexport const CHANGE_NEWMSGSECTION = \"CHANGE_NEWMSGSECTION\"\n\n// actions creator functions\n\nexport const changeNewMsgSection = (newmsg) => {\n    return {\n        type: CHANGE_NEWMSGSECTION,\n        payload: {\n            newmsg,\n        },\n    }\n}\nexport const changeCurRoom = (room) => {\n    return {\n        type: CHANGE_CURROOM,\n        payload: {\n            room,\n        },\n    }\n}\nexport const changeUser = (userinfo) => {\n    return {\n        type: CHANGE_USER_INFO,\n        payload: {\n            ...userinfo,\n        },\n    }\n}\nexport const updateCurrentPage = (current) => {\n    return {\n        type: UPDATE_CURRENT_PAGE,\n        payload: {\n            current,\n        },\n    }\n}\nexport const updateStartEndPage = (start, end) => {\n    return {\n        type: UPDATE_START_END_PAGE,\n        payload: {\n            start,\n            end,\n        },\n    }\n}\n\nexport const changeGender = (usergender) => {\n    return {\n        type: CHANGE_USER_GENDER,\n        payload: usergender,\n    }\n}\nexport const changeSearchword = (searchWord) => {\n    return {\n        type: CHANGE_SEARCH_WORD,\n        payload: searchWord,\n    }\n}\nexport const changeSelectword = (selectWord) => {\n    return {\n        type: CHANGE_SELECT_WORD,\n        payload: selectWord,\n    }\n}\nexport const changeIsLogin = (trueOrFalse) => {\n    return {\n        type: CHANGE_IS_LOGIN,\n        payload: trueOrFalse,\n    }\n}\n\nexport const changeUserPw = (pw) => {\n    return {\n        type: CHANGE_USER_PW,\n        payload: pw,\n    }\n}\n\nexport const changeCurLocation = (lat, lon) => {\n    return {\n        type: CHANGE_CUR_LOCATION,\n        payload: { lat: lat, lon: lon },\n    }\n}\n\nexport const updateWeatherInfo = (data) => {\n    return {\n        type: UPDATE_WEATHERINFO,\n        payload: {\n            data: data,\n        },\n    }\n}\n\nexport const userPosts = (postinfo) => {\n    return {\n        type: UPDATE_USER_POST,\n        payload: {\n            postinfo: postinfo,\n        },\n    }\n}\n\nexport const updatePostId = (pageId) => {\n    return {\n        type: UPDATE_POST_ID,\n        payload: pageId,\n    }\n}\n\nexport const homePost = (homePost) => {\n    return {\n        type: UPDATE_HOME_POST,\n        payload: {\n            homePost: homePost,\n        },\n    }\n}\nexport const changeWeatherFilter = (weatherFilter) => {\n    return {\n        type: CHANGE_WHEATER_FILTER,\n        payload: {\n            weatherFilter: weatherFilter,\n        },\n    }\n}\n\nexport const changeMapPage = (mapPage) => {\n    return {\n        type: CHANGE_MAP_PAGE,\n        payload: {\n            mapPage: mapPage,\n        },\n    }\n}\n","import styled from \"styled-components\";\n\nconst Spinner = styled.img`\n  width: ${props => props.size || '50px'};\n  height: ${props => props.size || '50px'};\n  animation: add-spin linear infinite reverse;\n  animation-duration: ${props => props.duration || '2s'};\n  opacity: .7;\n\n  @media screen and (min-width: 1081px) {\n    width: ${props => props.size || '100px'};\n    height: ${props => props.size || '100px'};\n  }\n`;\n\nexport default function LoadingSpinner({ size, duration }) {\n  return (\n    <Spinner src=\"img/spinner.png\" size={size} duration={duration} />\n  );\n}\n","import styled from \"styled-components\"\nimport React, { useEffect, useState } from \"react\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport {\n    changeSearchword,\n    changeCurLocation,\n    updatePostId,\n} from \"../actions/index\"\nimport $ from \"jquery\"\nimport axios from \"axios\"\nimport { Doughnut, Bar } from \"react-chartjs-2\"\nimport LoadingSpinner from \"./LoadingSpinner\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faChevronDown, faChevronUp } from \"@fortawesome/free-solid-svg-icons\"\nimport { useHistory } from \"react-router-dom\"\n\nconst ImgContainer = styled.div`\n    position: relative;\n    width: 100%;\n    height: var(--mobile-page-height);\n\n    @media screen and (min-width: 1081px) {\n        height: var(--desktop-page-height);\n    }\n`\nconst PostListModal = styled.div`\n    // border: 1px solid black;\n\n    background-color: white;\n    z-index: 999;\n    // position: absolute;\n    position: fixed;\n    right: 0;\n    bottom: 115px;\n    width: 100%;\n    height: 50%;\n    overflow: auto;\n    padding: 0.5rem;\n    @media screen and (min-width: 1081px) {\n        background-color: white;\n        z-index: 999;\n        position: absolute;\n        right: 0;\n        bottom: 70px;\n        width: 35.3%;\n        height: 75%;\n        overflow: auto;\n    }\n`\nconst SlideModal = styled.div`\n    // border: 1px solid black;\n    background-color: white;\n    z-index: 9999;\n    // position: absolute;\n    position: fixed;\n    right: 0;\n    // top: 0px;\n    bottom: 70px;\n    // bottom: 130%;\n    // bottom: ${(props) => props.bottom || \"52.9%\"};\n    width: 100%;\n    height: 4%;\n    overflow: auto;\n    display: flex;\n    justify-content: center;\n    @media screen and (min-width: 1081px) {\n        background-color: white;\n        z-index: 9999;\n        position: absolute;\n        // position: fixed;\n        // right: 1%;\n\n        bottom: 70px;\n        // bottom: ${(props) => props.bottom || \"52.9%\"};\n        width: 35.3%;\n        height: 4%;\n        overflow: auto;\n        display: flex;\n        justify-content: center;\n    }\n`\nconst GraphModal = styled.div`\n    // border: 1px solid black;\n    width: 50%;\n    display: flex;\n\n    @media screen and (min-width: 1081px) {\n        // border: 1px solid pink;\n    }\n`\n\nconst GraphTitle = styled.div`\n    // border: 1px solid black;\n    width: 100%;\n    display: flex;\n    flex-direction: row;\n    font-weight: bold;\n\n    @media screen and (min-width: 1081px) {\n    }\n`\nconst GraphTitleDiv = styled.div`\n    // border: 1px solid black;\n    // margin: 1px;\n    // margin-top: 0.5rem;\n    // margin-bottom: 0.5rem;\n    width: 100%;\n    text-align: center;\n    // font-size: 0.8rem;\n    background-color: pink;\n\n    @media screen and (min-width: 1081px) {\n        // border: 1px solid pink;\n    }\n`\nconst GraphTitleDiv2 = styled.div`\n    // border: 1px solid black;\n    // margin: 1px;\n    width: 100%;\n    text-align: center;\n    font-size: 0.8rem;\n\n    @media screen and (min-width: 1081px) {\n        // border: 1px solid pink;\n    }\n`\nconst BarGraphFlex = styled.div`\n    // border: 1px solid black;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n\n    // @media screen and (min-width: 1081px) {\n    //     border: 1px solid pink;\n    // }\n`\nconst BarGraphchild = styled.div`\n    // border: 1px solid black;\n    width: 100%;\n\n    // @media screen and (min-width: 1081px) {\n    //     border: 1px solid pink;\n    // }\n`\n\nlet url = process.env.REACT_APP_LOCAL_URL\nif (!url) url = \"https://thereweather.space\"\n\nexport default function Location({ bottom }) {\n    const { searchWord, weatherFilter } = useSelector(\n        (state) => state.itemReducer\n    )\n\n    const [isLoading, setisLoading] = useState(false)\n    const history = useHistory()\n    const dispatch = useDispatch()\n    const { kakao } = window\n    const [weatherCount, setWeatherCount] = useState({\n        sunny: 0,\n        cloudy: 0,\n        rainy: 0,\n        snowy: 0,\n    }) //그래프 통계용\n    const [weatherApi, setweatherApi] = useState(0)\n\n    const [postList, setPostList] = useState([\n        {\n            bottom_id: \"\",\n            createdAt: \"Z\",\n            id: null,\n            post_content: \"\",\n            post_photo: \"\",\n            post_title: \"예보가 없는 지역 입니다.\",\n            temp: \"\",\n            top_id: \"\",\n            updatedAt: \"\",\n            user_id: \"\",\n            weather: \"\",\n            wind: \"\",\n            xLocation: null,\n            yLocation: null,\n        },\n    ])\n    console.log(weatherFilter)\n    //---------------\n    useEffect(() => {\n        var container = document.getElementById(\"map\")\n        var options = {\n            center: new kakao.maps.LatLng(37.5642135, 127.0016985),\n            level: 3,\n        }\n        var map = new kakao.maps.Map(container, options) //지도를 생성\n        var zoomControl = new kakao.maps.ZoomControl() //줌컨트롤 생성\n        map.addControl(zoomControl, kakao.maps.ControlPosition.LEFT) //줌컨트롤 위치 조정\n        // HTML5의 geolocation으로 사용할 수 있는지 확인합니다\n        if (navigator.geolocation) {\n            // GeoLocation을 이용해서 접속 위치를 얻어옵니다\n            navigator.geolocation.getCurrentPosition(function (position) {\n                var lat = position.coords.latitude, // 위도\n                    lon = position.coords.longitude // 경도\n\n                var locPosition = new kakao.maps.LatLng(lat, lon), // 마커가 표시될 위치를 geolocation으로 얻어온 좌표로 생성합니다\n                    message =\n                        '<div style=\"font-align:center;\"> 현재 나의 위치</div>' // 인포윈도우에 표시될 내용입니다\n\n                // 마커와 인포윈도우를 표시합니다\n                displayMarker(locPosition, message)\n                console.log(locPosition)\n\n                console.log(lat) //위도\n                console.log(lon) //경도\n                dispatch(changeCurLocation(lat, lon))\n            })\n        } else {\n            // HTML5의 GeoLocation을 사용할 수 없을때 마커 표시 위치와 인포윈도우 내용을 설정합니다\n\n            var locPosition = new kakao.maps.LatLng(33.450701, 126.570667),\n                message = \"geolocation을 사용할수 없어요..\"\n\n            displayMarker(locPosition, message)\n        }\n        // 지도에 마커와 인포윈도우를 표시하는 함수입니다\n\n        function displayMarker(locPosition, message) {\n            // 마커를 생성합니다\n            var marker = new kakao.maps.Marker({\n                map: map,\n                position: locPosition,\n            })\n\n            var iwContent = message, // 인포윈도우에 표시할 내용\n                iwRemoveable = true\n\n            // 인포윈도우를 생성합니다\n            var infowindow = new kakao.maps.InfoWindow({\n                content: iwContent,\n                removable: iwRemoveable,\n            })\n\n            // 인포윈도우를 마커위에 표시합니다\n            infowindow.open(map, marker)\n\n            // 지도 중심좌표를 접속위치로 변경합니다\n            map.setCenter(locPosition)\n        }\n\n        // 주소-좌표 변환 객체를 생성합니다\n        var geocoder = new kakao.maps.services.Geocoder()\n\n        // 주소로 좌표를 검색합니다\n        geocoder.addressSearch(searchWord, function (result, status) {\n            // 정상적으로 검색이 완료됐으면\n            if (status === kakao.maps.services.Status.OK) {\n                var coords = new kakao.maps.LatLng(result[0].y, result[0].x)\n\n                // 결과값으로 받은 위치를 마커로 표시합니다\n                // var marker = new kakao.maps.Marker({\n                //     map: map,\n                //     position: coords,\n                // })\n                // console.log(arguments)\n                // 인포윈도우로 장소에 대한 설명을 표시합니다\n                // var infowindow = new kakao.maps.InfoWindow({\n                //     content: `<div style=\"width:150px;text-align:center;padding:6px 0;\">${arguments[0][0].road_address.address_name} 지역</div>`,\n                // })\n                // infowindow.open(map, marker)\n\n                // 지도의 중심을 결과값으로 받은 위치로 이동시킵니다\n                dispatch(changeSearchword(searchWord))\n                map.setCenter(coords)\n            }\n        })\n\n        //클릭이벤트 함수\n        kakao.maps.event.addListener(map, \"click\", function (mouseEvent) {\n            // 클릭한 위도, 경도 정보를 가져옵니다\n            var latlng = mouseEvent.latLng\n            // 마커 위치를 클릭한 위치로 옮깁니다\n            // marker.setPosition(latlng)\n            //클릭한 곳의 위치 경도를 콘솔로그 찍는 변수\n            var message = \"클릭한 위치의 위도는 \" + latlng.getLat() + \" 이고, \"\n            message += \"경도는 \" + latlng.getLng() + \" 입니다\"\n            console.log(message)\n        })\n        //////////////////////////////////////////고정-hoon/////////////////////////////////////////\n\n        var clusterer = new kakao.maps.MarkerClusterer({\n            map: map, // 마커들을 클러스터로 관리하고 표시할 지도 객체\n            averageCenter: true, // 클러스터에 포함된 마커들의 평균 위치를 클러스터 마커 위치로 설정\n            minLevel: 9, // 클러스터 할 최소 지도 레벨\n        })\n\n        // 데이터를 가져오기 위해 jQuery를 사용합니다\n        // 데이터를 가져와 마커를 생성하고 클러스터러 객체에 넘겨줍니다\n        $.get(\n            url + `/post/location?weather=${weatherFilter.weatherFilter}`,\n            function (data) {\n                // 데이터에서 좌표 값을 가지고 마커를 표시합니다\n                // 마커 클러스터러로 관리할 마커 객체는 생성할 때 지도 객체를 설정하지 않습니다\n                // console.log(data)\n                // console.log($(data.positions))\n                // console.log($(data.positions[0]))\n\n                var markers = $(data.positions).map(function (i, position) {\n                    return new kakao.maps.Marker({\n                        position: new kakao.maps.LatLng(\n                            position.xLocation,\n                            position.yLocation\n                        ),\n                    })\n                })\n                console.log(markers)\n                console.log($(data.positions)[0])\n                $(data.positions).map((n, idx) => {\n                    console.log($(data.positions))\n                    // $(data.positions).map((el) => {\n                    //     console.log(el)\n                    //     if ($(data.positions)[el].weather === \"sunny\") {\n                    //         setWeatherCount({\n                    //             ...weatherCount,\n                    //             sunny: weatherCount.sunny + 1,\n                    //         })\n                    //     } else if ($(data.positions)[el].weather === \"cloudy\") {\n                    //         setWeatherCount({\n                    //             ...weatherCount,\n                    //             cloudy: weatherCount.cloudy + 1,\n                    //         })\n                    //     } else if ($(data.positions)[el].weather === \"rainy\") {\n                    //         setWeatherCount({\n                    //             ...weatherCount,\n                    //             rainy: weatherCount.rainy + 1,\n                    //         })\n                    //     } else if ($(data.positions)[el].weather === \"snowy\") {\n                    //         setWeatherCount({\n                    //             ...weatherCount,\n                    //             snowy: weatherCount.snowy + 1,\n                    //         })\n                    //     }\n                    // })\n\n                    var iwContent = `\n                <container style=\"border:3px solid pink; padding:5px; height:20rem; width:15rem; display:flex; flex-direction: row; overflow: auto;\">\n                    <box style=\"\">\n                        <h3>${$(data.positions)[n].post_title}</h3>\n                            <box style=\"display:flex; flex-direction: row;\">\n                            \n                        ${\n                            $(data.positions)[n].weather === \"sunny\"\n                                ? \"<img src='img/icons-write/sunny.png' style='width:2rem;'/>\"\n                                : $(data.positions)[n].weather === \"cloudy\"\n                                ? \"<img src='img/icons-write/cloudy.png' style='width:2rem;'/>\"\n                                : $(data.positions)[n].weather === \"rainy\"\n                                ? \"<img src='img/icons-write/rainy.png' style='width:2rem;'/>\"\n                                : $(data.positions)[n].weather === \"snowy\"\n                                ? \"<img src='img/icons-write/snowy.png' style='width:2rem;'/>\"\n                                : null\n                        }\n                        ${\n                            $(data.positions)[n].wind === \"breezy\"\n                                ? \"<img src='img/icons-write/breezy.png' style='width:2rem;'/>\"\n                                : $(data.positions)[n].wind === \"windy\"\n                                ? \"<img src='img/icons-write/windy.png' style='width:2rem;'/>\"\n                                : $(data.positions)[n].wind === \"strong\"\n                                ? \"<img src='img/icons-write/strong.png' style='width:2rem;'/>\"\n                                : null\n                        }\n                        ${\n                            $(data.positions)[n].temp === \"cold\"\n                                ? \"<img src='img/icons-write/cold.png' style='width:2rem;'/>\"\n                                : $(data.positions)[n].temp === \"hot\"\n                                ? \"<img src='img/icons-write/hot.png' style='width:2rem;'/>\"\n                                : null\n                        }\n                        ${\n                            $(data.positions)[n].outer_id === \"가디건\"\n                                ? \"<img src='img/codi/가디건.png' style='width:2rem;'/>\"\n                                : $(data.positions)[n].outer_id === \"자켓\"\n                                ? \"<img src='img/codi/자켓.png' style='width:2rem;'/>\"\n                                : $(data.positions)[n].outer_id === \"얇은코트\"\n                                ? \"<img src='img/codi/얇은코트.png' style='width:2rem;'/>\"\n                                : $(data.positions)[n].outer_id === \"두꺼운코트\"\n                                ? \"<img src='img/codi/두꺼운코트.png' style='width:2rem;'/>\"\n                                : $(data.positions)[n].outer_id === \"패딩\"\n                                ? \"<img src='img/codi/패딩.png' style='width:2rem;'/>\"\n                                : $(data.positions)[n].outer_id === \"default\"\n                                ? \"<img src='img/codi/default.png' style='width:2rem;'/>\"\n                                : null\n                        }\n                        ${\n                            $(data.positions)[n].top_id === \"반팔\"\n                                ? \"<img src='img/codi/반팔.png' style='width:2rem;'/>\"\n                                : $(data.positions)[n].top_id === \"셔츠\"\n                                ? \"<img src='img/codi/셔츠.png' style='width:2rem;'/>\"\n                                : $(data.positions)[n].top_id === \"민소매\"\n                                ? \"<img src='img/codi/민소매.png' style='width:2rem;'/>\"\n                                : $(data.positions)[n].top_id === \"긴팔\"\n                                ? \"<img src='img/codi/긴팔.png' style='width:2rem;'/>\"\n                                : $(data.positions)[n].top_id === \"니트\"\n                                ? \"<img src='img/codi/니트.png' style='width:2rem;'/>\"\n                                : null\n                        }\n                        ${\n                            $(data.positions)[n].bottom_id === \"반바지\"\n                                ? \"<img src='img/codi/반바지.png' style='width:2rem;'/>\"\n                                : $(data.positions)[n].bottom_id === \"긴바지\"\n                                ? \"<img src='img/codi/긴바지.png' style='width:2rem;'/>\"\n                                : null\n                        }\n                        </box>\n                        <img src=${\n                            $(data.positions)[n].post_photo\n                        } style=\"padding:5px; max-height:100%; max-width:100%;\"></img>\n                        <div>${$(data.positions)[n].post_content}</div>\n                    </box>\n                </container>\n\n\n                             `, // 인포윈도우에 표출될 내용으로 HTML 문자열이나 document element가 가능합니다\n                        iwRemoveable = true // removeable 속성을 ture 로 설정하면 인포윈도우를 닫을 수 있는 x버튼이 표시됩니다\n\n                    // 인포윈도우를 생성합니다\n                    var infowindow = new kakao.maps.InfoWindow({\n                        content: iwContent,\n                        removable: iwRemoveable,\n                    })\n                    kakao.maps.event.addListener(\n                        markers[n],\n                        \"click\",\n                        function () {\n                            // 마커 위에 인포윈도우를 표시합니다\n                            infowindow.open(map, markers[n])\n                        }\n                    )\n                })\n\n                clusterer.addMarkers(markers)\n            }\n        )\n\n        let timer\n        // 지도가 이동, 확대, 축소로 인해 지도영역이 변경되면 마지막 파라미터로 넘어온 함수를 호출하도록 이벤트를 등록합니다\n        kakao.maps.event.addListener(map, \"idle\", function () {\n            setisLoading(false)\n            if (timer) {\n                clearTimeout(timer)\n            }\n\n            timer = setTimeout(function () {\n                console.log(\"지도 위치가 변경 될 때마다 API요청\")\n                // setWeatherCount({\n                //     sunny: 0,\n                //     cloudy: 0,\n                //     rainy: 0,\n                //     snowy: 0,\n                // })\n                // 지도 영역정보를 얻어옵니다\n                var bounds = map.getBounds()\n\n                // 영역정보의 남서쪽 정보를 얻어옵니다\n                var swLatlng = bounds.getSouthWest()\n\n                // 영역정보의 북동쪽 정보를 얻어옵니다\n                var neLatlng = bounds.getNorthEast()\n\n                var message =\n                    \"영역좌표는 남서쪽 위도, 경도는  \" +\n                    swLatlng.toString() +\n                    \"이고\"\n                message +=\n                    \"북동쪽 위도, 경도는  \" + neLatlng.toString() + \"입니다 \"\n\n                // setTimeout(() => {\n                console.log(message)\n                console.log(swLatlng)\n                console.log(neLatlng)\n                axios({\n                    url:\n                        url +\n                        `/post/list?top=${neLatlng.La}&bottom=${swLatlng.La}&left=${swLatlng.Ma}&right=${neLatlng.Ma}`,\n                    // url: url + \"/signup\",\n                    method: \"get\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        // \"Content-Type\": \"text/plain\",\n                    },\n                    withCredentials: true,\n                }).then((res) => {\n                    console.log(res.data)\n                    setPostList(res.data)\n                    console.log(postList)\n                    let sunny = 0\n                    let cloudy = 0\n                    let rainy = 0\n                    let snowy = 0\n                    for (let n = 0; n < res.data.length; n++) {\n                        if (res.data[n].weather === \"sunny\") {\n                            sunny = sunny + 1\n                        } else if (res.data[n].weather === \"cloudy\") {\n                            cloudy++\n                        } else if (res.data[n].weather === \"rainy\") {\n                            rainy++\n                        } else if (res.data[n].weather === \"snowy\") {\n                            snowy++\n                        }\n                    }\n                    setWeatherCount({\n                        sunny: sunny,\n                        cloudy: cloudy,\n                        rainy: rainy,\n                        snowy: snowy,\n                    })\n                })\n\n                //지도중심좌표 기준으로 기상청 데이터를 받아올예정 -hoon\n                var latlng = map.getCenter()\n\n                axios({\n                    url: url + `/map2?lat=${latlng.Ma}&lon=${latlng.La}`,\n                    // url: url + \"/signup\",\n                    method: \"get\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        // \"Content-Type\": \"text/plain\",\n                    },\n                    withCredentials: true,\n                }).then((res) => {\n                    console.log(res.data)\n                    setweatherApi(res.data.fcstValue)\n                })\n            }, 1000)\n            setisLoading(true)\n        })\n    }, [\n        kakao.maps.LatLng,\n        kakao.maps.Marker,\n        kakao.maps.event,\n        kakao.maps.Map,\n        searchWord,\n        weatherFilter,\n    ])\n\n    const Box = styled.div`\n        // display: flex;\n        // flex-direction: row;\n        width: 50%;\n        // height: 50%;\n        // border: 1px solid black;\n        @media screen and (min-width: 1081px) {\n        }\n    `\n    const Box2 = styled.div`\n        // display: flex;\n        // flex-direction: row;\n        // width: 10000px;\n\n        width: 50%;\n\n        @media screen and (min-width: 1081px) {\n        }\n    `\n    const EmoticonBox = styled.div`\n        display: flex;\n        flex-direction: row;\n\n        @media screen and (min-width: 1081px) {\n        }\n    `\n    const PostTitle = styled.div`\n        // display: flex;\n        // flex-direction: row;\n\n        // border: 1px solid black;\n        text-align: center;\n        background-color: pink;\n        border-radius: 10%;\n\n        @media screen and (min-width: 1081px) {\n        }\n    `\n    const PostContent = styled.div`\n        // display: flex;\n        // flex-direction: row;\n\n        @media screen and (min-width: 1081px) {\n        }\n    `\n    const PostBox = styled.div`\n        display: flex;\n        flex-direction: row;\n        width: 100%;\n\n        padding: 0.5rem;\n\n        &:hover {\n            background-color: #f5f5f5;\n        }\n\n        @media screen and (min-width: 1081px) {\n        }\n    `\n    const PostImg = styled.img`\n        width: 100%;\n        border-radius: 20%;\n\n        @media screen and (min-width: 1081px) {\n        }\n    `\n    const IconImg = styled.img`\n        width: 20%;\n        cursor: pointer;\n        @media screen and (min-width: 1081px) {\n        }\n    `\n    const LoadingBoxDiv = styled.div`\n        // margin-top: 50%;\n        display: flex;\n        justify-content: center;\n        align-item: center;\n        width: 100%;\n        // border: 1px solid black;\n        flex-direction: column;\n        @media screen and (min-width: 1081px) {\n            width: 100%;\n            display: flex;\n            justify-content: center;\n            align-item: center;\n            width: 100%;\n            border: 1px solid black;\n            flex-direction: column;\n        }\n    `\n    const Button = styled.button`\n        background-color: ${(props) => (props.bgGrey ? \"#E0E0E0\" : \"white\")};\n        color: ${(props) => (props.bgGrey || props.isText ? \"black\" : \"grey\")};\n        font-size: ${(props) => (props.isText ? \"1.2rem\" : \"1.6rem\")};\n        margin: 0.1rem;\n        // border: 1px solid black;\n    `\n    console.log(weatherCount)\n    const data = {\n        labels: [\"맑음\", \"구름\", \"비\", \"눈\"],\n        datasets: [\n            {\n                data: [\n                    weatherCount.sunny,\n                    weatherCount.cloudy,\n                    weatherCount.rainy,\n                    weatherCount.snowy,\n                ],\n                backgroundColor: [\"#FF6384\", \"gray\", \"#36A2EB\", \"silver\"],\n                hoverBackgroundColor: [\"yellow\", \"black\", \"blue\", \"#d9d9d9\"],\n            },\n        ],\n    }\n    const data2 = {\n        labels: [\"동네 예보\", \"기상청\"],\n        datasets: [\n            {\n                label: \"강수 확률\",\n                backgroundColor: \"#697cfa\",\n                borderColor: \"#0022ff\",\n                borderWidth: 1,\n                hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\n                hoverBorderColor: \"rgba(255,99,132,1)\",\n                data: [\n                    ((weatherCount.rainy + weatherCount.snowy) /\n                        (weatherCount.sunny +\n                            weatherCount.cloudy +\n                            weatherCount.rainy +\n                            weatherCount.snowy)) *\n                        100,\n                    weatherApi,\n                ],\n            },\n        ],\n    }\n\n    const [isOnOff, setisOnOff] = useState(true)\n\n    // postbox를 클릭하면 postread로 연결됩니다\n    const postBoxHandler = (e) => {\n        let elem = e.target\n\n        while (!elem.classList.contains(\"postbox\")) {\n            elem = elem.parentNode\n            if (elem.classList.contains(\"mapModal\")) {\n                elem = null\n                return\n            }\n        }\n\n        // console.log('**mapbox click id**',elem.id);\n        dispatch(updatePostId(elem.id))\n        history.push({\n            pathname: \"/postread\",\n            state: { postId: elem.id },\n        })\n    }\n    // postbox를 클릭하면 postread로 연결됩니다\n\n    return (\n        <>\n            <ImgContainer id=\"map\"></ImgContainer>\n            {isOnOff ? (\n                <SlideModal>\n                    <Button>\n                        <FontAwesomeIcon\n                            onClick={() => setisOnOff(false)}\n                            icon={faChevronDown}\n                        />\n                    </Button>\n                </SlideModal>\n            ) : (\n                <SlideModal bottom={\"70px;\"}>\n                    <Button>\n                        <FontAwesomeIcon\n                            onClick={() => setisOnOff(true)}\n                            icon={faChevronUp}\n                        />\n                    </Button>\n                </SlideModal>\n            )}\n            {isOnOff ? (\n                <PostListModal>\n                    {!isLoading ? (\n                        <LoadingBoxDiv>\n                            <LoadingSpinner size={\"100%;\"} />\n                        </LoadingBoxDiv>\n                    ) : (\n                        <div className=\"mapModal\">\n                            <GraphTitleDiv>현재동네 날씨정보</GraphTitleDiv>\n                            <GraphTitle>\n                                <GraphTitleDiv2>\n                                    동네 예보 날씨 비율\n                                </GraphTitleDiv2>\n                                <GraphTitleDiv2>\n                                    동네 예보 vs 기상청예보\n                                </GraphTitleDiv2>\n                            </GraphTitle>\n                            <GraphModal>\n                                <Doughnut data={data} />\n                                <BarGraphFlex>\n                                    <BarGraphchild>\n                                        <Bar data={data2} />\n                                    </BarGraphchild>\n                                </BarGraphFlex>\n                            </GraphModal>\n                            <GraphTitleDiv>동네 예보</GraphTitleDiv>\n                            {postList.map((post) => {\n                                return (\n                                    // <PostBox onClick={() => console.log(post)}>\n                                    <PostBox\n                                        className=\"postbox\"\n                                        onClick={postBoxHandler}\n                                        key={post.id}\n                                        id={post.id}\n                                    >\n                                        <Box className=\"box\">\n                                            <PostImg\n                                                className=\"postImage\"\n                                                src={`${post.post_photo}`}\n                                            />\n                                            <EmoticonBox>\n                                                <IconImg\n                                                    src={`/img/icons-write/${post.weather}.png`}\n                                                />\n                                                <IconImg\n                                                    src={`/img/icons-write/${post.wind}.png`}\n                                                />\n                                                <IconImg\n                                                    src={`/img/icons-write/${post.temp}.png`}\n                                                />\n                                                <IconImg\n                                                    src={`/img/codi/${post.outer_id}.png`}\n                                                />\n                                                <IconImg\n                                                    src={`/img/codi/${post.top_id}.png`}\n                                                />\n                                                <IconImg\n                                                    src={`/img/codi/${post.bottom_id}.png`}\n                                                />\n                                            </EmoticonBox>\n                                        </Box>\n                                        <Box2>\n                                            <PostTitle>{`${post.post_title}`}</PostTitle>\n                                            <PostContent>{`${post.post_content}`}</PostContent>\n                                        </Box2>\n                                    </PostBox>\n                                )\n                            })}\n                        </div>\n                    )}\n                </PostListModal>\n            ) : (\n                <></>\n            )}\n        </>\n    )\n}\n","import React, { useEffect } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport styled from \"styled-components\"\nimport MapBox from \"../components/MapBox\"\nimport { changeMapPage } from \"../actions/index\"\n\nconst Container = styled.div`\n    background-color: var(--page-bg-color);\n    width: 100%;\n\n    position: relative;\n\n    @media screen and (min-width: 1081px) {\n        // max-width: 100%;\n        width: 100%;\n        position: relative;\n    }\n`\n\nexport default function Map() {\n    const dispatch = useDispatch()\n\n    // const { userInfo } = useSelector((state) => state.itemReducer)\n    // dispatch(changeUser(axiosData))\n    // {/* <Container2 src=\"/img/fhd.png\" /> */}\n\n    useEffect(() => {\n        dispatch(changeMapPage(true))\n    }, [])\n    return (\n        <Container className=\"mapcontainer\">\n            <MapBox></MapBox>\n        </Container>\n    )\n}\n","// 스크롤 탑 버튼\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\"\n\nconst Button = styled.div`\n  /* width: 100%; */\n  height: 200px;\n  position: fixed;\n  z-index: 100;\n  display: flex;\n  justify-content: flex-end;\n  right: 0;\n  bottom: 0;\n  transition: all 0.3s;\n  display: none;\n  img{\n    width: 5rem;\n    height: 5rem;\n    margin-right: 2vh;\n    opacity: 0.7;\n    background-color: #FFFFFF;\n    border-radius: 50%;\n  }\n\n  @media screen and (max-width: 1081px) {\n    display: block;\n    height: 170px;\n    img{\n      width: 4rem;\n      height: 4rem;\n      margin-right: 3vh;\n    }\n  }\n  @media screen and (max-width: 375px) {\n    height: 130px;\n    img{\n      width: 3rem;\n      height: 3rem;\n      margin-right: 2vh;\n    }\n  }\n`\n\nexport default function TopButton() {\n  // top button\n  const [ScrollY, setScrollY] = useState(0);\n  const [btnStatus, setBtnStatus] = useState(false);  // 버튼 상태\n\n  // console.log(window.pageYOffset)\n  // console.log(btnStatus)\n\n  const handleFollow = () => {\n    setScrollY(window.scrollY)\n    if(ScrollY > 200){  // 200 이상이면 버튼이 보임\n      setBtnStatus(true)\n    }else{  // 200 이하일때 버튼이 사라짐\n      setBtnStatus(false)\n    }\n  }\n\n  // 클릭시 위로 올라감\n  const scrollToTop = () => {\n    // e.preventDefault() // 새로고침 방지\n    window.scrollTo({top: 0, behavior: 'smooth'}) // 위로 올라감\n    setScrollY(0);  // 올라가면 다시 0으로 초기화\n    setBtnStatus(false); // 버튼 다시 사라짐\n  }\n\n  useEffect(() => {\n    window.addEventListener('scroll', handleFollow)\n    return () => {\n      window.removeEventListener('scroll', handleFollow)\n    }\n  })\n\n  return(\n    <Button>\n      {\n        btnStatus?\n        <img\n          src={`${process.env.PUBLIC_URL}img/scroll-up.png`} alt=\"top\"\n          onClick={scrollToTop}\n        /> : null\n      }\n    </Button>\n  )\n}","import React, { useState, useEffect } from \"react\"\nimport styled from \"styled-components\"\nimport axios from \"axios\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { updateWeatherInfo, updatePostId } from \"../actions/index\"\nimport TopButton from \"../components/TopButton\";\nimport { useHistory } from \"react-router-dom\"\nimport { nanoid } from 'nanoid';\n// import Loading from \"./Loading\";\n\nconst HomeContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    height: 100vh;\n    padding-right: 5vh;\n    background-color: var(--page-bg-color);\n    ul {\n      list-style: none;\n    }\n\n    @media screen and (min-width: 3000px){\n      width: 80%;\n    }\n\n    @media screen and (min-width: 1500px) {\n        margin: 0 auto;\n        width: 90%;\n        border: 1px solid #aaa;\n    }\n    @media screen and (max-width: 1081px) {\n        flex-direction: column;\n        margin: 0 auto;\n        padding: 0 2vw;\n        border: 1px solid #aaa;\n        width: 85%;\n        height: 100%;\n    }\n    @media screen and (max-width: 900px) {\n        width: 100%;\n    }\n`\n\n// 날짜\nconst TodaysDate = styled.div`\n  background-color: var(--page-bg-color);\n  margin: 0 auto;\n  height: 2rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  #curDate{\n    padding-left: 2vw;\n  }\n  #curLocation{\n    padding-right: 2vw;\n  }\n\n  @media screen and (min-width: 1500px) {\n    width: 90%;\n    #curDate{\n      padding-left: 0;\n    }\n    #curLocation{\n      padding-right: 0;\n    }\n  }\n  @media screen and (max-width: 1081px) {\n    width: 85%;\n  }\n  @media screen and (max-width: 900px) {\n    width: 100%;\n  }\n  @media screen and (max-width: 500px) {\n    font-size: 15px;\n  }\n  @media screen and (max-width: 375px) {\n    font-size: 12px;\n  }\n`\n\n// 왼쪽 container\nconst LeftContainer1 = styled.div`\ndisplay: flex;\ngap: 0.1rem;\nflex-direction: row;\nwidth: 40vw;\nflex-wrap: wrap;\n.weatherInfo {\n  text-align: center;\n  line-height: 3rem;\n  li{\n    align-items: center;\n  }\n  img{\n    width: 2rem;\n    height: 2rem;\n    vertical-align: middle;\n  }\n}\n.codiInfo {\n  text-align: center;\n}\n@media screen and (max-width: 1081px) {\n  margin: 0 auto;\n  width: 100%;\n}\n@media screen and (max-width: 300px) {\n  img{\n    width: 3rem;\n    height: 3rem;\n  }\n}\n`;\n\n// 00구 주민예보\nconst LeftNav1 = styled.nav`\n  text-align: center;\n  flex-basis: 310px;\n  flex-grow: 1;\n  margin: 30px 5px 5px 5px;\n  padding: 10px;\n  line-height: 3vh;\n  height: 25%;\n  background-color: var(--page-bg-color);\n  p {\n    font-size: 1.2rem;\n    margin-bottom: 1vh;\n  }\n  @media screen and (max-width: 1081px) {\n    margin-top: 5px;\n  }\n\n  @media screen and (max-width: 375px) {\n    margin-top: 10px;\n    line-height: 4vh;\n    border-bottom: 1px solid #8e8e8e ;\n  }\n`\n// 기상청 일기예보\nconst LeftNav2 = styled.div`\n  text-align: center;\n  flex-basis: 310px;\n  flex-grow: 1;\n  margin: 5px;\n  padding: 10px;\n  line-height: 3vh;\n  height: 35%;\n  background-color: var(--page-bg-color);\n  p {\n    font-size: 1.2rem;\n    margin-bottom: 1vh;\n  }\n  @media screen and (max-width: 375px) {\n    line-height: 4vh;\n    border-bottom: 1px solid #8e8e8e ;\n  }\n`\n// 00구 날씨 기반 추천 코디\nconst LeftNav3 = styled.div`\n  text-align: center;\n  flex-basis: 310px;\n  flex-grow: 1;\n  margin: 3px;\n  padding: 10px;\n  background-color: var(--page-bg-color);\n  height: 35%;\n  p {\n    font-size: 1.2rem;\n    margin: 2vh 0;\n  }\n  .codiInfo{\n    height: 80%;\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n  }\n  @media screen and (max-width: 1081px) {\n    height: 30vh;\n    flex-basis: 100vh;\n    flex-grow: 2;\n  }\n  @media screen and (max-width: 375px) {\n    p {\n      font-size: 1.2rem;\n      margin: 2vh 0;\n    }\n    .codiInfo {\n      /* border: 1px solid hotpink; */\n      height: 80%;\n      display: flex;\n      justify-content: space-around;\n      align-items: center;\n    }\n    @media screen and (max-width: 1081px) {\n      height: 30vh;\n      flex-basis: 100vh;\n      flex-grow: 2;\n    }\n    @media screen and (max-width: 375px) {\n      border-bottom: 1px solid #8e8e8e ;\n      p {\n        font-size: 1rem;\n        margin: 1vh 0;\n      }\n    }\n  }\n`\n// 코디 이미지\nconst Codi = styled.img`\n  width: 7rem;\n  height: 7rem;\n  border: purple;\n  @media screen and (max-width: 400px) {\n    width: 5rem;\n    height: 5rem;\n  }\n`\n\n// 오른쪽 container\nconst RightContainer = styled.div`\n  display: grid;\n  /* height:100vh; */\n  width: 80vw;\n  grid-template-rows: 0.5fr 2.3fr 2.3fr 2.3fr;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-area: \n  \"nav nav\"\n  \"main main\"\n  \"main main\"\n  ;\n  grid-gap:0.1rem;\n  transition: all 0.01s ease-in-out;\n  .userPost{\n    &:hover{\n      border-bottom: 1px solid #FAFAFA;\n    }\n  }\n  \n  @media (max-width: 600px) {\n    .userPost:nth-last-child(1){\n      display: none;\n    }\n    grid-template-rows: 0.5fr 1.5fr 1.5fr 1.5fr 1.5fr;\n    grid-template-columns: 1fr 1fr;\n    grid-template-areas:\n      \"nav\"\n      \"main\";\n  }\n  .userPost {\n    text-align: center;\n  }\n  img{\n    width: 100%;\n    height: 100%;\n  }\n  @media screen and (max-width: 1081px) {\n    margin: 0 auto;\n    width: 100%;\n  }\n`;\n\n\n// '00구 주민예보글'\nconst RightNav1 = styled.nav`\n    margin-top: 0.8rem;\n    text-align: center;\n    grid-template-columns: 1fr 1fr;\n    grid-template-areas: \"nav nav\";\n    grid-column: 1 / 4;\n    grid-row: 1 / 2;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 1vh 1vh;\n    #location {\n        font-size: 1.5rem;\n        color: #8e8e8e;\n    }\n    #moreView {\n        color: #336fc9;\n    }\n    @media screen and (max-width: 600px) {\n        grid-column: 1 / 3;\n        #location {\n            font-size: 1rem;\n        }\n    }\n`\n\nlet url = process.env.REACT_APP_LOCAL_URL\nif (!url) url = \"https://thereweather.space\"\n\nexport default function Home() {\n  const dispatch = useDispatch()\n  const history = useHistory()\n  const { item, curLocation } = useSelector((state) => state.itemReducer)\n  console.log(item)\n  console.log('카카오 위도 : ', curLocation.lat); // map 페이지 거쳐야함\n  console.log('카카오 경도 : ', curLocation.lon);\n\n  // const { userInfo } = useSelector((state) => state.itemReducer)\n  // dispatch(changeUser(axiosData))\n\n  const [weatherData, setWeatherData] = useState()\n\n  useEffect(() => {\n    if (navigator.geolocation) {\n      // GeoLocation을 이용해서 접속 위치를 얻어옵니다\n      navigator.geolocation.getCurrentPosition(function (position) {\n          let lat = position.coords.latitude, // 위도\n              lon = position.coords.longitude // 경도\n          console.log(lat, lon) //브라우저에 찍힘        \n          axios({\n              url: url + \"/map\",\n              method: \"post\",   \n              data: { lat: lat, lon: lon },\n              withCredentials: true\n          })\n          .then((res) => {\n            //console.log(res.data)\n            //console.log(res.data.item)\n            setWeatherData(res.data)\n            dispatch(updateWeatherInfo(res.data))    \n          })\n      })\n    };\n  }, [])\n\n  // 현재 위치 주소\n  const [curAddress, setcurAddress] = useState('');\n  // 최근 게시물(위도, 경도, 지역범위 확인)\n  const [currentPosts, setcurrentPosts] = useState([])\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        let lat = curLocation.lat, // 위도\n            lon = curLocation.lon // 경도\n        // 37.5525698 127.0783197\n        /*\n          소수 7째자리까지 : Math.floor(a * 10000000) /10000000\n\n          남서쪽 위도, 경도는  (37.5262196, 127.0449971)이고\n          북동쪽 위도, 경도는  (37.5684781, 127.1200016)입니다 \n        */\n\n        // left(37.5262196) , right(37.5684781) : 0.0422585(0.04225850000000264), 각 0.02112925\n        // bottom(127.0449971) , top(127.1200016) : 0.0750045(0.07500449999999148), 각 0.03750225\n        // 현재 위도, 경도의 동,서,남,북 범위 설정 (소수 7째자리까지)\n        let right = lat + 0.02112925\n        let left = lat - 0.02112925\n        let top = lon + 0.03750225\n        let bottom = lon - 0.03750225\n\n        console.log(right, left, top, bottom);\n\n        axios({\n          url: url + \"/home\",\n          method: \"post\",\n          data: {\n            lat: lat,\n            lon: lon,\n            right: right,\n            left: left,\n            top: top,\n            bottom: bottom,\n          },\n          withCredentials: true\n        })\n        .then((res) => {\n          // console.log('res : ', res.data.address);\n          console.log('address : ', res.data.address)\n          console.log('게시글 데이터 : ', res.data.curtPost);\n          setcurrentPosts(res.data.curtPost)  // 주민예보글 렌더링 부분\n          setcurAddress(res.data.address)\n\n          // dispatch(homePost(res.data))\n        })\n      })\n    };\n  }, [])\n\n    // 날짜\n    const [todaysDate, settodaysDate] = useState(\"\")\n    useEffect(() => {\n        let date = new Date()\n        const formatDate = (currentDate) => {\n            let formatted = `${currentDate.getFullYear()}년 ${\n                currentDate.getMonth() + 1\n            }월 ${currentDate.getDate()}일`\n            return formatted\n        }\n        settodaysDate(formatDate(date))\n    })\n\n  // 날씨, 코디 가져오기, 추후 수정\n  let [currentTemp, setcurrentTemp] = useState('')\n  let [currentWind, setcurrentWind] = useState('')\n  let [currentWeather, setcurrentWeather] = useState('')\n  let [currentOuter, setcurrentOuter] = useState('')\n  let [currentTop, setcurrentTop] = useState('')\n  let [currentBottom, setcurrentBottom] = useState('')\n  \n  useEffect(() => {\n    let tempArr = []  // 체감온도\n    let windArr = []  // 바람세기\n    let weatherArr = [] // 날씨상태\n    let outerArr = []  // 겉옷\n    let topArr = []  // 상의\n    let bottomArr = [] // 하의\n\n    // 해당 key만 가져오기\n    for(let i = 0; i < currentPosts.length; i++){\n      tempArr.push(currentPosts[i].temp)  // temp키만 가져옴\n      windArr.push(currentPosts[i].wind)\n      weatherArr.push(currentPosts[i].weather)\n\n      outerArr.push(currentPosts[i].outer_id)\n      topArr.push(currentPosts[i].top_id)\n      bottomArr.push(currentPosts[i].bottom_id)\n    }\n\n    // 해당 키의 중복개수세는 함수\n    function getCount(arr){\n      return arr.reduce((pv, cv) => {\n        pv[cv] = (pv[cv] || 0) + 1;\n        return pv;\n      }, {})\n    }\n\n    let tempObj = getCount(tempArr) // {hot: 6, cold: 3}\n    let windObj = getCount(windArr)\n    let weatherObj = getCount(weatherArr)\n    let outerObj = getCount(outerArr)\n    let topObj = getCount(topArr)\n    let bottomObj = getCount(bottomArr)\n\n    // 최대값구하기 : 객체 -> 배열\n    let newTempArr = Object.values(tempObj) // [6, 3]\n    let newWindArr = Object.values(windObj)\n    let newWeatherArr = Object.values(weatherObj)\n    let newOuterArr = Object.values(outerObj)\n    let newTopArr = Object.values(topObj)\n    let newBottomArr = Object.values(bottomObj)\n    // 최대값\n    let tempMaxNum = Math.max(...newTempArr) // 6\n    let windMaxNum = Math.max(...newWindArr)\n    let weatherMaxNum = Math.max(...newWeatherArr)\n    let outerMaxNum = Math.max(...newOuterArr)\n    let topMaxNum = Math.max(...newTopArr)\n    let bottomMaxNum = Math.max(...newBottomArr)\n\n    // 최대값과 일치하는 key 추출\n    function matchKey(obj, maxNum){ // 객체, 최대값\n      for(let key in obj){\n        if(obj[key] === maxNum){\n          return key\n        }\n      }\n    }\n    \n    // 화면에 나타날 key\n    let maxTemp = matchKey(tempObj, tempMaxNum)\n    let maxWind = matchKey(windObj, windMaxNum)\n    let maxWeather = matchKey(weatherObj, weatherMaxNum)\n    let maxOuter = matchKey(outerObj, outerMaxNum)\n    let maxTop = matchKey(topObj, topMaxNum)\n    let maxBottom = matchKey(bottomObj, bottomMaxNum)\n\n    setcurrentTemp(maxTemp)\n    setcurrentWind(maxWind)\n    setcurrentWeather(maxWeather)\n    setcurrentOuter(maxOuter)\n    setcurrentTop(maxTop)\n    setcurrentBottom(maxBottom)\n\n    console.log('currentTemp : ', currentTemp);\n    console.log('currentWind : ', currentWind);\n    console.log('currentWeather : ', currentWeather);\n    console.log('outer : ', currentOuter);  // 안나옴\n  })\n\n  // 게시물 사진 클릭\n  const photoClickHandler = (e) => {\n    // console.log(e.target.id); // 게시물id 전달\n    let elem = e.target;\n\n    dispatch(updatePostId(elem.id));\n    history.push({\n      pathname: '/postread',\n      state: {postId: elem.id}\n    })\n  }\n\n\n    return (\n        <div className=\"homecontainer\">\n            {/* <Loading /> */}\n            <TopButton/>\n            <TodaysDate>\n              <p id=\"curDate\">날짜 : {todaysDate}</p>\n              <p id=\"curLocation\">위치 : {curAddress}</p>\n            </TodaysDate>\n            <HomeContainer>\n                <LeftContainer1>\n                    <LeftNav1>\n                        <p>주민예보</p>\n                        <div className=\"weatherInfo\">\n                          {\n                            currentTemp === undefined && currentWind === undefined && currentWeather === undefined ?\n                            <p>현재 날씨 데이터가 없습니다 :(</p>\n                            :\n                            <ul>\n                              <li>\n                                <span>현재위치 체감온도 </span>\n                                <img src={`${process.env.PUBLIC_URL}img/icons-write/${currentTemp}.png`} alt=\"온도\"/>\n                              </li>\n                              <li>\n                                <span>현재위치 바람세기 </span>\n                                <img src={`${process.env.PUBLIC_URL}img/icons-write/${currentWind}.png`} alt=\"바람\"/>\n                              </li>\n                              <li>\n                                <span>현재위치 날씨상태 </span>\n                                <img src={`${process.env.PUBLIC_URL}img/icons-write/${currentWeather}.png`} alt=\"날씨\"/>\n                              </li>\n                            </ul>\n                          }\n\n                        </div>\n                    </LeftNav1>\n                    <LeftNav2>\n                    {/* <p>기상청 일기예보</p>\n                      { weatherData && weatherData.item.map((info, index) => {\n                        return (\n                          <div className=\"weatherInfo\" key={index}>\n                           <ul>\n                            <li className=\"weathers date\">날짜: {info.baseDate[0]}</li> \n                            <li className=\"weathers time\">기준 예보시각: {info.baseTime[0]}</li> \n                           </ul>\n                          </div>\n\n                        )\n                      })} */}\n                        <p>기상청 일기예보</p>\n                        <div className=\"weatherInfo\">\n                        <ul>\n                          {/* {console.log(weatherData.item)}  */}\n                          {/* weatherData -> {item: Array(30)}, weatherData.item -> [ baseDate: '20211106',baseTime: '2130',category: 'T1H', fcstDate: '20211107', fcstTime: '0300', fcstValue: '10', nx: 59, ny: 128, ... ] */}\n                          {/* { weatherData && weatherData.item.map((info, idx) => { return <li kye={idx}>날짜:{info.baseDate}</li> })[0] }\n                          { weatherData && weatherData.item.map((info, idx) => { return <li key={idx}>기준 예보시각: {info.baseTime}</li> })[0] }\n                          { weatherData && weatherData.item.map((info, idx) => { return <li key={idx}>현재위치 기온: {info.fcstValue}℃</li> })[24] } \n                          { weatherData && weatherData.item.map((info, idx) => { return <li key={idx}>현재위치 바람세기: {info.fcstValue  < \"9\" ? \"바람세기 약하거나 약간 강함\" : info.fcstValue  < \"14\" ? \"바람세기 강함\" : \"바람세기 매우 강함\" }</li> })[54] } \n                          { weatherData && weatherData.item.map((info, idx) => { return <li key={idx}>현재위치 날씨상태: {info.fcstValue === \"0\" ? \"맑음\" : info.fcstValue === \"1\" ? \"비\" : info.fcstValue === \"3\" ? \"눈\" : info.fcstValue === \"5\" ? \"빗방울\" : \"눈날림\" }</li> })[6] }  */}\n\n                          { weatherData && weatherData.item.map((info) => { return <li key={nanoid()}>날짜:{info.baseDate}</li> })[0] }\n                          { weatherData && weatherData.item.map((info) => { return <li key={nanoid()}>기준 예보시각: {info.baseTime}</li> })[0] }\n                          { weatherData && weatherData.item.map((info) => { return <li key={nanoid()}>현재위치 기온: {info.fcstValue}℃</li> })[24] } \n                          { weatherData && weatherData.item.map((info) => { return <li key={nanoid()}>현재위치 바람세기: {info.fcstValue  < \"9\" ? \"바람세기 약하거나 약간 강함\" : info.fcstValue  < \"14\" ? \"바람세기 강함\" : \"바람세기 매우 강함\" }</li> })[54] } \n                          { weatherData && weatherData.item.map((info) => { return <li key={nanoid()}>현재위치 날씨상태: {info.fcstValue === \"0\" ? \"맑음\" : info.fcstValue === \"1\" ? \"비\" : info.fcstValue === \"3\" ? \"눈\" : info.fcstValue === \"5\" ? \"빗방울\" : \"눈날림\" }</li> })[6] } \n                        </ul> \n                        </div>\n                    </LeftNav2>\n                    <LeftNav3>\n                        <p>날씨 기반 추천 코디</p>\n                        <div className=\"codiInfo\">\n                          {\n                            currentOuter=== undefined || currentTop === undefined || currentBottom === undefined ?\n                              <p>현재 위치 데이터가 없습니다. 현재위치의 첫 게시물을 올려보세요👍</p>\n                            : \n                            <>\n                              <Codi src={`${process.env.PUBLIC_URL}img/codi/${currentOuter}.png`} alt=\"겉옷\"></Codi>\n                              <Codi src={`${process.env.PUBLIC_URL}img/codi/${currentTop}.png`} alt=\"상의\"></Codi>\n                              <Codi src={`${process.env.PUBLIC_URL}img/codi/${currentBottom}.png`} alt=\"하의\"></Codi>\n                            </>\n                          }\n\n                        </div>\n                    </LeftNav3>\n                </LeftContainer1>\n                  <RightContainer>\n                      <RightNav1>\n                        <span id=\"location\">주민 예보글</span>\n                      </RightNav1>\n                      {currentPosts.map((el) => (\n                          <div className=\"userPost\" key={el.id}>\n                            <img src={el.post_photo} id={el.id} onClick={photoClickHandler}/>\n                          </div>\n                      ))}\n                  </RightContainer>\n            </HomeContainer>\n        </div>\n    )\n}\n","// import { useState, useEffect } from \"react\"\n// import styled from \"styled-components\"\n// import { useDispatch } from \"react-redux\"\n// import { changeBookmark } from \"../actions/index\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHeart } from \"@fortawesome/free-solid-svg-icons\";\n\n// 북마크 하트 버튼\n// const Container = styled.img`\n\n// `;\n\nexport const Bookmark = ({ like, bookmarkHandler, color })  => {\n\n  return(\n    <button className=\"bookmarkContainer\" onClick={bookmarkHandler}>\n      <FontAwesomeIcon\n        icon={faHeart}\n        className=\"heart\"\n        size=\"3x\"\n        color={color}\n      />\n    </button>\n  )\n}\n\n// 사용 예시\n// const [bookmarked, setBookmarked] = useState(false);\n// const bookmarkHandler = (e) => {\n//   setBookmarked(prev => !prev);\n// }\n// <Bookmark bookmarkHandler={bookmarkHandler} color={bookmarked ? '#eb425b' : '#aaa'}/>","import { useEffect, useState } from \"react\";\nimport styled from \"styled-components\"\n\nconst PaginationContainer = styled.div.attrs({\n  className: \"pagination\"\n})`\n  margin-bottom: 2rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: #A1A1A1;\n  font-weight: bold;\n  font-size: 1.5rem;\n`;\n\nconst PageNumbersList = styled.ul.attrs({\n  className: \"pageNumbersList\"\n})`\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  list-style-type: none;\n  padding: 0 1rem;\n`;\n\nconst ArrowButton = styled.span.attrs({\n  className: \"arrow\"\n})`\n  &:hover {\n    color: black;\n  }\n`;\n\nconst PageNumberItem = styled.li.attrs({\n  className: \"pageNumberItem\"\n})`\n  padding: 0 1rem;\n  &:hover {\n    color: black;\n  }\n`;\n\nexport default function Pagination({dataLength, itemsPerPage, numberButtonClickHandler}) {\n  const numberOfPages = Math.ceil(dataLength / itemsPerPage); // 총 페이지 수\n  const numberArr = new Array(numberOfPages).fill(0).map((el, idx) => idx + 1); // 1~총페이지 수로 채워진 배열\n  let unit;\n  if (numberOfPages < 5) {\n    unit = numberOfPages+1;\n  } else {\n    unit = 5;\n  }\n  const [startIdx, setStartIdx] = useState(0);\n  const [lastIdx, setLastIdx] = useState(unit);\n  const cutArrInit = new Array(unit).fill(0).map((el, idx) => idx + 1);\n  const [cutArr, setCutArr] = useState(cutArrInit);\n\n  const prevHandler = () => {\n    if(startIdx === 0) return;\n    setStartIdx(prev => prev - unit);\n    setLastIdx(prev => prev - unit);\n  }\n\n  const nextHandler = () => {\n    let tempIdxEnd = Math.ceil(numberArr.length/unit) * unit;\n    if(lastIdx === tempIdxEnd) return;\n    setStartIdx(prev => prev + unit);\n    setLastIdx(prev => prev + unit);\n  }\n\n  useEffect(()=>{\n    let tempIdxEnd = Math.ceil(numberArr.length/unit) * unit;\n    if(startIdx >= itemsPerPage || lastIdx <= tempIdxEnd) {\n      const result = numberArr.slice(startIdx, lastIdx);\n      setCutArr(prev => result);\n    }\n  }, [startIdx, lastIdx])\n\n  return (\n    <PaginationContainer>\n      <ArrowButton className=\"prevButton\" onClick={prevHandler}>\n        ⬅️\n      </ArrowButton>\n      <PageNumbersList>\n        {\n          cutArr.map(number => {\n            return (\n              <PageNumberItem\n                key={number}\n                id={number}\n                onClick={() => {\n                  numberButtonClickHandler(number);\n                }}\n              >\n                {number}\n              </PageNumberItem>\n            );\n          })\n        }\n      </PageNumbersList>\n      <ArrowButton className=\"nextButton\" onClick={nextHandler}>\n        ➡️\n      </ArrowButton>\n    </PaginationContainer>\n  );\n}","import React, { useState, useEffect } from \"react\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport axios from \"axios\"\nimport styled from \"styled-components\"\nimport { Bookmark } from \"../components/Heart\"\nimport { updatePostId } from \"../actions/index\"\nimport { useHistory } from \"react-router\"\nimport { default as PaginationWithArrow } from \"../components/Pagination\"\n\n/*\n  [수정]\n  - 페이지네이션\n  - 주석 정리\n  - 레이아웃 정리\n  - 클릭이벤트\n  - import 주석 정리\n*/\n\nconst Outer = styled.div`\n    // 데스크탑\n    display: flex;\n    flex-direction: column;\n    justify-content: start;\n    align-items: center;\n    background-color: var(--page-bg-color);\n    width: 100vw;\n    min-height: 100vh;\n    // padding-top: 100px;\n\n    @media screen and (max-width: 1081px) {\n        // 1081 이하일 때 // 모바일\n        // padding-top: 3vh;\n    }\n`\n\n// 그리드\nconst Container = styled.div`\n    display: grid;\n    justify-content: center;\n    align-items: center;\n    gap: 3rem;\n    grid-template-columns: repeat(2, 40vw);\n    margin: 5rem;\n    // grid-template-rows: 3fr 3fr;\n    // grid-template-columns: 1fr 1fr;\n    // grid-template-areas:\n    // \"div div\"\n    // \"div div\";\n    /* height: 83vh; */\n    // (max-width: 600px)\n    // margin-left: 3vw;\n    // margin-right: 3vw;\n    /* overflow: auto; */\n\n    .BookMarkContainer {\n        gap: 0.2rem;\n        background-color: rgba(255, 255, 255, 0.6);\n        display: flex;\n        justify-content: space-around;\n        border: 1px solid #dbdbdb;\n        border-radius: 3px;\n    }\n\n    @media (max-width: 1081px) {\n        margin: 3rem 2rem;\n        gap: 2rem;\n        grid-template-columns: 80vw;\n        // grid-template-rows: 1fr 1fr 1fr 1fr;\n        // grid-template-columns: 1fr;\n        grid-template-areas: \"div\";\n    }\n\n    @media (max-width: 400px) {\n        margin: 1rem;\n        grid-auto-rows: 500px;\n        gap: 0;\n        .BookMarkContainer {\n            height: 80%;\n            display: flex;\n            flex-direction: column;\n        }\n    }\n`\n\n// const BookMarkContainer = styled.div`\n//   background-color: rgba(255, 255, 255, 0.6);\n//   display: flex;\n//   gap: 0.1rem;\n//   justify-content: space-around;\n//   border: 1px solid #dbdbdb;\n//   border-radius: 3px;\n// `;\n// 게시물 사진\nconst BookMarkPhoto = styled.div`\n    // flex-basis: 30rem;\n    .postItem {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    }\n    .postPicture {\n        margin: 1rem 2rem 1rem 1rem;\n        padding: 0;\n        height: 25vh;\n        align-items: center;\n    }\n    .postImg {\n        margin: 0.5rem;\n        width: 250px;\n        height: 250px;\n    }\n    .postImg:hover {\n        transform: scale(1.05);\n        transition: 0.5s ease-in-out;\n    }\n    @media screen and (max-width: 1081px) {\n        .postPicture {\n            height: 20vh;\n        }\n    }\n    @media screen and (max-width: 375px) {\n        .postPicture {\n            margin: 0;\n        }\n    }\n`\n// 00구,날짜,날씨이모티콘\nconst BookMarkList = styled.div`\n    margin: 1rem;\n    line-height: 3rem;\n    flex-direction: column;\n    flex-basis: 15rem;\n    justify-content: flex-start;\n    .postTitle {\n        font-weight: bold;\n        font-size: 2rem;\n    }\n    .postDate {\n        font-size: 1.5rem;\n    }\n    .postWeather {\n        /* font-size: 1.5rem; */\n        width: 3rem;\n        height: 3rem;\n    }\n    img {\n        width: 100%;\n        height: 100%;\n    }\n\n    @media (max-width: 1081px) {\n        line-height: 2rem;\n        .postTitle {\n            font-weight: bold;\n            font-size: 1.5rem;\n        }\n        .postDate {\n            font-size: 1rem;\n        }\n        .postWeather {\n            font-size: 0.5rem;\n            width: 30px;\n            height: 30px;\n        }\n    }\n    @media screen and (max-width: 375px) {\n        margin: 0.1rem 0 0 0.5rem;\n        line-height: 1.4rem;\n        .postTitle {\n            font-weight: bold;\n            font-size: 1.5rem;\n        }\n        .postDate {\n            font-size: 1rem;\n        }\n        .postWeather {\n            font-size: 0.5rem;\n            width: 30px;\n            height: 30px;\n        }\n    }\n`\n\nconst BookMarkIcon = styled(Bookmark)`\n    float: right;\n\n    & .heart {\n        cursor: pointer;\n        color: #aaa;\n    }\n`\n\n//북마크가 없습니다.\nconst Waring = styled.div`\n    font-weight: bold;\n    font-size: 1.5rem;\n    text-align: center;\n`\n\n// 페이지네이션\nconst Pagination = styled.div`\n    background-color: #fafafa;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin-top: 10vh;\n    /* margin: 2rem; */\n    list-style: none;\n\n    button {\n        font-size: 1.5rem;\n        margin: 0 1vw;\n    }\n\n    @media screen and (max-width: 1081px) {\n        margin-top: 2vh;\n    }\n\n    @media screen and (max-width: 375px) {\n        margin-top: 5vh;\n        padding-bottom: 3vh;\n        button {\n            font-size: 1rem;\n        }\n    }\n`\n\nconst PrevPage = styled.div``\n\nconst PageNumber = styled.div`\n    li {\n        float: left;\n        margin: 1rem;\n    }\n    button {\n        font-size: 1.5rem;\n    }\n    @media screen and (max-width: 375px) {\n        li {\n            margin: 0;\n        }\n        button {\n            margin: 0 2vw;\n            font-size: 1rem;\n        }\n    }\n`\n\nconst NextPage = styled.div``\n\nlet url = process.env.REACT_APP_LOCAL_URL\nif (!url) url = \"https://thereweather.space\"\n\nexport default function BookMark() {\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const { userInfo, readPostId, postInfo } = useSelector(\n        (state) => state.itemReducer\n    )\n    const [bookmarkList, setBookmarkList] = useState()\n\n    console.log(userInfo)\n    console.log(readPostId)\n    console.log(postInfo)\n    const postId = Number(readPostId)\n    console.log(postId)\n\n    useEffect(() => {\n        axios({\n            // url: url + `/bookmarklist?searchID=${userInfo.user_id}&&searchPost=${postId}`,\n            // url: url + `/bookmarklist?searchID=${userInfo.user_id}`,\n            // method: \"get\",\n            url: url + \"/bookmarklist\",\n            method: \"post\",\n            data: {\n                user_id: userInfo.id,\n                post_id: postId,\n                post_info: postInfo,\n            },\n            headers: { \"Content-Type\": \"application/json\" },\n            withCredentials: true,\n        }).then((res) => {\n            console.log(\"**res.data bookmarkList**\", res.data)\n            setBookmarkList(res.data)\n        })\n    }, [])\n\n    //console.log(bookmarkList)\n\n    const formatDate = (dateString) => {\n        // 예시 : 2021. 11. 5. 22:02\n        const dateObject = new Date(dateString)\n        let dateOnly = dateObject.toLocaleDateString()\n        return `${dateOnly}`\n    }\n\n    const postClickHandler = (e) => {\n        //\"PostBookMarkList\"\n        let elem = e.target\n        while (!elem.classList.contains(\"postItem\")) {\n            elem = elem.parentNode\n            if (!elem.classList.contains(\"BookMarkContainer\")) {\n                break\n            }\n        }\n\n        dispatch(updatePostId(elem.id))\n        history.push({\n            // pathname: '/postread',\n            pathname: \"/bookmarkpost\",\n            state: { postId: elem.id },\n        })\n    }\n\n    // 시작 - 페이지네이션 변수들\n    const [currentPage, setCurrentPage] = useState(1)\n    // 1페이지로 시작\n    const itemsPerPage = 6\n    // 한 페이지에 8개씩 보여준다\n    const lastIdx = currentPage * itemsPerPage\n    const firstIdx = lastIdx - itemsPerPage\n    const slicedData = (dataArr) => {\n        return dataArr.slice(firstIdx, lastIdx)\n    }\n    // 끝 - 페이지네이션 변수들\n    // const target = arr.slice(start, end)\n\n    return (\n        <Outer>\n            {/* {bookmarkList === [] ?\n      <Waring>\"북마크가 없습니다.\"</Waring> : */}\n            <Container>\n                {bookmarkList &&\n                    bookmarkList.map((el) => {\n                        {\n                            /* {bookmarkList && slicedData(bookmarkList).map((el) => { */\n                        }\n                        return (\n                            <div className=\"BookMarkContainer\" key={el.id}>\n                                <BookMarkPhoto>\n                                    <div\n                                        className={[\"postItem\"]}\n                                        id={el.id}\n                                        onClick={postClickHandler}\n                                        key={el.id}\n                                    >\n                                        <img\n                                            className=\"postImg\"\n                                            key={el.id}\n                                            src={el.post_photo}\n                                            alt=\"posts\"\n                                        />\n                                    </div>\n                                </BookMarkPhoto>\n                                <BookMarkList>\n                                    <div className=\"test\" key={el.id}>\n                                        <p className=\"postDate\">\n                                            {formatDate(el.createdAt)}\n                                        </p>\n                                        <p className=\"postWeather sky\">\n                                            {\" \"}\n                                            {el.weather}{\" \"}\n                                        </p>\n                                        <p className=\"postWeather wind\">\n                                            {el.wind}{\" \"}\n                                        </p>\n                                        <p className=\"postWeather temp\">\n                                            {el.temp}{\" \"}\n                                        </p>\n                                    </div>\n                                </BookMarkList>\n                            </div>\n                        )\n                    })}\n            </Container>\n            {/* : <Waring>\"북마크가 없습니다.\"</Waring>} */}\n\n            {/* 시작 - 페이지네이션 새로 추가 */}\n            <PaginationWithArrow\n                // dataLength={bookmarkList.length} // 본래\n                dataLength={6} // 테스트용\n                itemsPerPage={8}\n                numberButtonClickHandler={setCurrentPage}\n            />\n            {/* 끝 - 페이지네이션 새로 추가 */}\n        </Outer>\n    )\n}\n","import styled from \"styled-components\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport {\n    faSun,\n    faCloud,\n    faCloudRain,\n    faPooStorm,\n    faSnowflake,\n    faSearch,\n} from \"@fortawesome/free-solid-svg-icons\"\nimport { useHistory } from \"react-router-dom\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport axios from \"axios\"\nimport {\n    changeIsLogin,\n    changeSearchword,\n    changeWeatherFilter,\n} from \"../actions/index\"\nimport React, { useState, useEffect } from \"react\"\nimport DaumPostcode from \"react-daum-postcode\"\n\nconst HeaderOuter = styled.div`\n    width: 100vw;\n    height: 125px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    background-color: white;\n    padding: 1rem;\n    position: sticky;\n    top: 0;\n    left: 0;\n    z-index: 100;\n    border-bottom: 0.5px solid #dbdbdb;\n\n    h1 {\n        font-weight: bold;\n        font-size: 2.5rem;\n        margin: 0;\n        padding: 0;\n    }\n\n    @media screen and (min-width: 1081px) {\n        width: 100vw;\n        background-color: white;\n        flex-direction: row;\n        justify-content: space-around;\n    }\n    @media screen and (max-width: 375px) {\n        /* border: 1px solid red;  // 확인용 */\n    }\n`\n\nconst Wing = styled.div`\n    display: none;\n\n    @media screen and (min-width: 1081px) {\n        display: flex;\n        flex-growth: 1;\n        align-items: center;\n        justify-content: center;\n        width: 20vw;\n    }\n`\n\nconst TitleAndLogo = styled.div`\n    display: ${(props) => (props.isMobileLogo ? \"flex\" : \"none\")};\n    justify-content: center;\n    align-items: center;\n    color: #231f20;\n\n    & img {\n        width: 20%;\n        margin-right: 0.5rem;\n    }\n\n    @media screen and (min-width: 1081px) {\n        display: flex;\n        flex-growth: 1;\n        align-items: center;\n        justify-content: center;\n        width: 20vw;\n    }\n`\n\nconst Center = styled.div`\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    min-width: 350px;\n    justify-content: space-around;\n\n    @media screen and (min-width: 1081px) {\n        flex-direction: row;\n        flex-growth: 2;\n        width: 60vw;\n    }\n`\n\nconst InputAndSubmit = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    div {\n        margin: auto 1rem;\n    }\n    @media screen and (max-width: 1081px) {\n        div {\n            margin: 0;\n        }\n    }\n`\n// 주소검색창 부분\nconst StyledPostCode = styled(DaumPostcode)`\n    position: absolute;\n    top: 50px;\n    border: 1px solid #e0e0e0;\n    @media screen and (max-width: 1081px) {\n        top: 32px;\n    }\n`\n\nconst Input = styled.input`\n    padding: 0.5rem;\n    font-size: 1.2rem;\n    text-align: center;\n    background-color: var(--page-bg-color);\n    border: 0.5px solid #dbdbdb;\n    border-radius: 3px;\n\n    @media screen and (min-width: 1081px) {\n        width: 300px;\n    }\n    @media screen and (max-width: 375px) {\n        width: 220px;\n        height: 30px;\n        font-size: 1rem;\n    }\n`\n\nconst Buttons = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    svg:hover {\n        color: red;\n    }\n\n    @media screen and (max-width: 375px) {\n        button {\n            width: 35px;\n            height: 35px;\n            font-size: 20px;\n        }\n    }\n`\n\nconst Button = styled.button`\n    background-color: ${(props) =>\n        props.bgGrey || props.isText ? \"white\" : \"white\"};\n    color: ${(props) => (props.bgGrey || props.isText ? \"#ff6384\" : \"grey\")};\n    font-size: ${(props) => (props.isText ? \"1.6rem\" : \"1.6rem\")};\n    padding: ${(props) => (props.bgGrey ? \".6rem\" : \".4rem\")};\n    margin: 0.5rem;\n    border-radius: 10%;\n`\n\nconst Button3 = styled.button`\n    // width: 140px;\n    // height: 45px;\n    // font-size: 11px;\n    font-size: ${(props) => (props.isText ? \"1.6rem\" : \"1.6rem\")};\n  font-family: 'IBM Plex Sans KR', sans-serif;\n\n    padding: ${(props) => (props.bgGrey ? \".6rem\" : \".4rem\")};\n    margin: 0.5rem;\n    border-radius: 10%;\n    color: ${(props) => (props.bgGrey || props.isText ? \"#ff6384\" : \"grey\")};\n    background-color: ${(props) =>\n        props.bgGrey || props.isText ? \"white\" : \"white\"};\n    text-transform: uppercase;\n    letter-spacing: 2.5px;\n    font-weight: 500;\n    color: #000;\n    background-color: #fff;\n    // border:3px solid pink;\n    // border: none;\n    border-radius: 45px;\n    box-shadow: 0px 8px 15px rgba(0, 0, 0, 0.1);\n    transition: all 0.3s ease 0s;\n    cursor: pointer;\n    outline: none;\n\n    &:hover {\n        background-color: pink;\n        box-shadow: 0px 15px 20px #f7cac9;\n        color: #fff;\n    transform: translateY(-4px);\n\n    @media screen and (max-width: 1081px) { // 임시 추가\n        display: none;\n    }\n}\n`\nconst Buttons3 = styled.button`\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    @media screen and (max-width: 1081px) { // 임시 추가\n        display: none;\n    }\n`\n// const SearchBarAndDaumPost = styled.div`\n//     // display: flex;\n//     // flex-direction: row;\n//     position: relative;\n//     margin: \"100px solid green\";\n// `\n// const DaumPostcodeWrap = styled.div`\n//     height: 3.5rem;\n//     width: 100%;\n//     // padding-right: 2.5rem;\n// `\nconst Cancel = styled.button`\n    // height: 3.5rem;\n    // width: 100%;\n    // padding-right: 2.5rem;\n    margin-bottom: 0.5rem;\n    font-size: 0.8rem;\n    /* padding: 0.3rem; */\n`\n\nconst Buttons2 = styled.div`\n    background-color: ${(props) => (props.bgGrey ? \"#E0E0E0\" : \"white\")};\n    color: ${(props) => (props.bgGrey || props.isText ? \"black\" : \"grey\")};\n    font-size: ${(props) => (props.isText ? \"1.2rem\" : \"1.6rem\")};\n    padding: ${(props) => (props.isText ? \".6rem\" : \".4rem\")};\n    margin: 0.5rem;\n    border-radius: 10%;\n    @media screen and (max-width: 1081px) {\n        padding: ${(props) => (props.isText ? \".6rem\" : \"0 0.5rem\")};\n    }\n    @media screen and (max-width: 375px) {\n        font-size: ${(props) => (props.isText ? \"1.2rem\" : \"1.2rem\")};\n        padding: ${(props) => (props.isText ? \".6rem\" : \".2rem\")};\n        height: 2rem;\n    }\n`\n\nlet url = process.env.REACT_APP_LOCAL_URL\nif (!url) url = \"https://thereweather.space\"\n\nexport default function Header({ isInput, isMobileLogo, isText }) {\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const { isLogin, mapPage } = useSelector((state) => state.itemReducer)\n    console.log(mapPage)\n    const [searchEvent, setSearchEvent] = useState(\"\")\n    //검색창에 사용할 포커스변수-hoon\n    const [onFocus, setOnFocus] = useState(false)\n\n    // const [postOnFocus, setOnFocus] = useState(false)\n\n    // isInput : Map 페이지 사용시 true\n    // isMobileLogo : Map 페이지 사용시 false\n    function handleComplete(e) {\n        console.log(e)\n        setSearchEvent(e.roadAddress)\n        setOnFocus(false)\n    }\n    const [weatherFilter, setweatherFilter] = useState(\"\")\n    useEffect(() => {\n        setweatherFilter(weatherFilter)\n        dispatch(changeWeatherFilter(weatherFilter))\n\n        console.log(weatherFilter)\n    }, [weatherFilter])\n\n    const logoutBtnHandler = (e) => {\n        const token = JSON.parse(localStorage.getItem(\"ATOKEN\"))\n        axios\n            .post(\n                url + \"/signout\",\n                { data: null },\n                {\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        Authorization: `token ${token}`,\n                    },\n                    withCredentials: true,\n                }\n            )\n            .then((res) => {\n                localStorage.clear()\n                dispatch(changeIsLogin(false))\n                history.push(\"/\")\n            })\n    }\n\n    return (\n        <HeaderOuter className=\"header\">\n            <TitleAndLogo className=\"titleAndLogo\" isMobileLogo={isMobileLogo}>\n                <img\n                    onClick={() => history.push(\"/\")}\n\n                    src=\"img/img6.png\"\n\n                    alt=\"logo\"\n                />\n                <h2 onClick={() => history.push(\"/\")}>There Weather</h2>\n            </TitleAndLogo>\n\n            {isInput ? (\n                <Center className=\"headerCenter\">\n                    <InputAndSubmit className=\"inputAndSubmit\">\n                        <Input\n                            // onClick={(e) => console.log(e)}\n                            onChange={(e) => setSearchEvent(e.target.value)}\n                            type=\"text\"\n                            placeholder=\"위치 검색\"\n                            value={searchEvent}\n                            // ref={inputRef}\n                            // onClick={onRest}\n                            onFocus={(e) => setOnFocus(true)}\n                        />\n                        <Buttons2 bgGrey>\n                            {onFocus ? (\n                                <Cancel onClick={() => setOnFocus(false)}>\n                                    Cancel\n                                </Cancel>\n                            ) : (\n                                <FontAwesomeIcon\n                                    onClick={() => {\n                                        dispatch(changeSearchword(searchEvent))\n                                        history.push(\"/map\")\n                                    }}\n                                    icon={faSearch}\n                                />\n                            )}\n                        </Buttons2>\n                        {/* <SearchBarAndDaumPost> */}\n                        {/* <DaumPostcodeWrap> */}\n\n                        {/* </DaumPostcodeWrap> */}\n                        {/* </SearchBarAndDaumPost> */}\n                    </InputAndSubmit>\n                    {onFocus ? (\n                        <StyledPostCode\n                            className=\"daumPostCodeContainer\"\n                            onComplete={handleComplete}\n                        />\n                    ) : (\n                        <></>\n                    )}\n                    {mapPage.mapPage ? (\n                        <Buttons className=\"headerButtons\">\n                            <Button\n                                onClick={() => {\n                                    if (weatherFilter === \"sunny\") {\n                                        return setweatherFilter(\"\")\n                                    }\n                                    return setweatherFilter(\"sunny\")\n                                }}\n                                isText={\n                                    weatherFilter === \"sunny\" ? true : false\n                                }\n                            >\n                                <FontAwesomeIcon icon={faSun} />\n                            </Button>\n                            <Button\n                                onClick={() => {\n                                    if (weatherFilter === \"cloudy\") {\n                                        return setweatherFilter(\"\")\n                                    }\n                                    return setweatherFilter(\"cloudy\")\n                                }}\n                                isText={\n                                    weatherFilter === \"cloudy\" ? true : false\n                                }\n                            >\n                                <FontAwesomeIcon icon={faCloud} />\n                            </Button>\n                            <Button\n                                onClick={() => {\n                                    if (weatherFilter === \"rainy\") {\n                                        return setweatherFilter(\"\")\n                                    }\n                                    return setweatherFilter(\"rainy\")\n                                }}\n                                isText={\n                                    weatherFilter === \"rainy\" ? true : false\n                                }\n                            >\n                                <FontAwesomeIcon icon={faCloudRain} />\n                            </Button>\n                            <Button\n                                onClick={() => {\n                                    if (weatherFilter === \"snowy\") {\n                                        return setweatherFilter(\"\")\n                                    }\n                                    return setweatherFilter(\"snowy\")\n                                }}\n                                isText={\n                                    weatherFilter === \"snowy\" ? true : false\n                                }\n                            >\n                                <FontAwesomeIcon icon={faSnowflake} />\n                            </Button>\n                        </Buttons>\n                    ) : (\n                        <div></div>\n                    )}\n                </Center>\n            ) : (\n                <Center className=\"headerCenter\" />\n            )}\n\n            {isLogin ? (\n                <Buttons3 className=\"loginAndSingupButtons\">\n                    {/* className=\"login\" isText */}\n                    <Button3\n                        className=\"login\"\n                        onClick={logoutBtnHandler}\n                        isText\n                    >\n                        logOut\n                    </Button3>\n                    <Button3\n                        onClick={() => history.push(\"/mypage\")}\n                        className=\"signup\"\n                        isText\n                    >\n                        mypage\n                    </Button3>\n                </Buttons3>\n            ) : (\n                <Buttons3 className=\"loginAndSingupButtons\">\n                    <Button3\n                        onClick={() => history.push(\"/login\")}\n                        className=\"login\"\n                        isText\n                    >\n                        logIn\n                    </Button3>\n                    <Button3\n                        onClick={() => history.push(\"/signup\")}\n                        className=\"signup\"\n                        isText\n                    >\n                        signUp\n                    </Button3>\n                </Buttons3>\n            )}\n        </HeaderOuter>\n    )\n}\n","import styled from \"styled-components\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport {\n    faHome,\n    faHeart,\n    faMapMarkerAlt,\n    faPencilAlt,\n    faUserAlt,\n} from \"@fortawesome/free-solid-svg-icons\"\n// import PostListContainer from \"./PostListView\"\nimport { useHistory } from \"react-router-dom\"\nconst Outer = styled.div`\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    width: 100vw;\n    z-index: 100;\n    position: sticky;\n    left: 0;\n    right: 0;\n    bottom: 0;\n\n    @media screen and (min-width: 1081px) {\n        width: 1080px;\n    }\n`\n\nconst Buttons = styled.div`\n    background-color: WHITE;\n    height: 70px;\n    right: 0;\n    bottom: 0;\n    width: 100vw;\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    z-index: 101;\n    border-top: 1px solid #dbdbdb;\n\n    @media screen and (min-width: 1081px) {\n        position: fixed;\n        background-color: white;\n        border-top: 1px solid #dbdbdb;\n        border-left: 1px solid #dbdbdb;\n        position: fiexd;\n        width: 400px;\n    }\n\n`\n\nconst Button = styled.button`\n    padding: 0.5rem;\n    margin: 0.5rem;\n    font-size: 2rem;\n    /* img:hover{\n        filter: opacity(0.5) drop-shadow(0 0 0 pink);\n    } */\n`\n\nexport default function MenuBar() {\n    const history = useHistory()\n    return (\n        <Outer className=\"menuBar\">\n            <Buttons>\n                {/*\n                    <Link to='/mainpage'>\n                    <Button>\n                        <FontAwesomeIcon icon={faHome} />\n                    </Button>\n                    </Link>\n                */}\n                <Button>\n                    {/* <FontAwesomeIcon\n                        onClick={() => history.push(\"/homeorlogin\")}\n                        icon={faHome}\n                    /> */}\n                    <img\n                        src=\"https://img.icons8.com/external-flatart-icons-outline-flatarticons/45/000000/external-home-instagram-flatart-icons-outline-flatarticons.png\"\n                        onClick={() => history.push(\"/homeorlogin\")}\n                    />\n                </Button>\n                <Button>\n                    {/* <FontAwesomeIcon\n                        onClick={() => history.push(\"/bookmarkorlogin\")}\n                        icon={faHeart}\n                    /> */}\n                    <img\n                        src=\"https://img.icons8.com/ios/45/000000/like--v1.png\"\n                        onClick={() => history.push(\"/bookmarkorlogin\")}\n                    />\n                </Button>\n                <Button>\n                    {/* <FontAwesomeIcon\n                        onClick={() => history.push(\"/map\")}\n                        icon={faMapMarkerAlt}\n                    /> */}\n                    <img\n                        src=\"https://img.icons8.com/external-flatart-icons-outline-flatarticons/45/000000/external-location-map-location-flatart-icons-outline-flatarticons-13.png\"\n                        onClick={() => history.push(\"/map\")}\n                    />\n                </Button>\n                <Button>\n                    {/* <FontAwesomeIcon\n                        onClick={() => history.push(\"/writeorlogin\")}\n                        icon={faPencilAlt}\n                    /> */}\n                    <img\n                        src=\"https://img.icons8.com/ios/45/000000/pencil--v1.png\"\n                        onClick={() => history.push(\"/writeorlogin\")}\n                    />\n                </Button>\n                <Button>\n                    {/* <FontAwesomeIcon\n                        onClick={() => history.push(\"/moreoruserinfo\")}\n                        icon={faUserAlt}\n                    /> */}\n                    <img\n                        src=\"https://img.icons8.com/external-kiranshastry-lineal-kiranshastry/45/000000/external-user-interface-kiranshastry-lineal-kiranshastry.png\"\n                        onClick={() => history.push(\"/moreoruserinfo\")}\n                    />\n                </Button>\n            </Buttons>\n        </Outer>\n    )\n}\n","// 로그인 상태에서 뜨는 화면\nimport { useHistory } from \"react-router-dom\"\nimport styled from \"styled-components\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport axios from \"axios\"\nimport { changeIsLogin } from \"../actions/index\"\n\nconst Outer = styled.div`\n    // 여기는 데스크탑\n    margin: 0 auto;\n    background-color: var(--page-bg-color);\n    width: 100vw;\n    height: var(--desktop-page-height);\n    display: flex;\n    align-items: center;\n\n    @media screen and (max-width: 1081px) {\n        // 여기가 모바일\n        height: calc(100vh - 125px - 70px);\n    }\n`\n\nconst InfoBoxes = styled.div`\n    margin: 0 auto;\n`\n\nconst InfoBox = styled.div`\n    margin: 0 auto;\n    background-color: #ffffff;\n    border-radius: 10px;\n    width: 30vw;\n    height: 10vh;\n    text-align: center;\n    border: 1px solid #dbdbdb;\n\n    p {\n        font-size: 1.5rem;\n        color: black;\n        margin: 0;\n        line-height: 10vh;\n        @media screen and (max-width: 375px) {\n            font-size: 1rem;\n        }\n    }\n\n    &:nth-child(n+2) {\n        margin-top: 3vh;\n    }\n\n    &:hover {\n        border: 1px solid #FEC0CB;\n        p {\n            color: #FEC0CB;\n        }\n    }\n\n    @media screen and (max-width: 1081px) {\n        /* border: 1px solid green; */\n    }\n    @media screen and (max-width: 375px) {\n    }\n`\n\n\nlet url = process.env.REACT_APP_LOCAL_URL\nif (!url) url = \"https://thereweather.space\"\n\nexport default function UserInfo() {\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const { isLogin } = useSelector((state) => state.itemReducer)\n    if (!url) {\n        url = \"https://thereweather.space\"\n    }\n\n    const logoutBtnHandler = (e) => {\n        const token = JSON.parse(localStorage.getItem(\"ATOKEN\"))\n        axios\n            .post(\n                url + \"/signout\",\n                { data: null },\n                {\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        Authorization: `token ${token}`,\n                    },\n                    withCredentials: true,\n                }\n            )\n            .then((res) => {\n                localStorage.clear()\n                dispatch(changeIsLogin(false))\n                history.push(\"/\")\n            })\n    }\n\n    return (\n        <Outer>\n            <InfoBoxes>\n                <InfoBox onClick={() => history.push(\"/mypage\")}>\n                    <p>마이페이지</p>\n                </InfoBox>\n\n                <InfoBox>\n                    <button onClick={() => history.push(\"/messenger\")}>\n                        <p>메신져</p>\n                    </button>\n                </InfoBox>\n                <InfoBox>\n                    <button onClick={logoutBtnHandler}>\n                        <p>로그아웃</p>\n                    </button>\n                </InfoBox>\n            </InfoBoxes>\n        </Outer>\n    )\n}\n","// 로그아웃 상태에서 뜨는 화면\nimport React, { useEffect } from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport styled from \"styled-components\"\nimport { changeMapPage } from \"../actions/index\"\nimport { useDispatch } from \"react-redux\"\n\nconst Outer = styled.div`\n    margin: 0 auto;\n    background-color: var(--page-bg-color);\n    width: 100vw;\n    height: calc(100vh - 125px);\n    display: flex;\n    align-items: center;\n\n    @media screen and (max-width: 1081px) {\n        height: calc(100vh - 125px - 70px);\n    }\n`\n\nconst InfoBoxes = styled.div`\n    margin: 0 auto;\n`\n\nconst InfoBox = styled.div`\n    margin: 0 auto;\n    background-color: #ffffff;\n    border-radius: 10px;\n    width: 30vw;\n    height: 10vh;\n    text-align: center;\n    // border: 1px solid #dbdbdb;\n    border: 1px solid black;\n\n    p {\n        font-size: 1.5rem;\n        color: black;\n        margin: 0;\n        line-height: 10vh;\n        @media screen and (max-width: 375px) {\n            font-size: 1rem;\n        }\n    }\n    &:nth-child(n + 2) {\n        margin-top: 3vh;\n    }\n    &:hover {\n        // border: 1px solid #262626;\n        border: 1px solid pink;\n        p {\n            // color: #262626;\n            color: pink;\n        }\n    }\n\n    @media screen and (max-width: 1081px) {\n        /* border: 1px solid green; */\n    }\n    @media screen and (max-width: 375px) {\n    }\n`\n\nexport default function More() {\n    const dispatch = useDispatch()\n    const history = useHistory()\n    useEffect(() => {\n        dispatch(changeMapPage(false))\n    }, [])\n    return (\n        <Outer>\n            <InfoBoxes>\n                <InfoBox onClick={() => history.push(\"/signup\")}>\n                    <p>회원가입</p>\n                </InfoBox>\n                <InfoBox onClick={() => history.push(\"/login\")}>\n                    <p>로그인</p>\n                </InfoBox>\n            </InfoBoxes>\n        </Outer>\n    )\n}\n","// TODO 회원탈퇴, 글 수정, 글 삭제에 사용 예정\n\nimport styled from \"styled-components\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\n\nimport { useSelector, useDispatch } from \"react-redux\"\nimport axios from \"axios\"\nimport { changeIsLogin } from \"../actions/index\"\nimport { useHistory } from \"react-router-dom\"\n\nconst Outer = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100vw;\n  height: 100vh;\n  background-color: var(--modal-bg-color);\n  z-index: 200;\n`;\n\nconst Popup = styled.section`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n  width: 50vw;\n  min-width: 300px;\n  max-width: 500px;\n  height: 40vw;\n  min-height: 200px;\n  max-height: 300px;\n  background-color: var(--modal-confirm-bg);\n  font-size: 1.5rem;\n  border-radius: 1.5rem;\n\n  & > article {\n    margin: .5rem;\n  }\n\n  & .closeButtonArea {\n    align-self: flex-end;\n    margin: 0 2rem;\n    font-size: 1.5rem;\n  }\n\n  & select {\n    font-size: 1rem;\n    margin: .5rem;\n    padding: .3rem;\n  }\n`;\n\nconst Button = styled.button`\n  width: 30%;\n  min-width: 80px;\n  max-width: 120px;\n  margin: .8rem;\n  padding: .5rem;\n  font-size: 1.2rem;\n  border-radius: .5rem;\n  background-color: var(--modal-confirm-button-bg);\n\n  &:active{\n    border: none;\n    box-shadow:  4px 4px 6px 0 rgba(255,255,255,.5),\n    inset -4px -4px 6px 0 rgba(255,255,255,.2),\n    inset 4px 4px 6px 0 rgba(0, 0, 0, .4);\n  }\n`;\n\n\nexport default function ModalConfirm({ children, closeHandler, yesHandler, noHandler }) {\n  // const dispatch = useDispatch()\n  // const history = useHistory()\n  // const { isLogin } = useSelector((state) => state.itemReducer)\n  \n  const yesButtonHandler = () => {\n    yesHandler();\n  }\n\n  const noButtonHandler = () => {\n    noHandler();\n  }\n\n  const closeButtonHandler = () => {\n    closeHandler();\n  }\n\n  return (\n    <Outer className=\"modalBackground\">\n      <Popup className=\"modalConfirm\">\n        <article className=\"closeButtonArea\">\n          <button className=\"modalCloseButton\" onClick={closeButtonHandler}>\n            <FontAwesomeIcon icon={faTimes} />\n          </button>\n        </article>\n        <article className=\"confirmText\">\n          {children}\n        </article>\n        <article className=\"modalConfirmButtons\">\n          <Button className=\"modalButtonYes\" onClick={yesButtonHandler}>예</Button>\n          <Button className=\"modalButtonNo\" onClick={noButtonHandler}>아니오</Button>\n        </article>\n      </Popup>\n    </Outer>\n  );\n}\n\n\n/* 사용 예시\n- props\n  - children\n    - 여는 태그와 닫는 태그 사이에 태그나 텍스트를 넣을 수 있다\n  - closeHandler\n    - 'x' 버튼을 눌렀을 때의 이벤트 함수 지정\n  - yesHandler\n    - '예' 버튼 눌렀을 때 이벤트 함수\n  - noHandler\n    - '아니오' 버튼 눌렀을 때 이벤트 함수\n\n(1) 삭제\n  <ModalConfirm>삭제하시겠습니까?</ModalConfirm>\n\n(2) 수정\n  <ModalConfirm>수정하시겠습니까?</ModalConfirm>\n\n(3) 탈퇴\n  <ModalConfirm>\n    <p>탈퇴하시겠습니까?</p>\n    <p>이유를 선택해 주세요</p>\n    <select name=\"pets\" id=\"pet-select\">\n      <option value=\"\">선택</option>\n      <option value=\"notUseful\">사용을 많이 하지 않음</option>\n      <option value=\"inconvenientDesign\">디자인이 불편함</option>\n      <option value=\"otherOptions\">다른 앱을 이용하기 위해</option>\n      <option value=\"andSoForth\">기타</option>\n    </select>\n  </ModalConfirm>\n*/","// 모바일 뒤로가기 버튼\nimport styled from \"styled-components\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faChevronLeft } from \"@fortawesome/free-solid-svg-icons\"\nimport { useHistory } from \"react-router-dom\"\n\n/*\n    [수정]\n    - 위치 잡는 코드가 약간 바뀌었어요... (position, display)\n*/\n\nconst Button = styled.button`\n    /* top: 90vh; */\n    top: 1.5vh;\n    left: 0;\n    position: fixed;\n    z-index:100;\n    // border-radius: 50%;\n    display: none;\n    padding: 1rem 1rem 1rem .3rem;\n\n    .fa-fw {\n        font-size: 50px;\n    }\n\n    @media screen and (max-width: 1081px) {\n        display: inline;\n    }\n    @media screen and (max-width: 375px) {\n        .fa-fw {\n            font-size: 35px;\n        }\n    }\n`\n\nexport default function GoBackButton() {\n    const history = useHistory()\n    const goBackHandler = () => {\n        history.goBack();\n    }\n    return (\n        <Button>\n            <FontAwesomeIcon\n                icon={faChevronLeft}\n                className=\"fa-fw\"\n                color=\"#ACB5BD\"\n                onClick={goBackHandler}\n            />\n        </Button>\n    )\n}\n","import React, { useEffect, useState } from \"react\"\nimport styled from \"styled-components\"\nimport { useHistory } from \"react-router-dom\"\nimport ModalConfirm from \"../components/ModalConfirm\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport axios from \"axios\"\nimport { changeIsLogin, userPosts, updatePostId } from \"../actions/index\"\nimport GoBackButton from \"../components/GoBackButton\"\n\n/*\n    [수정]\n    - 페이지네이션 추가\n    - 주석, console.log 정리\n*/\n\nconst Outer = styled.div`\n    background-color: var(--page-bg-color);\n    width: 100vw;\n    min-height: calc(100vh - 125px);\n    position: relative;\n    display: flex;\n    padding-bottom: 100px;\n\n    @media screen and (max-width: 1081px) {\n        flex-direction: column;\n        min-height: calc(100vh - 125px - 70px);\n    }\n`\n/* 프로필 정보 */\nconst ProfileArea = styled.div`\n    width: 30%;\n    padding: 15vh 1vw 1vh 1vw;\n    text-align: center;\n    button {\n        // 비밀번호 수정, 회원탈퇴\n        color: #336fc9;\n        font-size: 1.5rem;\n        margin-top: 1vh;\n    }\n    .mediaBox {\n        margin-top: 2vh;\n        margin-bottom: 2vh;\n        p {\n            margin-top: 1vh;\n        }\n        #user-name {\n            font-size: 1.5rem;\n            font-weight: bold;\n        }\n        #user-changeInfo {\n            color: #336fc9;\n        }\n    }\n\n    @media screen and (max-width: 1081px) {\n        /* border-bottom: 1px solid #aaa;  // 구분선 추가 */\n        margin: 0 auto;\n        margin-top: 4vh;\n        width: 100%;\n        padding: 0 1vw 3vh 1vw;\n        .mediaBox {\n            width: 40%;\n            display: inline-block;\n            text-align: left;\n            p {\n                margin-top: 2vh;\n                justify-content: center;\n                line-height: 3vh;\n                font-size: 1.2rem;\n            }\n        }\n    }\n\n    @media screen and (max-width: 375px) {\n        button {\n            font-size: 1rem;\n        }\n        .mediaBox {\n            width: 50%;\n            display: inline-block;\n            padding-bottom: 1vh;\n            p {\n                margin-top: 0;\n                justify-content: center;\n                font-size: 1rem;\n            }\n            #user-name {\n                font-size: 1rem;\n            }\n        }\n    }\n`\n/* 프로필 사진 */\nconst ProfileImg = styled.img`\n    width: 200px;\n    height: 200px;\n    padding: 10px 10px;\n    border-radius: 50%;\n    @media screen and (max-width: 1081px) {\n        margin-right: 5vw;\n    }\n    @media screen and (max-width: 375px) {\n        width: 7rem;\n        height: 7rem;\n    }\n`\n\n/* 비밀번호수정, 탈퇴 */\nconst ButtonArea = styled.div`\n    height: 10vh;\n    display: flex;\n    justify-content: space-around;\n    align-items: flex-end;\n    text-decoration: none;\n\n    button {\n        font-size: 1.2rem;\n    }\n\n    @media screen and (max-width: 1081px) {\n        width: 100vw; // 가운데로 맞춤\n        align-items: center;\n        height: 10vh;\n        position: absolute;\n        bottom: 0;\n    }\n    @media screen and (max-width: 375px) {\n        padding: 0 15vw;\n        height: 20vh;\n        justify-content: space-between;\n        button {\n            font-size: 1rem;\n        }\n    }\n`\n\n// 내가 쓴 예보 (grid)\nconst GridArea = styled.div`\n    width: 100vw;\n    padding: 2vh 3vw 2vh 5vw;\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr;\n    grid-template-rows: 200px 1fr 1fr;\n\n    row-gap: 10px; /* row의 간격을 10px로 */\n    column-gap: 20px; /* column의 간격을 20px로 */\n    // border-top: 1px solid #aaa; // 구분선 추가 // header와 외곽선이 겹쳐서 주석처리합니다 ㅜㅜ\n\n    .item:nth-child(1) {\n        border: none;\n        grid-column: 1 / 4;\n        grid-row: 1 / 2;\n    }\n\n    div {\n        background-color: rgba(255, 255, 255, 0.5); // 추가\n    }\n    div:hover {\n        border: 1px solid var(--page-bg-color);\n    }\n    img {\n        width: 100%;\n        height: 100%;\n    }\n    .more {\n        display: flex;\n        justify-content: space-between;\n        align-items: flex-end;\n        background-color: transparent;\n    }\n    p {\n        font-size: 2rem;\n        margin: 0 auto;\n        font-weight: bold;\n        color: #8e8e8e;\n    }\n    .moreView {\n        font-size: 1.5rem;\n        color: #336fc9;\n        width: 5vw;\n    }\n\n    @media screen and (max-width: 1380px) {\n        .moreView {\n            font-size: 1.4rem;\n            width: 6vw;\n        }\n    }\n\n    @media screen and (max-width: 1081px) {\n        margin: 0 auto;\n        margin-bottom: 10vh;\n        padding: 0;\n        grid-template-columns: 1fr 1fr 1fr;\n        grid-template-rows: 100px 300px 300px;\n        row-gap: 5px;\n        column-gap: 3px;\n\n        p {\n            font-size: 2rem;\n        }\n        .item {\n            margin: 0.5vh;\n        }\n        .moreView {\n            width: 80px;\n        }\n    }\n\n    @media screen and (max-width: 600px) {\n        padding-left: 2vw;\n        padding-right: 2vw;\n        grid-template-columns: 1fr 1fr;\n        grid-template-rows: 50px 150px 150px 150px;\n        .item:nth-child(1) {\n            border: none;\n            grid-column: 1 / 3;\n            grid-row: 1 / 2;\n        }\n        p {\n            font-size: 1rem;\n        }\n        .moreView {\n            font-size: 1rem;\n            width: 50px;\n            height: 3rem;\n        }\n    }\n`\n\nlet url = process.env.REACT_APP_LOCAL_URL\nif (!url) {\n    url = \"https://thereweather.space\"\n}\n\n\nexport default function MyPage() {\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const { isLogin, userInfo, postInfo, readPostId } = useSelector(\n        (state) => state.itemReducer\n    )\n    console.log(userInfo) //정보잘넘어옴\n    console.log(postInfo.postinfo)\n    console.log(readPostId)\n\n    const [isModalOpen, setIsModalOpen] = useState(false)\n    const [removeUser, setremoveUser] = useState(false)\n\n    const [currentPosts, setcurrentPosts] = useState([])\n\n  \n    const [ noIdWarning, setNoIdWarning ] = useState('');\n    // 게시물 데이터 조회\n    useEffect(() => {\n        axios({\n            url: url + `/mypage?searchID=${userInfo.user_id}`,\n            method: \"get\",\n            withCredentials: true,\n        }).then((res) => {\n            setcurrentPosts(res.data)\n            dispatch(userPosts(res.data))\n        })\n    }, [])\n\n\n    // 정보수정\n    const changeUserInfo = () => {\n        //console.log(\"정보수정 클릭\")\n        history.push(\"/edituserinfo\")\n    }\n\n    const removeUserInfo = () => {\n        setIsModalOpen(true)\n    }\n\n    const modalYesButtonHandlers = () => {\n        const token = JSON.parse(localStorage.getItem(\"ATOKEN\"))\n        axios\n            .delete(url + \"/removeuser\", {\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `token ${token}`,\n                },\n                withCredentials: true,\n            })\n            .then((res) => {\n                localStorage.clear(token)\n                dispatch(changeIsLogin(false))\n                history.push(\"/\")\n            })\n        //setIsModalOpen(false)\n    }\n\n    const modalNoButtonHandler = () => {\n        setIsModalOpen(false)\n    }\n    const modalCloseButtonHandler = () => {\n        setIsModalOpen(false)\n    }\n\n    // 게시물 클릭했을 때\n    const postClickHandler = (e) => {\n        let elem = e.target\n        while (!elem.classList.contains(\"postItem\")) {\n            elem = elem.parentNode\n            if (!elem.classList.contains(\"myPagePostList\")) {\n                break\n            }\n        }\n\n        dispatch(updatePostId(elem.id))\n        history.push({\n            pathname: \"/postread\",\n            state: { postId: elem.id },\n        })\n    }\n\n    // 더보기\n    const moreViewHandler = () => {\n        history.push(\"/mypost\")\n    }\n\n    return (\n        <Outer>\n            <GoBackButton />\n            <ProfileArea>\n                <ProfileImg src={userInfo.user_Photo} />\n                <div className=\"mediaBox\">\n                    <p id=\"user-name\">{userInfo.user_id}</p>\n                    <p id=\"user-gender\">\n                        {userInfo.gender === 1 ? \"남성\" : \"여성\"}\n                    </p>\n                    <p id=\"user-location\">나의 위치 : {userInfo.location}</p>\n                    <p id=\"user-changeInfo\" onClick={changeUserInfo}>\n                        정보수정\n                    </p>\n                </div>\n                <ButtonArea>\n                    <button onClick={() => history.push(\"/editpassword\")}>\n                        비밀번호 수정\n                    </button>\n                    <button onClick={removeUserInfo}>회원탈퇴</button>\n                    {isModalOpen === false ? null : (\n                        <ModalConfirm\n                            yesHandler={modalYesButtonHandlers}\n                            noHandler={modalNoButtonHandler}\n                            closeHandler={modalCloseButtonHandler}\n                        >\n                            <p>탈퇴하시겠습니까?</p>\n                            <p>이유를 선택해 주세요</p>\n                            <select name=\"pets\" id=\"pet-select\">\n                                <option value=\"\">선택</option>\n                                <option value=\"notUseful\">\n                                    사용을 많이 하지 않음\n                                </option>\n                                <option value=\"inconvenientDesign\">\n                                    디자인이 불편함\n                                </option>\n                                <option value=\"otherOptions\">\n                                    다른 앱을 이용하기 위해\n                                </option>\n                                <option value=\"andSoForth\">기타</option>\n                            </select>\n                        </ModalConfirm>\n                    )}\n                </ButtonArea>\n            </ProfileArea>\n\n            <GridArea className=\"myPagePostList\">\n                <div className=\"item more\">\n                    <p>내가 쓴 예보</p>\n                </div>\n                {currentPosts.map((el) => (\n                    <div\n                        className={[\"item\", \"postItem\"]}\n                        id={el.id}\n                        onClick={postClickHandler}\n                        key={el.id}\n                    >\n                        <img src={el.post_photo} alt=\"posts\" />\n                    </div>\n                ))}\n                <button className=\"moreView\" onClick={moreViewHandler}>\n                    더 보기\n                </button>\n            </GridArea>\n        </Outer>\n    )\n}\n","import { useState, useEffect } from \"react\"\nimport styled from \"styled-components\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { changeGender } from \"../actions/index\"\n//회원가입시 남녀 선택 토글\n\nconst ToggleContainer = styled.div`\n    // border: 1px solid red;\n    position: relative;\n    margin-top: 8rem;\n    left: 47%;\n    cursor: pointer;\n    display: flex;\n\n    > .toggle-container {\n        width: 50px;\n        height: 24px;\n        border-radius: 30px;\n        background-color: skyblue;\n        /* background-color: red; */\n        margin-right: -10rem;\n    }\n    > .toggle-container.toggle--checked {\n        width: 50px;\n        height: 24px;\n        border-radius: 30px;\n        background-color: pink;\n    }\n\n    > .toggle-circle {\n        position: absolute;\n        top: 1px;\n        left: 1px;\n        width: 22px;\n        height: 22px;\n        border-radius: 50%;\n        /* background-color: #ffffff; */\n        background-color: blue;\n        transition-duration: 0.5s;\n    }\n\n    > .toggle-circle.toggle--checked {\n        position: absolute;\n        top: 1px;\n        left: 27px;\n        width: 22px;\n        height: 22px;\n        border-radius: 50%;\n        /* background-color: #ffffff; */\n        background-color: red;\n    }\n`\n\nconst Desc = styled.div`\n    text-align: center;\n`\n// const dispatch = useDispatch()\n// const { userInfo } = useSelector((state) => state.itemReducer)\n// dispatch(changeUser(axiosData))\n\nexport const Toggle = () => {\n    const dispatch = useDispatch()\n    const [isOn, setisOn] = useState(2)\n\n    const toggleHandler = () => {\n        isOn === 1 ? setisOn(2) : setisOn(1)\n        console.log(isOn)\n        dispatch(changeGender(isOn))\n    }\n\n    return (\n        <>\n            <ToggleContainer onClick={toggleHandler}>\n                <div className={isOn === 1 ? \"toggle-container toggle--checked\" : \"toggle-container\"} />\n                <div className={isOn === 1 ? \"toggle-circle toggle--checked\" : \"toggle-circle\"} />\n                <Desc>{isOn === 1 ? \"여성\" : \"남성\"}</Desc>\n            </ToggleContainer>\n        </>\n    )\n}\n","import React, { useState, useEffect } from \"react\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { useHistory } from \"react-router-dom\"\nimport axios from \"axios\"\nimport styled from \"styled-components\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faGoogle } from \"@fortawesome/free-brands-svg-icons\"\nimport { changeIsLogin, changeMapPage } from \"../actions/index\"\nimport { Toggle } from \"../components/Toggle\"\nimport DaumPostcode from \"react-daum-postcode\"\n\n/*\n  TODO\n  [] 유효성 검사\n    - [x] ul, li 추가\n    - [] 함수로 구현\n      - [x] input이 없는 경우\n      - [] 등록되지 않은 정보인 경우 (버튼과 연결?)\n        - [] 악시오스\n        - [] 모달? alert? 페이지에 렌더링?\n*/\n\nconst LoginOuter = styled.section`\n    position: relative;\n    width: 100vw;\n    min-height: calc(var(--mobile-page-height) - 70px);\n    background-color: var(--page-bg-color);\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    h2 {\n        text-align: center;\n        font-size: 2rem;\n        font-weight: bold;\n        margin: 2rem auto;\n    }\n    @media screen and (min-width: 1081px) {\n        height: calc(100vh - 125px);\n    }\n`\n\nconst LoginStyledArticle = styled.article`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n`\n\nconst LoginInputAndTitle = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin: 1rem;\n    h3 {\n        font-size: 1.4rem;\n        margin: 1rem;\n        font-weight: bold;\n    }\n`\n\nconst LoginInputText = styled.input`\n    min-width: 150px;\n    width: 30vw;\n    font-size: 1.2rem;\n    padding: 0.5rem;\n`\n\nconst LoginValidationListBox = styled.ul`\n    list-style: none;\n    padding: 0 1.5rem;\n    font-size: 1rem;\n    li {\n        height: 1.2rem;\n        padding: 0 1.5rem;\n        color: var(--font-validation-negative);\n    }\n`\n\nconst LoginButtons = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 3rem auto;\n`\n\nconst LoginButton = styled.button`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: 1rem;\n    padding: 0.8rem;\n    font-size: 1.2rem;\n    font-weight: bold;\n    color: black;\n    background-color: pink;\n    border-radius: 1rem;\n    > span {\n        margin: 0.25rem;\n    }\n`\n/////////////////socialSignup스타일/////////////////////////////////\n\nconst Outer = styled.section`\n    position: relative;\n    width: 100vw;\n    // height: var(--mobile-page-height);\n    background-color: var(--page-bg-color);\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    overflow: scroll;\n\n    h2 {\n        margin-top: 3rem;\n        text-align: center;\n        font-size: 2rem;\n        font-weight: bold;\n        margin-bottom: 2rem;\n    }\n\n    @media screen and (min-width: 1081px) {\n        // height: calc(100vh - 125px);\n    }\n`\n\nconst StyledArticle = styled.article`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n`\n\nconst InputAndTitle = styled.div`\n    // display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    margin: 1rem;\n\n    h3 {\n        font-size: 1.4rem;\n        margin: 1rem;\n        font-weight: bold;\n    }\n`\nconst InputAndTitle2 = styled.div`\n    // border: 1px solid blue;\n\n    display: flex;\n    flex-direction: row;\n    // margin-top: -7rem;\n    // padding-top: -5rem;\n\n    align-items: center;\n    h3,\n    div {\n        font-size: 1.4rem;\n        margin: 1rem;\n        font-weight: bold;\n        margin-right: -1rem;\n    }\n    h3 {\n        margin-left: 2rem;\n    }\n`\n\nconst InputText = styled.input`\n    min-width: 150px;\n    width: 30vw;\n    font-size: 1.2rem;\n    padding: 0.5rem;\n`\n\nconst ValidationListBox = styled.ul`\n    list-style: none;\n    padding: 0 1.5rem;\n    font-size: 1rem;\n\n    li {\n        height: 1.2rem;\n        padding: 0 1.5rem;\n        color: var(--font-validation-negative);\n    }\n`\n\nconst Buttons = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 3rem auto;\n`\n\nconst Button = styled.button`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: 1rem;\n    padding: 0.8rem;\n    font-size: 1.2rem;\n    font-weight: bold;\n    color: white;\n    background-color: #ea4335;\n    border-radius: 1rem;\n\n    > span {\n        margin: 0.25rem;\n    }\n`\nconst Buttons2 = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 3rem auto;\n`\n\nconst Button3 = styled.button`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: 1rem;\n    padding: 0.8rem;\n    font-size: 1.2rem;\n    font-weight: bold;\n    color: white;\n    background-color: #2f6ecb;\n    border-radius: 1rem;\n\n    > span {\n        margin: 0.25rem;\n    }\n`\n\nconst Button2 = styled.input`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: 1rem;\n    padding: 0.8rem;\n    font-size: 1.2rem;\n    font-weight: bold;\n    color: white;\n    background-color: ${(props) => (props.google ? \"#EA4335\" : \"#2f6ecb\")};\n    border-radius: 1rem;\n\n    > span {\n        margin: 0.25rem;\n    }\n`\n////////////////////////\nconst PhotoUploadSection = styled.form`\n    // border: 2px solid yellow;\n    // margin: auto 2rem;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n`\n\nconst PhotoBox = styled.div`\n    min-width: 300px;\n    width: 30vh;\n    height: 30vh;\n    background-color: #ececec;\n    font-size: 30px;\n    color: palevioletred;\n    border: 1px solid #b5b5b5;\n    /* width: 300px;\nheight: 150px; */\n    object-fit: cover;\n`\nconst PhotoBox2 = styled.img`\n    min-width: 300px;\n    width: 30vh;\n    height: 30vh;\n`\n////////////////////////////////////////////////////\n// const url = \"https://thereweather.space\"\nlet url = process.env.REACT_APP_LOCAL_URL\nlet clientUrl = \"http://localhost:3000\"\n\nexport default function Login() {\n    const dispatch = useDispatch()\n    const history = useHistory()\n    if (!url) {\n        url = \"https://thereweather.space\"\n        clientUrl = \"https://there-weather.vercel.app\"\n    }\n\n    // input 상태 관리, 유효성 검사\n    const [idInput, setIdInput] = useState(\"\")\n    const [pwInput, setPwInput] = useState(\"\")\n    const [idInputMessage, setIdInputMessage] = useState(\"아이디를 입력하세요.\")\n    const [pwInputMessage, setPwInputMessage] =\n        useState(\"비밀번호를 입력하세요.\")\n    const GOOGLE_LOGIN_URL = `https://accounts.google.com/o/oauth2/v2/auth?client_id=1079927639813-87e5g0991msheh50mt77eclt2vij4kks.apps.googleusercontent.com&response_type=token&redirect_uri=${clientUrl}/login&scope=https://www.googleapis.com/auth/userinfo.email`\n    const { isLogin } = useSelector((state) => state.itemReducer)\n\n    const [socialLogined, setSocialLogined] = useState(false)\n    const [inputSignUpData, setInputSignUpData] = useState({\n        idInput: \"\",\n        pwInput: \"\",\n        nickNameInput: \"\",\n    })\n    useEffect(() => {\n        console.log(\"나는 login.js\")\n        dispatch(changeMapPage(false))\n        const urlinfo = new URL(window.location.href)\n        const hash = urlinfo.hash\n        if (hash) {\n            const accessToken = hash.split(\"=\")[1].split(\"&\")[0]\n            axios({\n                url:\n                    \"https://www.googleapis.com/oauth2/v2/userinfo?access_token=\" +\n                    accessToken,\n                method: \"get\",\n                headers: {\n                    authorization: `token ${accessToken}`,\n                    accept: \"application/json\",\n                },\n            }).then((res) => {\n                console.log(res.data)\n                console.log(res.data.email)\n                console.log(res.data.verified_email)\n                //구글에 정상 인증완료시-hoon\n                if (res.data.verified_email) {\n                    //구글측의 정상인증 회원이지만, 우리사이트 간편가입 되어있는지 확인 요청 -hoon\n                    axios({\n                        url:\n                            url +\n                            `/users/socialcheck?user_id=${res.data.email}`,\n                        method: \"get\",\n                        headers: {\n                            accept: \"application/json\",\n                        },\n                    }).then((res2) => {\n                        // 소셜인증 되었으나 회원등록은 안된경우-hoon\n                        console.log(res2.data)\n                        if (!res2.data) {\n                            alert(\"소셜 간편 가입 필요\")\n                            setSocialLogined(true)\n                            setInputSignUpData({\n                                ...inputSignUpData,\n                                idInput: res.data.email,\n                            })\n                            setInputVaildMessage({\n                                ...inputVaildMessage,\n                                idInput: \"\",\n                            })\n                            //구글에서 준 프로필이미지를 우리사이트의 이미지로 기본값으로 사용\n                            //사용자가 새로 업로드도 가능함\n                            setUploadedImg({\n                                fileName: \"default-user=s96-c\",\n                                filePath: `https://lh3.googleusercontent.com/a/default-user=s96-c`,\n                            })\n                        }\n                        //소셜인증 되었으며, 회원등록 된경우-hoon\n                        else {\n                            // dispatch(changeIsLogin(res.data.verified_email))\n                            alert(\"소셜 간편 가입 되어있는 회원\")\n                            console.log(res.data.email)\n                            // setInputSignUpData({\n                            //     ...inputSignUpData,\n                            //     idInput: res.data.email,\n                            // })\n                            console.log(inputSignUpData.idInput)\n                            setInputVaildMessage({\n                                ...inputVaildMessage,\n                                idInput: \"\",\n                            })\n                            console.log(res.data.email)\n                            socialAutoLogin(res.data.email)\n                        }\n                    })\n                }\n                //구글 인증실패시 로그인 불가-hoon\n                else {\n                    alert(\"구글에 인증된 사용자가 아님\")\n                }\n            })\n        }\n    }, [])\n    console.log(isLogin)\n    const loginidOnChangeHanlder = (e) => {\n        setIdInput((prevInput) => e.target.value)\n\n        if (e.target.value.length === 0) {\n            setIdInputMessage((prevText) => \"아이디를 입력하세요.\")\n        } else {\n            setIdInputMessage((prevText) => \"\")\n        }\n    }\n\n    const pwOnChangeHandler = (e) => {\n        setPwInput((prevInput) => e.target.value)\n\n        if (e.target.value.length === 0) {\n            setPwInputMessage((prevText) => \"비밀번호를 입력하세요.\")\n        } else {\n            setPwInputMessage((prevText) => \"\")\n        }\n    }\n\n    const loginButtonHandler = (e) => {\n        e.preventDefault()\n\n        if (idInput.length === 0 && pwInput.length === 0) {\n            console.log(\"모든 항목을 입력해야 합니다.\")\n        }\n\n        axios\n            .post(\n                url + \"/login\",\n\n                { user_id: idInput, password: pwInput },\n                {\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                    withCredentials: true,\n                }\n            )\n            .then((res) => {\n                console.log(res.data.data)\n                localStorage.setItem(\n                    \"ATOKEN\",\n                    JSON.stringify(res.data.data.accessToken)\n                )\n                dispatch(changeIsLogin(true))\n                alert(\"환영합니다\")\n                history.push(\"/\")\n            })\n    }\n    //간편가입완료했거나, 예전에 간편가입완료했던 소셜로그인사용자는 자동으로 로그인이 진행되게 하는 함수-hoon\n    function socialAutoLogin(id) {\n        console.log(\"socialAutoLogin함수\")\n        console.log(inputSignUpData.idInput)\n        axios({\n            url: url + \"/sociallogin\",\n            method: \"post\",\n            data: {\n                user_id: id,\n            },\n        }).then((res) => {\n            console.log(res.data.data)\n            localStorage.setItem(\n                \"ATOKEN\",\n                JSON.stringify(res.data.data.accessToken)\n            )\n            dispatch(changeIsLogin(true))\n            alert(\"소셜 로그인 완료, 환영합니다\")\n            history.push(\"/\")\n        })\n    }\n\n    function googleLoginButtonHandler() {\n        console.log(\"구글 로그인 버튼 동작 확인\")\n        if (isLogin) {\n            alert(\"이미 로그인상태입니다.\")\n        } else {\n            window.location.assign(GOOGLE_LOGIN_URL)\n        }\n    }\n    //////////////////socialLogined.page코드//////////////\n\n    const [inputVaildMessage, setInputVaildMessage] = useState({\n        idInput: \"아이디를 입력해주세요.\",\n        pwInput: \"패스워드를 입력해주세요.\",\n        nickNameInput: \"닉네임을 입력해주세요.\",\n    })\n    const [userRoadAddress, setRoadUserAddress] =\n        useState(\"위 검색창에서 검색해주세요.\")\n    const { genderToggle } = useSelector((state) => state.itemReducer)\n    const [photo, setPhoto] = useState(\"\")\n    const [uploadedImg, setUploadedImg] = useState({\n        fileName: \"blankProfile.png\",\n        filePath: `${url}/img/blankProfile.png`,\n        // fileName: null,\n        // filePath: null,\n    })\n\n    const idOnChangeHanlder = (key) => (e) => {\n        setInputSignUpData({\n            ...inputSignUpData,\n            [key]: e.target.value,\n        })\n    }\n\n    //아이디길이가 4자이상인가\n    function isMoreThan4Length(word) {\n        return word.length >= 4\n    }\n    //닉네임 길이 2글자 이상인가\n    function nickIsMoreThan4Length(word) {\n        return word.length >= 2\n    }\n\n    useEffect(() => {\n        //아이디 유효성검사\n        if (\n            // onlyNumberAndEnglish(inputSignUpData.idInput) &&\n            isMoreThan4Length(inputSignUpData.idInput)\n        ) {\n            setInputVaildMessage({ ...inputVaildMessage, idInput: \"\" })\n        } else {\n            setInputVaildMessage({\n                ...inputVaildMessage,\n                idInput: \"사용 불가능한 아이디 입니다.\",\n            })\n        }\n    }, [inputSignUpData.idInput])\n\n    useEffect(() => {\n        //닉네임 유효성검사\n        if (nickIsMoreThan4Length(inputSignUpData.nickNameInput)) {\n            setInputVaildMessage({ ...inputVaildMessage, nickNameInput: \"\" })\n        } else {\n            setInputVaildMessage({\n                ...inputVaildMessage,\n                nickNameInput: \"닉네임은 두글자 이상 입니다.\",\n            })\n        }\n    }, [inputSignUpData.nickNameInput])\n\n    function handleComplete(complevent) {\n        setRoadUserAddress(complevent.roadAddress)\n    }\n\n    function signupFunc(e) {\n        console.log(\"프론트 콘솔:회원가입 입장\")\n        if (\n            inputVaildMessage.idInput ||\n            // inputVaildMessage.pwInput ||\n            inputVaildMessage.nickNameInput ||\n            // pwCheckInputMessage ||\n            userRoadAddress === \"위 검색창에서 검색해주세요.\"\n        ) {\n            console.log(\"프론트:빈칸을 채워주세요\")\n        } else {\n            console.log(\"프론트:빈칸 채우기 완료\")\n            axios({\n                url: url + \"/users/signup\",\n                method: \"post\",\n                data: {\n                    user_id: inputSignUpData.idInput,\n                    nickName: inputSignUpData.nickNameInput,\n                    gender: genderToggle,\n                    location: userRoadAddress,\n                    user_photo: uploadedImg.filePath,\n                },\n            }).then((res) => {\n                console.log(res)\n                if (res.status === 211) {\n                    alert(\"아이디 중복입니다.\")\n                } else if (res.status === 212) {\n                    alert(\"닉네임 중복입니다.!\")\n                } else if (res.status === 210) {\n                    alert(\"회원가입 완료 입니다.\")\n                    socialAutoLogin(inputSignUpData.idInput)\n                    // dispatch(changeIsLogin(res.data.verified_email))\n                    // alert(\"소셜 간편가입 및 소셜 로그인 완료\")\n                    // history.push(\"/\")\n                }\n            })\n        }\n    }\n    ////////////////////////////////////////////////\n    const onSubmit = (e) => {\n        console.log(e)\n        e.preventDefault()\n        const formData = new FormData()\n        formData.append(\"img\", photo)\n        console.log(formData)\n        axios\n            .post(url + \"/users/photo\", formData, {\n                \"Content-Type\": \"application/json\",\n                withCredentials: true,\n            })\n            .then((res) => {\n                const { fileName } = res.data\n                setUploadedImg({ fileName, filePath: `${url}/img/${fileName}` })\n                alert(\"사진을 성공적으로 업로드 하였습니다.\")\n            })\n            .catch((err) => {\n                console.error(err)\n            })\n    }\n\n    const addFile = (e) => {\n        console.log(e.target.files[0])\n        setPhoto(e.target.files[0])\n    }\n    ////////////////////////////////\n\n    return (\n        <>\n            {socialLogined ? (\n                <Outer className=\"SignUpPageComponent\">\n                    <h2>소셜 로그인 간편 가입</h2>\n                    <div className=\"SignUp--center\">\n                        <StyledArticle className=\"id\">\n                            <InputAndTitle className=\"inputIdSection\">\n                                <h3>아이디</h3>\n                                <div>{inputSignUpData.idInput}</div>\n                            </InputAndTitle>\n                            <ValidationListBox className=\"idValidationList\">\n                                <li>{inputVaildMessage.idInput}</li>\n                            </ValidationListBox>\n                        </StyledArticle>\n                        {/* <StyledArticle className=\"password\">\n                            <InputAndTitle className=\"inputPwSection\">\n                                <h3>비밀번호</h3>\n                                <InputText\n                                    type=\"password\"\n                                    name=\"pwInput\"\n                                    placeholder=\"비밀번호\"\n                                    onChange={idOnChangeHanlder(\"pwInput\")}\n                                />\n                            </InputAndTitle>\n                            <ValidationListBox className=\"pwValidationList\">\n                                <li>{inputVaildMessage.pwInput}</li>\n                            </ValidationListBox>\n                        </StyledArticle>\n                        <StyledArticle className=\"password\">\n                            <InputAndTitle className=\"inputPwSection\">\n                                <h3>비밀번호 확인</h3>\n                                <InputText\n                                    type=\"password\"\n                                    name=\"pwCheckInput\"\n                                    placeholder=\"비밀번호 확인\"\n                                    onChange={idOnChangeHanlder2}\n                                />\n                            </InputAndTitle>\n                            <ValidationListBox className=\"pwValidationList\">\n                                <li>{pwCheckInputMessage}</li>\n                            </ValidationListBox>\n                        </StyledArticle> */}\n                        <StyledArticle className=\"password\">\n                            <InputAndTitle className=\"inputPwSection\">\n                                <h3>닉네임</h3>\n                                <InputText\n                                    type=\"text\"\n                                    name=\"nickNameInput\"\n                                    placeholder=\"닉네임\"\n                                    onChange={idOnChangeHanlder(\n                                        \"nickNameInput\"\n                                    )}\n                                />\n                            </InputAndTitle>\n                            <ValidationListBox className=\"pwValidationList\">\n                                <li>{inputVaildMessage.nickNameInput}</li>\n                            </ValidationListBox>\n                        </StyledArticle>\n                        <StyledArticle className=\"1\">\n                            <InputAndTitle2 className=\"2\">\n                                <h3>성별</h3>\n                                <Toggle />\n                            </InputAndTitle2>\n                        </StyledArticle>\n                        <StyledArticle className=\"password\">\n                            <InputAndTitle className=\"inputPwSection\">\n                                <h3>사는곳</h3>\n                                <DaumPostcode onComplete={handleComplete} />\n                            </InputAndTitle>\n                            <ValidationListBox className=\"pwValidationList\">\n                                {userRoadAddress}\n                            </ValidationListBox>\n                        </StyledArticle>\n                        <StyledArticle className=\"password\">\n                            <InputAndTitle className=\"inputPwSection\">\n                                <h3>프로필사진</h3>\n                                <Buttons2>\n                                    {/* /////////////////////////////// */}\n                                    <PhotoUploadSection\n                                        onSubmit={onSubmit}\n                                        className=\"photoUploadSection\"\n                                    >\n                                        <PhotoBox>\n                                            {uploadedImg ? (\n                                                <PhotoBox2\n                                                    src={uploadedImg.filePath}\n                                                />\n                                            ) : (\n                                                <div></div>\n                                            )}\n                                        </PhotoBox>\n                                        <Button2\n                                            type=\"file\"\n                                            className=\"photoButton\"\n                                            onChange={addFile}\n                                        />\n                                        <Button3 type=\"submit\">업로드</Button3>\n                                    </PhotoUploadSection>\n                                    {/* /////////////////////////////// */}\n                                </Buttons2>\n                            </InputAndTitle>\n                        </StyledArticle>\n                    </div>\n                    <Buttons className=\"SignUp--buttons\">\n                        <Button onClick={signupFunc}>가입</Button>\n                    </Buttons>\n                </Outer>\n            ) : (\n                <LoginOuter className=\"loginPageComponent\">\n                    <h2>로그인</h2>\n                    <div className=\"Login--center\">\n                        <LoginStyledArticle className=\"id\">\n                            <LoginInputAndTitle className=\"inputIdSection\">\n                                <h3>아이디</h3>\n                                <LoginInputText\n                                    type=\"text\"\n                                    name=\"idInput\"\n                                    placeholder=\"아이디를 입력하세요\"\n                                    value={idInput}\n                                    onChange={loginidOnChangeHanlder}\n                                />\n                            </LoginInputAndTitle>\n                            <LoginValidationListBox className=\"idValidationList\">\n                                <li>{idInputMessage}</li>\n                            </LoginValidationListBox>\n                        </LoginStyledArticle>\n\n                        <LoginStyledArticle className=\"password\">\n                            <LoginInputAndTitle className=\"inputPwSection\">\n                                <h3>비밀번호</h3>\n                                <LoginInputText\n                                    type=\"password\"\n                                    name=\"pwInput\"\n                                    placeholder=\"비밀번호를 입력하세요\"\n                                    value={pwInput}\n                                    onChange={pwOnChangeHandler}\n                                />\n                            </LoginInputAndTitle>\n                            <LoginValidationListBox className=\"pwValidationList\">\n                                <li>{pwInputMessage}</li>\n                            </LoginValidationListBox>\n                        </LoginStyledArticle>\n                    </div>\n\n                    <LoginButtons className=\"login--Loginbuttons\">\n                        <LoginButton onClick={loginButtonHandler}>\n                            로그인\n                        </LoginButton>\n\n                        {/* 소셜로그인 */}\n                        <LoginButton onClick={googleLoginButtonHandler} google>\n                            <FontAwesomeIcon icon={faGoogle} />\n                            <span>구글 로그인</span>\n                        </LoginButton>\n                    </LoginButtons>\n                </LoginOuter>\n            )}\n        </>\n    )\n}\n","import styled from \"styled-components\"\nimport { useState } from \"react\"\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\"\nimport ModalConfirm from \"../components/ModalConfirm\";\nimport axios from \"axios\";\nimport { changeUserPw } from \"../actions/index\"\n\n/*\n  TODO - 비밀번호 수정 페이지\n  [x] 여러개의 Input 상태 관리\n  [] 유효성 검사\n    - [x] ul, li 추가\n    - [x] 함수로 구현\n      - [x] (둘 다) input이 없는 경우 - li\n      - [x] (새 비밀번호) 조건에 안 맞는 경우 - li\n      - [] (현재 비밀번호) 등록되지 않은 정보인 경우\n        - [] 악시오스\n        - [] 모달? alert? 페이지에 렌더링?\n  [] 최종 결과 모아서 악시오스 요청\n*/\n\nconst Outer = styled.section`\n  position: relative;\n  width: 100vw;\n  min-height: calc(100vh - 125px - 70px);\n  background-color: var(--page-bg-color);\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  h2 {\n    text-align: center;\n    font-size: 1.8rem;\n    font-weight: bold;\n    margin-bottom: 2rem;\n  }\n\n  @media screen and (min-width: 1081px) {\n    min-height: calc(100vh - 125px);\n\t}\n`;\n\nconst StyledArticle = styled.article`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst InputAndTitle = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  // margin: .5rem;\n\n  h3 {\n    font-size: 1.3rem;\n    margin: 1rem;\n    font-weight: bold;\n  }\n`;\n\nconst InputText = styled.input`\n  min-width: 150px;\n  width: 30vw;\n  font-size: 1.2rem;\n  padding: .5rem;\n`;\n\nconst ValidationListBox = styled.ul`\n  list-style: none;\n  padding: 0 0 1rem 0;\n  font-size: 1rem;\n`;\n\nconst StyledLi = styled.li`\n  height: 1.2rem;\n  padding: .3rem 2rem;\n  font-size: .9rem;\n  // font-weight: bold;\n  color: ${ props => props.valid ? `var(--font-validation-positive)` : `var(--font-validation-negative)` };\n  font-weight: ${ props => props.valid ? `bold` : `null` };\n  `;\n\nconst Buttons = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 3rem auto;\n`;\n\nconst Button = styled.button`\n  width: 25vw;\n  min-width: 50px;\n  max-width: 200px;\n  margin: .5rem 1rem;\n  padding: .8rem;\n  font-size: 1.2rem;\n  font-weight: bold;\n  color: white;\n  background-color: ${ props => props.edit ? `var(--button-bg-edit)` : `var(--button-bg-negative)` };\n  border-radius: 1rem;\n`;\n\nconst TextButton = styled.button`\n  // align-self: flex-end;\n  margin: 1rem 3rem;\n  font-size: 1rem;\n  color: grey;\n  text-decoration: underline;\n`;\n\n\nlet url = process.env.REACT_APP_LOCAL_URL\nif (!url) url = \"https://thereweather.space\"\n\n\nexport default function PasswordEdit() {\n  const { password } = useSelector((state) => state.itemReducer)\n  const dispatch = useDispatch()\n  const history = useHistory()\n  \n\n  const [ curPwd, setCurPwd ] = useState('');\n  const [ newPwd, setNewPwd ] = useState('');\n  const [ curPwdInputWarning, setCurPwdInputWarning ] = useState('비밀번호를 입력해주세요.');\n  const [ newPwdInputWarning, setNewPwdInputWarning ] = useState({\n    isNoInput: '비밀번호를 입력해주세요.',\n    isTooShort: '6자 이상이어야 합니다.',\n    isWrongType: '숫자와 문자를 포함해야 합니다.'\n  });\n  const { isNoInput, isTooShort, isWrongType } = newPwdInputWarning;\n  const [ isValid, setIsValid ] = useState('');\n\n  const validationReg = /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{6,}$/g;\n    // 정규식 : 최소 6자 이상하면서, 알파벳과 숫자 및 특수문자(@$!%*#?&) 는 하나 이상 포함\n\n  const curInputHandler = (e) => {\n    setCurPwd(prev => e.target.value);\n    // console.log(e.target.value)\n    if (e.target.value.length === 0) {\n      setCurPwdInputWarning(prev => '비밀번호를 입력해주세요.');\n    } else {\n      setCurPwdInputWarning(prev => '');\n    }\n  }\n\n  const newInputHandler = (e) => {\n    setNewPwd(prev => e.target.value);\n\n    // 유효성 검사\n    if (e.target.value.length === 0) {\n      setNewPwdInputWarning(prev => {\n        return {...prev, isNoInput: '비밀번호를 입력해주세요.'}\n      });\n    } else {\n      setNewPwdInputWarning(prev => {\n        return {...prev, isNoInput: ''}\n      });\n    }\n\n    if (!validationReg.test(e.target.value)) {\n      setNewPwdInputWarning(prev => {\n        return {...prev, isWrongType: '문자, 숫자, 특수문자가 모두 포함되어야 합니다.'}\n      });\n      setIsValid(prev => '')\n    } else {\n      setNewPwdInputWarning(prev => {\n        return {...prev, isWrongType: ''}\n      });\n      setIsValid(prev => '사용 가능합니다.')\n    }\n\n    if (e.target.value.length < 6) {\n      setNewPwdInputWarning(prev => {\n        return {...prev, isTooShort: '6자 이상이어야 합니다.'}\n      });\n    } else {\n      setNewPwdInputWarning(prev => {\n        return {...prev, isTooShort: ''}\n      });\n    }\n  }\n\n  // 버튼 클릭 이벤트\n  const editButtonHandler = (e) => {\n    // e.prevntDefault()\n\n    let newPwdValid = validationReg.test(newPwd)\n    console.log('새 비밀번호 유효성 검사 결과', newPwdValid);\n    // TODO\n    // 클라이언트 로컬스토리지에 있는 토큰을 찾아서 \n    // 헤더에 담아서 서버에 전달 \n    // const token = localStorage.getItem(\"ATOKEN\")  //문자열\n    const token = JSON.parse(localStorage.getItem(\"ATOKEN\")) //문자열벗긴 토큰\n    //console.log(token) //토큰찾음\n     axios({\n       url: url + \"/password\",\n       method: \"put\",\n       data: { password: newPwd },\n       headers: { \n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `token ${token}` },\n        withCredentials: true,\n     })\n     .then((res) => {\n      // console.log(res.data)\n      dispatch(changeUserPw(true))\n      history.push(\"/mypage\")\n     })\n  }\n\n  const cancelButtonHandler = (e) => {\n    console.log('취소 버튼 동작 확인')\n    setCurPwd(prev => '');\n    setNewPwd(prev => '');\n    setIsValid(prev => '');\n    // TODO 이전 페이지로\n    history.push('/home');\n  }\n\n  // 탈퇴 모달에 붙은 함수\n  const [ isModalOpen, setIsModalOpen ] = useState(false);\n  const withdrawButtonHandler = (e) => {\n    console.log('탈퇴 버튼 동작확인');\n    setIsModalOpen(true);\n  }\n\n  const modalSelectList = [\n    [null, \"--탈퇴 이유 선택--\"],\n    [\"notMuchUse\", \"사용을 많이 하지 않음\"],\n    [\"inconvenientDesign\", \"디자인이 불편함\"],\n    [\"chooseOtherApps\", \"다른 앱을 이용하기 위해\"],\n    [\"etc\", \"기타\"]\n  ];\n\n  const [ modalSelected, setModalSelected ] = useState(\"\");\n  const handleChangeSelect = (e) => {\n    setModalSelected(prev => e.target.value);\n  }\n\n  const modalCloseButtonHandler = (e) => {\n    console.log('모달 닫기 버튼 동작 확인');\n    setIsModalOpen(false);\n  }\n\n  const modalYesButtonHandler = (e) => {\n    console.log('모달 yes 버튼 동작 확인');\n  }\n\n  const modalNoButtonHandler = (e) => {\n    console.log('모달 no 버튼 동작 확인');\n    setIsModalOpen(false);\n  }\n\n\n  return (\n    <Outer className=\"loginPageComponent\">\n      <h2>비밀번호 변경</h2>\n\n      <div className=\"Login--center\">\n        <StyledArticle className=\"id\">\n          <InputAndTitle className=\"inputCurPwdSection\">\n            <h3>현재 비밀번호</h3>\n            <InputText\n              type=\"password\"\n              name=\"curPwd\"\n              placeholder=\"현재 비밀번호를 입력하세요\"\n              onChange={curInputHandler}\n              value={curPwd}\n            />\n          </InputAndTitle>\n          <ValidationListBox className=\"idValidationList\">\n            <StyledLi>{curPwdInputWarning}</StyledLi>\n          </ValidationListBox>\n        </StyledArticle>\n\n        <StyledArticle className=\"password\">\n          <InputAndTitle className=\"inputNewPwSection\">\n            <h3>새 비밀번호</h3>\n            <InputText\n              type=\"password\"\n              name=\"newPwd\"\n              placeholder=\"비밀번호를 입력하세요\"\n              onChange={newInputHandler}\n              value={newPwd}\n            />\n          </InputAndTitle>\n          <ValidationListBox className=\"pwValidationList\">\n            <StyledLi valid>{isValid}</StyledLi>\n            <StyledLi>{isNoInput}</StyledLi>\n            <StyledLi>{isTooShort}</StyledLi>\n            <StyledLi>{isWrongType}</StyledLi>\n          </ValidationListBox>\n        </StyledArticle>\n      </div>\n\n      <Buttons className=\"login--buttons\">\n        <div>\n          <Button onClick={editButtonHandler} edit>수정</Button>\n          <Button onClick={cancelButtonHandler}>취소</Button>\n        </div>\n      </Buttons>\n\n      <TextButton className=\"removeUserInfo\" onClick={withdrawButtonHandler}>회원탈퇴</TextButton>\n\n      {\n        isModalOpen?\n          <ModalConfirm\n            yesHandler={modalYesButtonHandler}\n            noHandler={modalNoButtonHandler}\n            closeHandler={modalCloseButtonHandler}\n          >\n            <p>탈퇴하시겠습니까?</p>\n            <select name=\"reasons\" className=\"reason-select\" onChange={handleChangeSelect} value={modalSelected}>\n              {\n                modalSelectList.map((elem, idx) => {\n                  return (<option value={elem[0]} key={idx}>{elem[1]}</option>);\n                })\n              }\n            </select>\n          </ModalConfirm>\n        :\n          ''\n      }\n    </Outer>\n  );\n}","import { useState, useEffect } from \"react\"\nimport styled from \"styled-components\"\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\n// import { faGoogle } from \"@fortawesome/free-brands-svg-icons\"\nimport { Toggle } from \"../components/Toggle\"\nimport DaumPostcode from \"react-daum-postcode\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport axios from \"axios\"\nimport { useHistory } from \"react-router-dom\"\nimport { changeMapPage } from \"../actions/index\"\n\n/*\n  TODO\n  [x] 여러개의 Input 상태 관리\n  [] 유효성 검사\n    - [x] ul, li 추가\n    - [] 함수로 구현\n      - [x] input이 없는 경우\n      - [] 등록되지 않은 정보인 경우\n        - [] 악시오스\n        - [] 모달? alert? 페이지에 렌더링?\n*/\n\nconst Outer = styled.section`\n    position: relative;\n    width: 100vw;\n    // height: var(--mobile-page-height);\n    background-color: var(--page-bg-color);\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    overflow: scroll;\n\n    h2 {\n        margin-top: 3rem;\n        text-align: center;\n        font-size: 2rem;\n        font-weight: bold;\n        margin-bottom: 2rem;\n    }\n\n    @media screen and (min-width: 1081px) {\n        // height: calc(100vh - 125px);\n    }\n`\n\nconst StyledArticle = styled.article`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n`\n\nconst InputAndTitle = styled.div`\n    // display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    margin: 1rem;\n\n    h3 {\n        font-size: 1.4rem;\n        margin: 1rem;\n        font-weight: bold;\n    }\n`\nconst InputAndTitle2 = styled.div`\n    // border: 1px solid blue;\n\n    display: flex;\n    flex-direction: row;\n    // margin-top: -7rem;\n    // padding-top: -5rem;\n\n    align-items: center;\n    h3,\n    div {\n        font-size: 1.4rem;\n        margin: 1rem;\n        font-weight: bold;\n        margin-right: -1rem;\n    }\n    h3 {\n        margin-left: 2rem;\n    }\n`\n\nconst InputText = styled.input`\n    min-width: 150px;\n    width: 30vw;\n    font-size: 1.2rem;\n    padding: 0.5rem;\n`\n\nconst ValidationListBox = styled.ul`\n    list-style: none;\n    padding: 0 1.5rem;\n    font-size: 1rem;\n\n    li {\n        height: 1.2rem;\n        padding: 0 1.5rem;\n        color: var(--font-validation-negative);\n    }\n`\n\nconst Buttons = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    // margin: 0.5rem auto;\n`\n\nconst Button = styled.button`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: 0.5rem;\n    padding: 0.8rem;\n    font-size: 1.2rem;\n    font-weight: bold;\n    color: white;\n    background-color: ${(props) => (props.google ? \"#EA4335\" : \"pink\")};\n    border-radius: 1rem;\n\n    > span {\n        margin: 0.25rem;\n    }\n`\nconst Buttons2 = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 3rem auto;\n`\n\nconst Button3 = styled.button`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: 1rem;\n    padding: 0.8rem;\n    font-size: 1.2rem;\n    font-weight: bold;\n    color: white;\n    background-color: ${(props) => (props.google ? \"#EA4335\" : \"#2f6ecb\")};\n    border-radius: 1rem;\n\n    > span {\n        margin: 0.25rem;\n    }\n`\n\nconst Button2 = styled.input`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: 1rem;\n    padding: 0.8rem;\n    font-size: 1.2rem;\n    font-weight: bold;\n    color: white;\n    background-color: ${(props) => (props.google ? \"#EA4335\" : \"#2f6ecb\")};\n    border-radius: 1rem;\n\n    > span {\n        margin: 0.25rem;\n    }\n`\n////////////////////////\nconst PhotoUploadSection = styled.form`\n    // border: 2px solid yellow;\n    // margin: auto 2rem;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n`\n\nconst PhotoBox = styled.div`\n    min-width: 300px;\n    width: 30vh;\n    height: 30vh;\n    background-color: #ececec;\n    font-size: 30px;\n    color: palevioletred;\n    border: 1px solid #b5b5b5;\n    /* width: 300px;\nheight: 150px; */\n    object-fit: cover;\n`\nconst PhotoBox2 = styled.img`\n    min-width: 300px;\n    width: 30vh;\n    height: 30vh;\n`\n////////////////////////\nlet url = process.env.REACT_APP_LOCAL_URL\n// const url = process.env.REACT_APP_LOCAL_URL || process.env.REACT_APP_URL\n\nexport default function SignUp() {\n    const dispatch = useDispatch()\n    // input 상태 관리, 유효성 검사\n    if (!url) {\n        url = \"https://thereweather.space\"\n    }\n    const [inputSignUpData, setInputSignUpData] = useState({\n        idInput: \"\",\n        pwInput: \"\",\n        nickNameInput: \"\",\n        emailInput: \"\",\n        emailVaildCode: \"\",\n    })\n    const [inputVaildMessage, setInputVaildMessage] = useState({\n        idInput: \"아이디를 입력하세요.\",\n        pwInput: \"패스워드를 입력하세요.\",\n        nickNameInput: \"닉네임을 입력하세요.\",\n        emailInput: \"이메일을 입력하세요.\",\n        emailVaildCode: \"이메일 인증 코드 기입 후 인증하기 하세요.\",\n    })\n    const [pwCheckInput, setPwCheckInput] = useState(\"\")\n    const [pwCheckInputMessage, setPwCheckInputMessage] =\n        useState(\"패스워드를 다시한번 입력하세요.\")\n    const [userRoadAddress, setRoadUserAddress] =\n        useState(\"위 검색창에서 검색하세요.\")\n    const { genderToggle } = useSelector((state) => state.itemReducer)\n    const [photo, setPhoto] = useState(\"\")\n    const [uploadedImg, setUploadedImg] = useState({\n        fileName: \"blankProfile.png\",\n        filePath: `${url}/img/blankProfile.png`,\n    })\n    const [codeOn, setCodeOn] = useState(false)\n\n    const history = useHistory()\n    useEffect(() => {\n        dispatch(changeMapPage(false))\n    }, [])\n    const idOnChangeHanlder = (key) => (e) => {\n        setInputSignUpData({\n            ...inputSignUpData,\n            [key]: e.target.value,\n        })\n    }\n    const idOnChangeHanlder2 = (e) => {\n        setPwCheckInput(e.target.value)\n    }\n\n    //영어랑 숫자만 가능\n    function onlyNumberAndEnglish(str) {\n        return /^[A-Za-z][A-Za-z0-9]*$/.test(str)\n    }\n    // [유효성 검증 함수]: 최소 6자 이상하면서, 알파벳과 숫자 및 특수문자(@$!%*#?&) 는 하나 이상 포함\n    function strongPassword(str) {\n        return /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{6,}$/.test(\n            str\n        )\n    }\n    //아이디길이가 4자이상인가\n    function isMoreThan4Length(word) {\n        return word.length >= 4\n    }\n    //패스워드가 같은가\n    function isMatch(pwd1, pwd2) {\n        return pwd1 === pwd2\n    }\n    //닉네임 길이 2글자 이상인가\n    function nickIsMoreThan4Length(word) {\n        return word.length >= 2\n    }\n\n    useEffect(() => {\n        //아이디 유효성검사\n        if (\n            onlyNumberAndEnglish(inputSignUpData.idInput) &&\n            isMoreThan4Length(inputSignUpData.idInput)\n        ) {\n            setInputVaildMessage({ ...inputVaildMessage, idInput: \"\" })\n        } else {\n            setInputVaildMessage({\n                ...inputVaildMessage,\n                idInput: \"사용 불가능한 아이디 입니다.\",\n            })\n        }\n    }, [inputSignUpData.idInput])\n\n    useEffect(() => {\n        //패스워드 유효성\n        if (strongPassword(inputSignUpData.pwInput)) {\n            console.log(\"여긴엘스문아닌곳\")\n\n            setInputVaildMessage({ ...inputVaildMessage, pwInput: \"\" })\n        } else if (!strongPassword(inputSignUpData.pwInput)) {\n            console.log(\"여긴엘스문인데\")\n            setInputVaildMessage({\n                ...inputVaildMessage,\n                pwInput: \"사용 불가능한 패스워드 입니다.\",\n            })\n        }\n        //패스워드 학인 유효성\n        if (\n            isMatch(inputSignUpData.pwInput, pwCheckInput) &&\n            pwCheckInput.length === 0\n        ) {\n            setPwCheckInputMessage(\"패스워드를 다시한번 입력해주세요.\")\n        } else if (isMatch(inputSignUpData.pwInput, pwCheckInput)) {\n            setPwCheckInputMessage(\"\")\n        } else {\n            setPwCheckInputMessage(\"비밀번호가 일치 하지 않습니다.\")\n        }\n        console.log(inputSignUpData)\n        console.log(inputVaildMessage)\n    }, [inputSignUpData.pwInput, pwCheckInput])\n\n    useEffect(() => {\n        //닉네임 유효성검사\n        if (nickIsMoreThan4Length(inputSignUpData.nickNameInput)) {\n            setInputVaildMessage({ ...inputVaildMessage, nickNameInput: \"\" })\n        } else {\n            setInputVaildMessage({\n                ...inputVaildMessage,\n                nickNameInput: \"닉네임은 두글자 이상 입니다.\",\n            })\n        }\n    }, [inputSignUpData.nickNameInput])\n    useEffect(() => {\n        //이메일 유효성검사\n        if (\n            inputSignUpData.emailInput.length >= 5 &&\n            inputSignUpData.emailInput.indexOf(\"@\") !== -1\n        ) {\n            setInputVaildMessage({ ...inputVaildMessage, emailInput: \"\" })\n        } else {\n            setInputVaildMessage({\n                ...inputVaildMessage,\n                emailInput: \"이메일은 5글자 이상이며, @를 포함합니다.\",\n            })\n        }\n    }, [inputSignUpData.emailInput])\n    useEffect(() => {\n        //이메일인증 코드 유효성검사\n        if (inputSignUpData.emailVaildCode.length >= 1) {\n            setInputVaildMessage({ ...inputVaildMessage, emailVaildCode: \"\" })\n        } else {\n            setInputVaildMessage({\n                ...inputVaildMessage,\n                emailVaildCode: \"코드를 기입하세요.\",\n            })\n        }\n    }, [inputSignUpData.emailVaildCode])\n\n    function handleComplete(complevent) {\n        setRoadUserAddress(complevent.roadAddress)\n    }\n    function emailSend() {\n        console.log(\"email 보내기\")\n        if (!inputVaildMessage.emailInput && !inputVaildMessage.idInput) {\n            console.log(\"정상수행가능\")\n            axios({\n                url: url + \"/users/auth\",\n                method: \"post\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                data: {\n                    temporary_id: inputSignUpData.idInput,\n                    email: inputSignUpData.emailInput,\n                },\n                withCredentials: true,\n            }).then((res) => {\n                console.log(res)\n                if (res.status === 200) {\n                    alert(\"인증메일을 발송하였습니다\")\n                } else {\n                    alert(\"인증메일을 발송에 실패하였습니다\")\n                }\n            })\n        } else {\n            console.log(\"안되는곳\")\n            alert(\"아이디, 이메일을 기입하세요\")\n        }\n    }\n    function codeSend() {\n        console.log(\"code 보내기\")\n        axios({\n            url: url + \"/users/auth\",\n            method: \"put\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            data: {\n                temporary_id: inputSignUpData.idInput,\n                email: inputSignUpData.emailInput,\n                code: inputSignUpData.emailVaildCode,\n            },\n            withCredentials: true,\n        }).then((res) => {\n            if (res.data) {\n                setCodeOn(res.data)\n                alert(\"이메일 인증 완료 되었습니다.\")\n            } else {\n                alert(\"이메일 인증에 실패 하였습니다.\")\n            }\n        })\n    }\n    function signupFunc(e) {\n        console.log(\"프론트 콘솔:회원가입 입장\")\n        if (\n            inputVaildMessage.idInput ||\n            inputVaildMessage.pwInput ||\n            inputVaildMessage.nickNameInput ||\n            pwCheckInputMessage ||\n            userRoadAddress === \"위 검색창에서 검색해주세요.\" ||\n            codeOn === false\n        ) {\n            console.log(\"프론트:빈칸을 채워주세요\")\n        } else {\n            console.log(\"프론트:빈칸 채우기 완료\")\n            axios({\n                url: url + \"/users/signup\",\n                // url: url + \"/signup\",\n                method: \"post\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    // \"Content-Type\": \"text/plain\",\n                },\n                data: {\n                    user_id: inputSignUpData.idInput,\n                    password: inputSignUpData.pwInput,\n                    nickName: inputSignUpData.nickNameInput,\n                    gender: genderToggle,\n                    location: userRoadAddress,\n                    user_photo: uploadedImg.filePath,\n                },\n                withCredentials: true,\n            }).then((res) => {\n                console.log(res)\n                if (res.status === 211) {\n                    alert(\"아이디 중복입니다.\")\n                } else if (res.status === 212) {\n                    alert(\"닉네임 중복입니다.\")\n                } else if (res.status === 210) {\n                    alert(\"회원가입 완료 입니다.\")\n                    history.push(\"/login\")\n                }\n            })\n        }\n    }\n    ////////////////////////////////////////////////\n    const onSubmit = (e) => {\n        console.log(e)\n        e.preventDefault()\n        const formData = new FormData()\n        formData.append(\"img\", photo)\n        console.log(formData)\n        axios\n            .post(url + \"/users/photo\", formData, {\n                \"Content-Type\": \"multipart/form-data\",\n                withCredentials: true,\n            })\n            .then((res) => {\n                const { fileName } = res.data\n                setUploadedImg({ fileName, filePath: `${url}/img/${fileName}` })\n                alert(\"사진을 성공적으로 업로드 하였습니다!\")\n            })\n            .catch((err) => {\n                console.error(err)\n            })\n    }\n\n    const addFile = (e) => {\n        console.log(e.target.files[0])\n        setPhoto(e.target.files[0])\n    }\n    ////////////////////////////////////////////////////\n\n    return (\n        <Outer className=\"SignUpPageComponent\">\n            <h2>회원가입</h2>\n            <div className=\"SignUp--center\">\n                <StyledArticle className=\"id\">\n                    <InputAndTitle className=\"inputIdSection\">\n                        <h3>아이디</h3>\n                        <InputText\n                            type=\"text\"\n                            name=\"idInput\"\n                            placeholder=\"아이디\"\n                            onChange={idOnChangeHanlder(\"idInput\")}\n                        />\n                    </InputAndTitle>\n                    <ValidationListBox className=\"idValidationList\">\n                        <li>{inputVaildMessage.idInput}</li>\n                    </ValidationListBox>\n                </StyledArticle>\n                <StyledArticle className=\"password\">\n                    <InputAndTitle className=\"inputPwSection\">\n                        <h3>비밀번호</h3>\n                        <InputText\n                            type=\"password\"\n                            name=\"pwInput\"\n                            placeholder=\"비밀번호\"\n                            onChange={idOnChangeHanlder(\"pwInput\")}\n                        />\n                    </InputAndTitle>\n                    <ValidationListBox className=\"pwValidationList\">\n                        <li>{inputVaildMessage.pwInput}</li>\n                    </ValidationListBox>\n                </StyledArticle>\n                <StyledArticle className=\"password\">\n                    <InputAndTitle className=\"inputPwSection\">\n                        <h3>비밀번호 확인</h3>\n                        <InputText\n                            type=\"password\"\n                            name=\"pwCheckInput\"\n                            placeholder=\"비밀번호 확인\"\n                            onChange={idOnChangeHanlder2}\n                        />\n                    </InputAndTitle>\n                    <ValidationListBox className=\"pwValidationList\">\n                        <li>{pwCheckInputMessage}</li>\n                    </ValidationListBox>\n                </StyledArticle>\n                {/* //////////////////////////////////////////////////////// */}\n                <StyledArticle className=\"password\">\n                    <InputAndTitle className=\"inputPwSection\">\n                        <h3>이메일 인증</h3>\n                        <InputText\n                            type=\"email\"\n                            name=\"emailInput\"\n                            placeholder=\"ex) example@exammail.com\"\n                            onChange={idOnChangeHanlder(\"emailInput\")}\n                        />\n                    </InputAndTitle>\n                    <ValidationListBox className=\"pwValidationList\">\n                        <li>{inputVaildMessage.emailInput}</li>\n                        <Buttons className=\"SignUp--buttons\">\n                            <Button onClick={emailSend}>인증메일 보내기</Button>\n                        </Buttons>\n                    </ValidationListBox>\n                </StyledArticle>\n                <StyledArticle className=\"password\">\n                    <InputAndTitle className=\"inputPwSection\">\n                        <h3>이메일 인증 코드</h3>\n                        <InputText\n                            type=\"email\"\n                            name=\"emailVaildCode\"\n                            placeholder=\"인증코드\"\n                            onChange={idOnChangeHanlder(\"emailVaildCode\")}\n                        />\n                    </InputAndTitle>\n                    <ValidationListBox className=\"pwValidationList\">\n                        <li>{inputVaildMessage.emailVaildCode}</li>\n                    </ValidationListBox>\n                    <Buttons className=\"SignUp--buttons\">\n                        <Button onClick={codeSend}>코드 인증하기</Button>\n                    </Buttons>\n                </StyledArticle>\n                {/* //////////////////////////////////////////////////////// */}\n                <StyledArticle className=\"password\">\n                    <InputAndTitle className=\"inputPwSection\">\n                        <h3>닉네임</h3>\n                        <InputText\n                            type=\"text\"\n                            name=\"nickNameInput\"\n                            placeholder=\"닉네임\"\n                            onChange={idOnChangeHanlder(\"nickNameInput\")}\n                        />\n                    </InputAndTitle>\n                    <ValidationListBox className=\"pwValidationList\">\n                        <li>{inputVaildMessage.nickNameInput}</li>\n                    </ValidationListBox>\n                </StyledArticle>\n                <StyledArticle className=\"1\">\n                    <InputAndTitle2 className=\"2\">\n                        <h3>성별</h3>\n                        <Toggle />\n                    </InputAndTitle2>\n                </StyledArticle>\n                <StyledArticle className=\"password\">\n                    <InputAndTitle className=\"inputPwSection\">\n                        <h3>사는곳</h3>\n                        <DaumPostcode onComplete={handleComplete} />\n                    </InputAndTitle>\n                    <ValidationListBox className=\"pwValidationList\">\n                        {userRoadAddress}\n                    </ValidationListBox>\n                </StyledArticle>\n                <StyledArticle className=\"password\">\n                    <InputAndTitle className=\"inputPwSection\">\n                        <h3>프로필사진</h3>\n                        <Buttons2>\n                            {/* /////////////////////////////// */}\n                            <PhotoUploadSection\n                                onSubmit={onSubmit}\n                                className=\"photoUploadSection\"\n                            >\n                                <PhotoBox>\n                                    {uploadedImg ? (\n                                        <PhotoBox2 src={uploadedImg.filePath} />\n                                    ) : (\n                                        <div></div>\n                                    )}\n                                </PhotoBox>\n                                <Button2\n                                    type=\"file\"\n                                    className=\"photoButton\"\n                                    onChange={addFile}\n                                />\n                                <Button3 type=\"submit\">업로드</Button3>\n                            </PhotoUploadSection>\n                            {/* /////////////////////////////// */}\n                        </Buttons2>\n                    </InputAndTitle>\n                </StyledArticle>\n            </div>\n            <Buttons className=\"SignUp--buttons\">\n                <Button onClick={signupFunc}>가입</Button>\n            </Buttons>\n        </Outer>\n    )\n}\n","import React, { useEffect, useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport styled from \"styled-components\"\nimport { useHistory } from \"react-router-dom\"\nimport axios from \"axios\"\nimport { userPosts, updatePostId } from \"../actions/index\"\n// UPDATE_CURRENT_PAGE, UPDATE_START_END_PAGE\nimport GoBackButton from \"../components/GoBackButton\"\nimport Pagination from \"../components/Pagination\"\n\nconst Outer = styled.div`\n  position: relative;\n  background-color: var(--page-bg-color);\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100vw;\n  min-height: 100vh;\n  padding: 2rem;\n\n  h2 {\n    align-self: flex-start;\n    margin: 2rem 0;\n  }\n\n  button{\n    font-size: 1.5rem;\n  }\n\n  @media screen and (min-width: 1500px) {\n    // 제일 큰 사이즈\n    padding-left: 3vh;\n    padding-right: 3vh;\n  }\n  @media screen and (max-width: 375px) {\n    padding-top: 2vh;\n  }\n  @media screen and (max-width: 1081px) {\n    // 1080이하\n  }\n`\n\n// 내가 쓴 글 (grid)\nconst GridArea = styled.div`\n    // border: 1px solid blue;\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr 1fr;\n    grid-template-rows: 300px 300px ;\n    grid-gap: 1.5rem;\n    min-height: 70vh;\n    margin: 1rem;\n    p{\n      font-size: 28px;\n    }\n\n    .postItem {\n      background-color: rgba(255, 255, 255, 0.6);\n      display: flex;\n    }\n    .postItem:hover {\n      border: 1px solid #D5D8DC;\n    }\n    @media screen and (min-width: 2100px) {\n        height: 50vh;\n        width: 300px;\n    }\n    @media screen and (max-width: 1081px) {\n      padding-left: 5vw;\n      padding-right: 5vw;\n      height: auto;\n      grid-template-columns: 1fr 1fr;\n    }\n    @media screen and (max-width: 600px) {\n      padding-left: 2vw;\n      padding-right: 2vw;\n      p{\n        font-size:20px\n      }\n    }\n    @media screen and (max-width: 375px) {\n      height: auto;\n    }\n`\n\n// 게시물 사진\nconst PostImg = styled.img`\n  // border: 1px solid red;\n  width: 100%;\n  height: 100%;\n  background-color: #FFFFFF;\n\n  @media screen and (min-width: 2100px) {\n    width: 300px;\n    height: 300px;\n  }\n\n  @media screen and (max-width: 1081px) {\n    // 이미지 크기 수정 필요\n  }\n`\n\n//   @media screen and (max-width: 1081px) {\n//     padding: 1vh 2vw 2vh 2vw;\n//     font-size: 1.5rem;\n//   }\n//   @media screen and (max-width: 375px) {\n//     font-size: 1rem;\n//     padding-left: 3vw;\n//   }\n// `\n\n// 페이지네이션\nconst Page = styled.div`\n    display: flex;\n    justify-content: center;\n    li {\n      /* margin: 3px; */\n      list-style: none;\n      padding: 3px;\n      /* border: 1px solid red; */\n    }\n    button {\n      margin: 0 1vw;\n      padding: 1rem 1.5rem;\n      border-radius: 50%;\n    }\n    button:focus{\n      background-color: var(--modal-bg-color);\n    }\n    #prev,\n    #next{\n      background: none;\n    }\n    @media screen and (max-width: 1081px) {\n      margin-top: 10rem;\n      padding-bottom: 5rem;\n\n    }\n\n    @media screen and (max-width: 375px) {\n      margin-top: 3rem;\n      padding-bottom: 3rem;\n      li {\n        /* margin: 0 1vw; */\n        /* margin: 1vh; */\n        padding: 0;\n\n      }\n      button {\n        /* margin: 0 1.5vw; */\n        font-size: 1.5rem;\n        margin: 0;\n        padding: 1px 7px;\n      }\n    }\n`\n\n\nlet url = process.env.REACT_APP_LOCAL_URL\nif (!url) url = \"https://thereweather.space\"\n\n\nexport default function MyPost() {\n  const dispatch = useDispatch()\n  const history = useHistory()\n  const { start, end, current, isLogin, userInfo, postInfo, readPostId } = useSelector((state) => state.itemReducer)\n\n  const [currentPosts, setcurrentPosts] = useState([]);\n\n  useEffect(() => {\n    axios({\n        url: url + `/mypost?searchID=${userInfo.user_id}`,\n        method: \"get\",\n        withCredentials: true,\n    }).then((res) => {\n        //console.log(res.data)\n        setcurrentPosts(res.data)\n        dispatch(userPosts(res.data))\n    })\n  }, [])\n\n  // 페이지네이션 시작\n  const [ currentPage, setCurrentPage ] = useState(1);\n    // 1페이지로 시작\n  const itemsPerPage = 8;\n    // 한 페이지에 8개씩 보여준다\n  const lastIdx = currentPage * itemsPerPage;\n  const firstIdx = lastIdx - itemsPerPage;\n  const slicedData = (dataArr) => {\n    return dataArr.slice(firstIdx, lastIdx);\n  }\n  // 페이지네이션 끝\n\n  // 게시물사진 클릭했을 때\n  const postClickHandler = (e) => {\n    let elem = e.target;\n    while(!elem.classList.contains(\"postItem\")) {\n        elem = elem.parentNode;\n        if(!elem.classList.contains(\"myPostList\")) {\n            break;\n        }\n    }\n\n    dispatch(updatePostId(elem.id));\n    history.push({\n        pathname: '/postread',\n        state: {postId: elem.id}\n    });\n  }\n\n  return (\n    <Outer className=\"MyPostPage\">\n      <div>\n        <GoBackButton className=\"gobackButton\" />\n        <h2>내가 쓴 게시물</h2>\n      </div>\n\n      <GridArea className=\"myPostList\">\n        { /* 페이지 분할 및 적용 */\n          slicedData(currentPosts).map((el) =>\n          <div className={[\"postItem\"]} id={el.id} onClick={postClickHandler} key={el.id}>\n            <PostImg src={el.post_photo} alt=\"posts\"/>\n          </div>)\n        }\n      </GridArea>\n\n      <div className=\"paginationContainer\">\n        <Pagination\n          dataLength={currentPosts.length}\n          itemsPerPage={itemsPerPage}\n          numberButtonClickHandler={setCurrentPage}\n        />\n      </div>\n    </Outer>\n  )\n}","import React, { useState, useEffect } from \"react\"\nimport styled from \"styled-components\"\nimport axios from \"axios\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { useHistory } from \"react-router-dom\"\nimport { changeMapPage } from \"../actions/index\"\n\n/*\n    [수정]\n    이미지 태그에 alt 추가 (없으면 콘솔에 오류 뜸)\n*/\n\nconst Outer = styled.div`\n    overflow: scroll;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n    width: 100vw;\n    min-height: var(--mobile-page-height);\n    padding: 3rem auto;\n    background-color: var(--page-bg-color);\n\n    @media screen and (min-width: 1081px) {\n        flex-direction: row;\n        min-height: var(--desktop-page-height);\n        padding: 2rem;\n    }\n`\n\nconst Button = styled.button`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border: 1px solid black;\n    border-radius: ${(props) => (props.round ? \"50%\" : null)};\n    background-color: var(--button-bg-normal);\n    font-size: 1.25rem;\n    padding: ${(props) => (props.round ? \".5rem .5rem\" : \".5rem 2rem\")};\n    margin: ${(props) => (props.round ? \".5rem\" : \"1rem\")};\n\n    & > img {\n        height: 1.5rem;\n        width: 1.5rem;\n    }\n`\nconst Button2 = styled.input`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: 1rem;\n    padding: 0.8rem;\n    border-radius: 1rem;\n    font-size: 1rem;\n    font-weight: bold;\n    color: white;\n    background-color: #FEC0CB;\n\n    > span {\n        margin: 0.25rem;\n    }\n`\n\nconst PictureSection = styled.form`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 1rem;\n    height: inherit;\n\n    @media screen and (min-width: 1081px) {\n        justify-content: center;\n        width: 40vw;\n    }\n`\n\nconst DesktopRight = styled.section`\n    display: flex;\n    flex-grow: 1;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n\n    @media screen and (min-width: 1081px) {\n        justify-content: space-around;\n        width: 40vw;\n    }\n`\n\nconst ButtonsAndSelects = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 1rem;\n`\n\nconst FlexColumnCenter = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 1rem auto;\n\n    & > p {\n        margin: 0.5rem;\n        font-weight: bold;\n    }\n`\n\nconst FilteringButtons = styled.article`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    align-items: center;\n`\n\nconst FilteringBtn = styled.button`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border: 3px solid grey;\n    border: ${(props) => (props.active ? \"3px solid black\" : \"3px solid grey\")};\n    height: 2rem;\n    width: 2rem;\n    margin: 0.25rem;\n    background-color: white;\n    border-radius: 0.3rem;\n\n    img {\n        width: 1.5rem;\n        height: 1.5rem;\n    }\n`\n\nconst TextSection = styled.section`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n    margin: 2rem auto;\n    height: inherit;\n\n    & > .submitButton {\n        margin: 2rem auto;\n    }\n`\n\nconst SelectArea = styled.article`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    & > select {\n        padding: 0.3rem;\n        margin: auto 0.5rem;\n    }\n`\n\nconst WriteText = styled.textarea`\n    width: 70vw;\n    min-width: 250px;\n    height: ${(props) => (props.small ? \"3rem\" : \"20vh\")};\n    text-align: justify;\n    vertical-align: center;\n    line-height: 1.2rem;\n    font-size: 1.2rem;\n    margin: 2rem 1rem 4rem;\n    padding: 1rem;\n\n    @media screen and (min-width: 1081px) {\n        width: ${(props) => (props.small ? \"35vw\" : \"40vw\")};\n        max-width: ${(props) => (props.small ? \"500px\" : \"800px\")};\n    }\n`\nconst PhotoBox = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: auto;\n    height: auto;\n    min-width: 300px;\n    min-height: 300px;\n    background-color: #ececec;\n    border: 1px solid #b5b5b5;\n    object-fit: cover;\n`\n\nconst PhotoBox2 = styled.img`\n    min-width: 300px;\n    width: 30vh;\n    height: auto;\n`\n\nconst Button3 = styled.button`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: 0.5rem;\n    padding: 0.8rem;\n    font-size: 1rem;\n    font-weight: bold;\n    color: white;\n    background-color: #FEC0CB;\n    border-radius: 1rem;\n\n    > span {\n        margin: 0.25rem;\n    }\n`\n\nconst Secret = styled.div`\n    color: white;\n`\n\nlet url = process.env.REACT_APP_LOCAL_URL\nif (!url) url = \"https://thereweather.space\"\n\nexport default function Write() {\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const { userInfo, curLocation } = useSelector((state) => state.itemReducer)\n    const [selectWeather, setSelectWeather] = useState()\n    const [selectWind, setSelectWind] = useState()\n    const [selectTemp, setSelectTemp] = useState()\n    const [photo, setPhoto] = useState(\"\")\n    const [userPosts, setUserPosts] = useState()\n    const [uploadedImg, setUploadedImg] = useState({\n        fileName: \"blankPost.png\",\n        filePath: `${url}/img/blankPost.png`,\n    })\n\n    if (!url) {\n        url = \"https://thereweather.space\"\n    }\n    // 제목 handler\n    const [title, setTitle] = useState(\"\")\n\n    const titleInputHandler = (e) => {\n        setTitle((prev) => e.target.value)\n    }\n    useEffect(() => {\n        console.log(userInfo.user_id)\n    }, [])\n\n    // 날씨 버튼\n    const weathers = [\n        \"sunny\",\n        \"cloudy\",\n        \"rainy\",\n        \"snowy\",\n        \"breezy\",\n        \"windy\",\n        \"strong\",\n        \"cold\",\n        \"hot\",\n    ]\n    // 날씨 필터링용 state\n    const [clickedWeatherButtons, setClickedWeatherButtons] = useState([])\n    // 스타일 적용 state\n    const [isFilteringBtnActive, setIsFilteringBtnActive] = useState({\n        sunny: false,\n        cloudy: false,\n        rainy: false,\n        snowy: false,\n    })\n    const [isFilteringBtnActive2, setIsFilteringBtnActive2] = useState({\n        breezy: false,\n        windy: false,\n        strong: false,\n    })\n    const [isFilteringBtnActive3, setIsFilteringBtnActive3] = useState({\n        cold: false,\n        hot: false,\n    })\n\n    // 날씨 버튼 handler\n    const weatherBtnHandler = (e) => {\n        if (e.target.nodeName === \"ARTICLE\") return\n        let elem = e.target\n\n        while (!elem.classList.contains(\"weatherButton\")) {\n            elem = elem.parentNode\n            console.log(\"while - work?\", elem.name)\n            setSelectWeather(elem.name)\n\n            if (elem.nodeName === \"ARTICLE\") {\n                elem = null\n                return\n            }\n        }\n\n        if (elem && clickedWeatherButtons.includes(elem.name)) {\n            setClickedWeatherButtons((arr) => [\n                ...arr.filter((btnName) => btnName !== elem.name),\n            ])\n            setIsFilteringBtnActive((btnListObj) => {\n                return { ...btnListObj, [elem.name]: false }\n            })\n        } else {\n            setClickedWeatherButtons((arr) => [...arr, elem.name])\n            setIsFilteringBtnActive((btnListObj) => {\n                return { ...btnListObj, [elem.name]: true }\n            })\n        }\n    }\n\n    /* clickedWeatherButtons 상태 확인용 */\n    // useEffect (() => {\n    //   console.log('***clickedWeatherButtons: useEffect***', clickedWeatherButtons);\n    // },[clickedWeatherButtons]);\n\n    // 겉옷 더미데이터\n    const outer = [\n        [\"default\", \"겉옷 선택\"],\n        [\"가디건\", \"가디건\"],\n        [\"자켓\", \"자켓\"],\n        [\"얇은코트\", \"얇은 코트\"],\n        [\"두꺼운코트\", \"두꺼운 코트\"],\n        [\"패딩\", \"패딩\"],\n    ]\n\n    // 상의 더미데이터 (state 변수가 필요하게 될까?)\n    const clothesTop = [\n        [\"default\", \"상의 선택\"],\n        [\"민소매\", \"민소매\"],\n        [\"반팔\", \"반팔\"],\n        [\"긴팔\", \"긴팔\"],\n        [\"셔츠\", \"셔츠\"],\n        [\"니트\", \"니트\"],\n    ]\n\n    // 하의 더미데이터\n    const clothesBottom = [\n        [\"default\", \"하의 선택\"],\n        [\"반바지\", \"반바지\"],\n        [\"긴바지\", \"긴 바지\"],\n    ]\n\n    // select 상태 관리 & 이벤트 핸들러\n    const [selectValueOuter, setSelectValueOuter] = useState(\"default\")\n    const [selectValueTop, setSelectValueTop] = useState(\"default\")\n    const [selectValueBottom, setSelectValueBottom] = useState(\"default\")\n\n    const selectOuterHandler = (e) => {\n        setSelectValueOuter(e.target.value)\n    }\n\n    const selectTopHandler = (e) => {\n        setSelectValueTop(e.target.value)\n    }\n\n    const selectBottomHandler = (e) => {\n        setSelectValueBottom(e.target.value)\n    }\n\n    // textarea state & handler\n    const [postText, setPostText] = useState(\"\")\n    const postTextHandler = (e) => {\n        setPostText(e.target.value)\n    }\n\n    // 등록버튼 이벤트\n    const submitButtonHandler = (e) => {\n        //console.log(\"등록버튼 동작 확인\")\n        // TODO\n        // axios.post\n        // 페이지 이동 : '글 읽기' 페이지로?\n        //console.log(userInfo.user_id)\n        if (curLocation.lat === \"\") {\n            alert(\"gps활용 허용하신 회원만 예보를 작성 할 수 있습니다.\")\n            history.push(\"/map\")\n        } else if (\n            title.length > 0 &&\n            postText.length > 0 &&\n            uploadedImg.fileName !== \"blankPost.png\" &&\n            // selectValueOuter !== \"default\" &&\n            selectValueTop !== \"default\" &&\n            selectValueBottom !== \"default\" &&\n            selectWeather &&\n            selectWind &&\n            selectTemp &&\n            curLocation\n        ) {\n            //&& !photo && !selectWeather && !selectWind && !setSelectTemp\n\n            axios({\n                url: url + \"/post/write\",\n                method: \"post\",\n                // headers: {\n                //     // accept: \"application/json\",\n                // },\n                data: {\n                    user_id: userInfo.user_id,\n                    post_photo: uploadedImg.filePath,\n                    post_title: title,\n                    post_content: postText,\n                    weather: selectWeather,\n                    wind: selectWind,\n                    temp: selectTemp,\n                    outer_id: selectValueOuter,\n                    top_id: selectValueTop,\n                    bottom_id: selectValueBottom,\n                    xLocation: curLocation.lat,\n                    yLocation: curLocation.lon,\n                },\n                withCredentials: true,\n            })\n                .then((res) => {\n                    alert(\"작성 완료\")\n                    history.push(\"/mypage\")\n                })\n                .catch((err) => console.log(err))\n        } else {\n            alert(\"모든 항목은 필수입니다:)\")\n        }\n    }\n    useEffect(() => {\n        dispatch(changeMapPage(false))\n    }, [])\n    useEffect(() => {\n        setIsFilteringBtnActive({\n            sunny: false,\n            cloudy: false,\n            rainy: false,\n            snowy: false,\n            [selectWeather]: true,\n        })\n    }, [selectWeather])\n    useEffect(() => {\n        setIsFilteringBtnActive2({\n            breezy: false,\n            windy: false,\n            strong: false,\n            [selectWind]: true,\n        })\n    }, [selectWind])\n    useEffect(() => {\n        setIsFilteringBtnActive3({\n            cold: false,\n            hot: false,\n            [selectTemp]: true,\n        })\n    }, [selectTemp])\n    function weatherFunc(select) {\n        console.log(\"select=\" + select)\n        setSelectWeather(select)\n    }\n    function weatherFunc2(select) {\n        console.log(\"select=\" + select)\n        setSelectWind(select)\n    }\n    function weatherFunc3(select) {\n        console.log(\"select=\" + select)\n        setSelectTemp(select)\n    }\n    const onSubmit = (e) => {\n        console.log(e)\n        e.preventDefault()\n        const formData = new FormData()\n        formData.append(\"img\", photo)\n        console.log(formData)\n        axios\n            .post(url + \"/post/photo\", formData, {\n                \"Content-Type\": \"application/json\",\n                withCredentials: true,\n            })\n            .then((res) => {\n                const { fileName } = res.data\n                setUploadedImg({\n                    fileName,\n                    filePath: `${url}/img/${fileName}`,\n                })\n                alert(\"사진을 성공적으로 업로드 하였습니다!\")\n            })\n            .catch((err) => {\n                console.error(err)\n            })\n    }\n    const addFile = (e) => {\n        console.log(e.target.files[0])\n        setPhoto(e.target.files[0])\n    }\n    function sFunc() {\n        function random(min, max) {\n            return parseFloat((Math.random() * (max - min) + min).toFixed(7))\n        }\n        function getRandomIntInclusive(min, max) {\n            min = Math.ceil(min)\n            max = Math.floor(max)\n            return Math.floor(Math.random() * (max - min + 1)) + min\n        }\n        for (let n = 0; n < 20; n++) {\n            axios({\n                url: url + \"/post/write\",\n                method: \"post\",\n                data: {\n                    // user_id: Math.random().toString(36).substr(2, 5),\n                    user_id: \"kimcoding\",\n                    post_photo: `http://placeimg.com/640/${getRandomIntInclusive(\n                        480,\n                        640\n                    )}/nature`,\n                    post_title: Math.random().toString(36).substr(2, 20),\n                    post_content: Math.random().toString(36).substr(2, 100),\n                    weather: [\"sunny\", \"cloudy\", \"rainy\", \"snowy\"][\n                        getRandomIntInclusive(0, 3)\n                    ],\n                    wind: [\"breezy\", \"windy\", \"strong\"][\n                        getRandomIntInclusive(0, 2)\n                    ],\n                    temp: [\"cold\", \"hot\"][getRandomIntInclusive(0, 1)],\n                    outer_id: [\n                        \"가디건\",\n                        \"자켓\",\n                        \"얇은코트\",\n                        \"두꺼운코트\",\n                        \"패딩\",\n                    ][getRandomIntInclusive(0, 4)],\n                    top_id: [\"민소매\", \"반팔\", \"긴팔\", \"셔츠\", \"니트\"][\n                        getRandomIntInclusive(0, 4)\n                    ],\n                    bottom_id: [\"반바지\", \"긴바지\"][\n                        getRandomIntInclusive(0, 1)\n                    ],\n                    xLocation: random(34.468469558695375, 38.215952021543174),\n                    yLocation: random(126.25754765741554, 128.58236509939096),\n                },\n                withCredentials: true,\n            })\n        }\n    }\n\n    return (\n        <Outer className=\"writePage\">\n            <PictureSection\n                className=\"pictureUploadSection writePageLeft\"\n                onSubmit={onSubmit}\n            >\n                <article className=\"titleInput\">\n                    <WriteText\n                        onChange={titleInputHandler}\n                        value={title}\n                        placeholder=\"제목을 입력하세요.\"\n                        small\n                    ></WriteText>\n                </article>\n                <PhotoBox>\n                    {uploadedImg ? (\n                        <PhotoBox2 src={uploadedImg.filePath} alt=\"icon\" />\n                    ) : (\n                        <div></div>\n                    )}\n                </PhotoBox>\n                <Button2\n                    type=\"file\"\n                    className=\"uploadButton\"\n                    onChange={addFile}\n                    round\n                />\n                <Button3 type=\"submit\">업로드</Button3>\n            </PictureSection>\n\n            <DesktopRight className=\"writePageRight\">\n                <ButtonsAndSelects className=\"buttonsAndSelects\">\n                    <FlexColumnCenter className=\"smallSection\">\n                        <p>날씨를 선택하세요.</p>\n                        <FilteringButtons className=\"filteringButtons\">\n                            {/* {weathers.map((weather, idx) => { */}\n                            {/* return ( */}\n                            <FilteringBtn\n                                name={\"sunny\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive[\"sunny\"]}\n                                onClick={() => weatherFunc(\"sunny\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"sunny\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            <FilteringBtn\n                                name={\"cloudy\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive[\"cloudy\"]}\n                                onClick={() => weatherFunc(\"cloudy\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"cloudy\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            <FilteringBtn\n                                name={\"rainy\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive[\"rainy\"]}\n                                onClick={() => weatherFunc(\"rainy\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"rainy\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            <FilteringBtn\n                                name={\"snowy\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive[\"snowy\"]}\n                                onClick={() => weatherFunc(\"snowy\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"snowy\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            <FilteringBtn\n                                name={\"breezy\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive2[\"breezy\"]}\n                                onClick={() => weatherFunc2(\"breezy\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"breezy\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            <FilteringBtn\n                                name={\"windy\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive2[\"windy\"]}\n                                onClick={() => weatherFunc2(\"windy\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"windy\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            <FilteringBtn\n                                name={\"strong\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive2[\"strong\"]}\n                                onClick={() => weatherFunc2(\"strong\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"strong\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            <FilteringBtn\n                                name={\"hot\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive3[\"hot\"]}\n                                onClick={() => weatherFunc3(\"hot\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"hot\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            <FilteringBtn\n                                name={\"cold\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive3[\"cold\"]}\n                                onClick={() => weatherFunc3(\"cold\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"cold\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            {/* ) */}\n                            {/* })} */}\n                        </FilteringButtons>\n                    </FlexColumnCenter>\n\n                    <FlexColumnCenter className=\"smallSection\">\n                        <p>의상을 선택하세요.</p>\n                        <SelectArea>\n                            <select\n                                className=\"outer\"\n                                value={selectValueOuter}\n                                onChange={selectOuterHandler}\n                            >\n                                {outer.map((elem, idx) => {\n                                    return (\n                                        <option value={elem[0]} key={idx}>\n                                            {elem[1]}\n                                        </option>\n                                    )\n                                })}\n                            </select>\n                            <select\n                                className=\"top\"\n                                value={selectValueTop}\n                                onChange={selectTopHandler}\n                            >\n                                {clothesTop.map((elem, idx) => {\n                                    return (\n                                        <option value={elem[0]} key={idx}>\n                                            {elem[1]}\n                                        </option>\n                                    )\n                                })}\n                            </select>\n                            <select\n                                className=\"bottom\"\n                                value={selectValueBottom}\n                                onChange={selectBottomHandler}\n                            >\n                                {clothesBottom.map((elem, idx) => {\n                                    return (\n                                        <option value={elem[0]} key={idx}>\n                                            {elem[1]}\n                                        </option>\n                                    )\n                                })}\n                            </select>\n                        </SelectArea>\n                    </FlexColumnCenter>\n                </ButtonsAndSelects>\n\n                <TextSection>\n                    <WriteText\n                        type=\"text\"\n                        placeholder=\"글을 입력하세요.\"\n                        value={postText}\n                        onChange={postTextHandler}\n                    />\n                    <Button\n                        className=\"submitButton\"\n                        onClick={submitButtonHandler}\n                    >\n                        등록\n                    </Button>\n                    <Secret onClick={() => sFunc()}>.</Secret>\n                </TextSection>\n            </DesktopRight>\n        </Outer>\n    )\n}\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport { Bookmark } from \"../components/Heart\";\nimport ModalConfirm from \"../components/ModalConfirm\";\nimport GoBackButton from  \"../components/GoBackButton\";\nimport { useHistory } from \"react-router-dom\";\nimport TopButton from \"../components/TopButton\";\n\n/*\n  [수정사항]\n  - 옷차림 아이콘 경로 수정\n  - select 태그용 배열 테스트\n  - 게시물 작성 위치를 기준으로 주소 렌더링\n  - 하단의 주석 제거\n  - '잘못된 요청입니다' 메시지 h2에 margin 추가\n*/\n\nconst Outer = styled.div`\n  width: 100vw;\n  background-color: var(--page-bg-color);\n\n  // 오늘의 코디\n  .todayCodi{\n    margin: 0 auto;\n    width: 60%;\n    text-align: center;\n    color: #2E2E2E;\n    padding-top: 2vh;\n    border-top: 1px solid #aaa;\n  }\n\n  h2.warning--nodata {\n    color: #c60239;\n    font-size: 3rem;\n    margin: 0 1rem;\n  }\n\n  @media screen and (max-width: 1081px){\n    .todayCodi{\n      margin-top: 2vh;\n      font-weight: bold;\n    }\n  }\n  @media screen and (max-width: 375px) {\n  }\n`\n// 제목, 유저프로필사진,닉네임 북마크버튼\nconst PostHeader = styled.div`\n  padding-top: 8vh;\n  align-items: center;\n\n  @media screen and (max-width: 1081px) {\n    padding-top: 5vh;\n  }\n`\n// 제목 // 제목글자수 제한 필요?\nconst Title = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 80%;\n  max-width: 960px;\n  text-align: center;\n  margin: 0 auto;\n\n  span{\n    font-size: 2rem;\n  }\n\n  @media screen and (max-width: 1081px) {\n    width: 70%;\n  }\n  @media screen and (max-width: 375px) {\n    width: 80%; // 추가\n    span{\n      font-size: 1.2rem;\n    }\n  }\n`\n\n// 북마크 아이콘\nconst BookmarkIcon = styled(Bookmark)`\n  float: right;\n\n  & .heart{\n    cursor: pointer;\n    color: #aaa;\n  }\n`\n\n\n// 프로필\nconst Profile = styled.div`\n  width: 60rem;\n  margin: 0 auto;\n  margin-top: 2vh;\n  padding-bottom: 3vh;\n  border-bottom: 1px solid #aaa;\n  align-items: center;\n  display: flex; \n  justify-content: space-between;\n  flex-flow: wrap;\n\n  .profileInfo{\n    display: flex; \n    align-items: center;\n    /* margin-left: 1vh; */\n  }\n  .location{\n    font-size: 1.2rem;\n  }\n  span{\n    margin-left: 1vh;\n  }\n  span.date {\n    font-size: .8rem;\n    color: #707B7C;\n  }\n\n  @media screen and (max-width: 1081px) {\n    width: 70%;\n  }\n  @media screen and (max-width: 594px) {\n    .location{\n      margin-top: 1.2vh;\n      font-size: 1.2rem;\n    }\n  }\n  @media screen and (max-width: 375px) {\n    width: 80%;\n    margin-top: 4vh;\n    span{\n      font-size: 0.5rem;\n    }\n    span.date {\n      font-size: .5rem;\n      color: #707B7C;\n    }\n    .location{\n      margin-top: 0;\n      font-size: 0.5rem;\n    }\n  }\n`\n// 프로필 이미지\nconst ProfileImg = styled.img`\n  border: 1px solid #aaa;\n  width: 4rem;\n  height: 4rem;\n  border-radius: 50%;\n  @media screen and (max-width: 375px) {\n    width: 2rem;\n    height: 2rem;\n  }\n`\n\n// 게시물 사진 (있을 때, 없을때)\nconst PostImg = styled.img`\n  // 이미지 사이즈(1000*750) \n  // 다시 확인필요\n  width: 60rem;\n  height: 40rem;\n  display: block;\n  margin: 3vh auto;\n\n  @media screen and (max-width: 1081px) {\n    width: 70%;\n    height: 30rem;\n  }\n  @media screen and (max-width: 375px) {\n    width: 80%;\n    height: 18rem;\n  }\n`\n\n// 날씨,바람세기,온도 이모티콘 부분\nconst WeatherInfo = styled.div`\n  width: 330px;\n  margin-top: 4vh;\n  display: flex;\n  margin: 0 auto;\n  margin-bottom: 2vh;\n  justify-content: space-between;\n\n  @media screen and (max-width: 1081px) {\n    margin-top: 1vh;\n    margin-bottom: 1vw;\n    justify-content: space-around;\n  }\n  @media screen and (max-width: 375px) {\n    width: 50%;\n    margin-bottom: 3vh;\n  }\n`\n\nconst Icon = styled.img`\n  @media screen and (max-width: 1081px) {\n    width: 4rem;\n  }\n  @media screen and (max-width: 375px) {\n    width: 3rem;\n  }\n`\n\n// 오늘의 코디 (있을 때, 없을 때)\nconst TodayCodi = styled.div`\n  width: 20%;\n  text-align: center;\n  display: flex;\n  justify-content: center;\n  align-items:center;\n  margin: auto;\n  margin-top: 3vh;\n  margin-bottom: 3vh;\n  .warning{\n    display: none;\n  }\n  & p.warning {\n    font-size: .9rem;\n    width: 6rem;\n    height: 6rem;\n    text-align: center;\n  }\n\n  img {\n    width: 4rem;\n    height: auto;\n  }\n\n  @media screen and (max-width: 1081px) {\n    width: 50%;\n  }\n  @media screen and (max-width: 375px) {\n    width: 50vw;\n  }\n`\n\n// 게시물 내용 scroll\nconst Post = styled.div`\n  background-color: rgba(255, 255, 255, 0.5);\n  margin: 0 auto;\n  margin-bottom: 5vh;\n  padding: 1rem;\n  width: 60rem;\n\n  p{\n    line-height: 2.5rem;\n    font-size: 1.5rem;\n  }\n\n  @media screen and (max-width: 1081px) {\n    width: 70%;\n  }\n  @media screen and (max-width: 375px) {\n    width: 85%;\n    margin-top: 4vh;\n    p{\n      line-height: 1.5rem;\n      font-size: 1rem;\n    }\n  }\n`\n\n// 삭제, 수정 버튼\nconst Buttons = styled.div`\n  width: 15rem;\n  margin: 0 auto;\n  padding-bottom: 10vh;\n\n  .button{\n    width: 5rem;\n    height: 3rem;\n    border-radius: 5px;\n    background-color: var(--button-bg-normal);\n    font-size: 1.2rem;\n  }\n  .button2{\n    margin-left: 5rem;\n  }\n  .button:before{\n    height: 0%;\n    width: 2px;\n  }\n  .button:active{\n    border: none;\n    box-shadow:  4px 4px 6px 0 rgba(255,255,255,.5),\n    inset -4px -4px 6px 0 rgba(255,255,255,.2),\n    inset 4px 4px 6px 0 rgba(0, 0, 0, .4);\n  }\n\n  @media screen and (max-width: 1081px) {\n    .button2{\n      margin-left: 80px;\n    }\n  }\n  @media screen and (max-width: 375px) {\n    width: 40%;\n    display: flex;\n    justify-content: space-between;\n    .button{\n      width: 3rem;\n      height: 2rem;\n      font-size: 1rem;\n    }\n    .button2{\n      margin-left: 0;\n    }\n  }\n`\n\nlet url = process.env.REACT_APP_LOCAL_URL\nif (!url) url = \"https://thereweather.space\"\n\nexport default function PostRead(){\n  const history = useHistory()\n  const { readPostId, userInfo, postInfo } = useSelector(state => state.itemReducer);\n  console.log(userInfo) //현재접속한 유저 \n  console.log(readPostId) //포스트번호 \n  console.log(postInfo) //본인것만 보임\n  // console.log(pagePostInfo)\n  const postIds = Number(readPostId)\n  console.log(postIds) \n\n  // postData state 변수\n  const [postData, setPostData] = useState({\n    id: null,\n    post_title: '',\n    user_id: '',\n    createdAt: '',\n    updatedAt: '',\n    xLocation: '',\n    yLocation: '',\n    post_photo: '',\n    weather: '',\n    wind: '',\n    temp: '',\n    top_id: '',\n    bottom_id: '',\n    post_content: '',\n    address: ''\n  });\n  const [ noIdWarning, setNoIdWarning ] = useState('');\n\n  // 날짜 처리\n  const formatDate = (dateString) => {\n    // 예시 : 2021. 11. 5. 22:02\n    const dateObject = new Date(dateString);\n    let dateOnly = dateObject.toLocaleDateString();\n    let hourAndMin = dateObject.toLocaleTimeString('en-US', { hour12: false });\n    hourAndMin = hourAndMin.slice(0, -3);\n\n    return `${dateOnly} ${hourAndMin}`\n  }\n\n  // 글 불러오기\n  useEffect(() => {\n    function getOnePost(postId) {\n      axios.get(`${url}/readpost`, {\n        headers: { \"Content-Type\": \"application/json\" },\n        params: { id: postId },\n        withCredentials: true\n      })\n      .then (res => {\n        console.log(res.data);\n        return setPostData(prev => res.data);\n        // return res.data;\n      })\n      .catch (err => console.log(err));\n    };\n\n    let id;\n    if (history.location.state) {\n      id = history.location.state.postId;\n    } else {\n      id = readPostId;\n    }\n\n    if (!id) {\n      console.log('**postread: id가 없습니다**');\n      setNoIdWarning(prev => '잘못된 접근입니다.');\n    } else {\n      getOnePost(id);\n    }\n  }, [])\n\n  // 북마크 상태\n  const [bookmarked, setBookmarked] = useState(false);\n\n  // const [isOpen, setIsOpen] = useState(false);\n  // 게시물 수정\n  const [edit, setEdit] = useState(false)\n  // 게시물 삭제\n  const [removePost, setRemovePost] = useState(false)\n\n  // 게시물 수정\n  const editPost = () => {\n    console.log('수정버튼동작확인');\n    setEdit(true);\n  }\n\n  // 게시물 삭제\n  const deletePost = (e) => {\n    console.log('삭제버튼동작확인');\n    setRemovePost(true);\n  }\n\n  //게시물 수정 yse버튼 \n  const editModalYes = () => {\n    axios({\n      url: url + \"/editpost\",\n      method: \"put\",\n      data: {\n        user_id: userInfo.user_id,\n        post_id: postIds\n      },\n      withCredentials: true\n    })\n    .then((res) => {\n      alert(res.data)\n      if(res.data === \"게시물의 작성자가 아닙니다.\"){\n        history.push(\"/mypage\");\n      }\n      else{\n        history.push(\"/editpost\");\n      }\n    })\n    setEdit(false);\n  }\n\n  //게시물 삭제 yes버튼 \n  const removeModalYes = () => {\n    // console.log('삭제완료')\n    const token = JSON.parse(localStorage.getItem(\"ATOKEN\"))\n    //console.log(token)\n    axios({\n      url:  url + \"/deletepost\",\n      method: \"delete\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `token ${token}`,\n      },\n      data: { post_id: postIds },\n      withCredentials: true\n    })\n    .then((res) => {\n      console.log(res.data)\n      alert(res.data)\n      // alert(\"삭제 완료\")\n      history.push(\"/mypage\")\n    })\n    setRemovePost(false)\n  }\n\n  const modalNoButtonHandler = () => {\n    setRemovePost(false)\n    setEdit(false)\n  }\n\n  const modalCloseButtonHandler = () => {\n    setRemovePost(false)\n    setEdit(false)\n  }\n\n  const bookmarkHandler = (e) => {\n    console.log('글 읽기 - 북마크 버튼 동작 확인');\n    //눌렀을 때 북마크에 저장\n    //다시 누르면 해제\n      axios({\n        url: url + '/bookmark',\n        method: \"post\",\n        data: { user_id: userInfo.id, post_id: postIds },\n        // data: { post_id: postId },\n        headers: {  \"Content-Type\": \"application/json\" },\n        withCredentials: true,\n      })\n    .then((res) => {\n      console.log(res.data)\n      setBookmarked(prev => !prev);\n      // history.push(\"/bookmark\")  \n    })  \n  // console.log(e.currentTarget);\n  }\n\n  return (\n    <Outer>\n      {\n        noIdWarning.length !== 0 ?\n          <h2 className=\"warning--nodata\">{noIdWarning}</h2>\n        :\n          ''\n      }\n      <TopButton/>\n      <GoBackButton/>\n      <PostHeader className=\"postHeader\">\n        <Title className=\"title\">\n          <span>{postData.post_title}</span>\n          <BookmarkIcon\n            bookmarkHandler={bookmarkHandler}\n            color={bookmarked ? '#ED4956' : '#aaa' }\n          />\n         \n        </Title>\n\n        <Profile className=\"userProfile\">\n          <div className=\"profileInfo\">\n            <ProfileImg src={postData.user_Photo}/>\n            <span className=\"nickName\">{postData.nickName}</span>\n            <span className=\"date\">\n              {formatDate(postData.updatedAt)}\n            </span>\n          </div>\n          <div>\n            <p className=\"location\">{postData.address}</p>\n            {/* <p className=\"location\">{postData.xLocation.slice(0, -8)}</p>\n            <p className=\"location\">{postData.yLocation.slice(0, -8)}</p> */}\n          </div>\n        </Profile>\n      </PostHeader>\n      <PostImg src={postData.post_photo} alt=\"post picture\" />\n\n      <WeatherInfo>\n          {\n            !postData.weather?\n              ''\n            :\n              <Icon src={`${process.env.PUBLIC_URL}img/icons-write/${postData.weather}.png`} alt=\"날씨아이콘\"/>\n          }\n          {\n            !postData.wind?\n              ''\n            :\n              <Icon src={`${process.env.PUBLIC_URL}img/icons-write/${postData.wind}.png`} alt=\"바람아이콘\"/>\n          }\n          {\n            !postData.temp?\n              ''\n            :\n              <Icon src={`${process.env.PUBLIC_URL}img/icons-write/${postData.temp}.png`} alt=\"날씨아이콘\"/>\n          }\n      </WeatherInfo>\n\n      {/* 코디가 있을 때, 없을 때 */}\n      {\n        // 코디 3개 없을때\n        (!postData.outer_id || postData.outer_id === 'default') && (!postData.top_id || postData.top_id === 'default') && (!postData.bottom_id || postData.top_id === 'default') ?\n          null\n        :\n          <>\n          <h2 className=\"todayCodi\">오늘의 코디</h2>\n          <TodayCodi>\n            {\n              !postData.outer_id || postData.outer_id === 'default' ?\n              <p className=\"warning\">겉옷 데이터가 없습니다</p>\n              :\n                <Icon src={`${process.env.PUBLIC_URL}img/codi/${postData.outer_id}.png`} alt=\"겉옷\" />\n            }\n            {\n              !postData.top_id || postData.top_id === 'default' ?\n                <p className=\"warning\">상의 데이터가 없습니다</p>\n              :\n                <Icon src={`${process.env.PUBLIC_URL}img/codi/${postData.top_id}.png`} alt=\"상의\" />\n            }\n            {\n              !postData.bottom_id || postData.top_id === 'default' ?\n                <p className=\"warning\">하의 데이터가 없습니다</p>\n              :\n                <Icon src={`${process.env.PUBLIC_URL}img/codi/${postData.bottom_id}.png`} alt=\"하의\" />\n            }\n          </TodayCodi>\n          </>\n      }\n\n      <Post>\n        <p>\n          {postData.post_content}\n        </p>\n      </Post>\n\n      <Buttons>\n        <button className=\"button button1\" value=\"delete\" onClick={deletePost}>삭제</button>\n        {removePost === false ? null : (\n          <ModalConfirm\n            yesHandler={removeModalYes}\n            noHandler={modalNoButtonHandler}\n            closeHandler={modalCloseButtonHandler}\n          >삭제하시겠습니까?</ModalConfirm>\n          )}\n        <button className=\"button button2\" onClick={editPost}>수정</button>\n        {edit === false ? null : (\n          <ModalConfirm\n            yesHandler={editModalYes}\n            noHandler={modalNoButtonHandler}\n            closeHandler={modalCloseButtonHandler}\n          >수정하시겠습니까?</ModalConfirm>\n        )}\n      </Buttons>\n    </Outer>\n  )\n}","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport { Bookmark } from \"../components/Heart\";\nimport ModalConfirm from \"../components/ModalConfirm\";\nimport GoBackButton from  \"../components/GoBackButton\";\nimport { useHistory } from \"react-router-dom\";\nimport TopButton from \"../components/TopButton\";\n\n/*\n  [수정사항]\n  - 옷차림 아이콘 경로 수정\n  - select 태그용 배열 테스트\n  - 게시물 작성 위치를 기준으로 주소 렌더링\n  - 하단의 주석 제거\n  - '잘못된 요청입니다' 메시지 h2에 margin 추가\n*/\n\nconst Outer = styled.div`\n  width: 100vw;\n  background-color: var(--page-bg-color);\n\n  // 오늘의 코디\n  .todayCodi{\n    margin: 0 auto;\n    width: 60%;\n    text-align: center;\n    color: #2E2E2E;\n    padding-top: 2vh;\n    border-top: 1px solid #aaa;\n  }\n\n  h2.warning--nodata {\n    color: #c60239;\n    font-size: 3rem;\n    margin: 0 1rem;\n  }\n\n  @media screen and (max-width: 1081px){\n    .todayCodi{\n      margin-top: 2vh;\n      font-weight: bold;\n    }\n  }\n  @media screen and (max-width: 375px) {\n  }\n`\n// 제목, 유저프로필사진,닉네임 북마크버튼\nconst PostHeader = styled.div`\n  padding-top: 8vh;\n  align-items: center;\n\n  @media screen and (max-width: 1081px) {\n    padding-top: 5vh;\n  }\n`\n// 제목 // 제목글자수 제한 필요?\nconst Title = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 80%;\n  max-width: 960px;\n  text-align: center;\n  margin: 0 auto;\n\n  span{\n    font-size: 2rem;\n  }\n\n  @media screen and (max-width: 1081px) {\n    width: 70%;\n  }\n  @media screen and (max-width: 375px) {\n    span{\n      font-size: 1.2rem;\n    }\n  }\n`\n\n// 북마크 아이콘\nconst BookmarkIcon = styled(Bookmark)`\n  float: right;\n\n  & .heart{\n    cursor: pointer;\n    color: #aaa;\n  }\n`\n\n\n// 프로필\nconst Profile = styled.div`\n  width: 60rem;\n  margin: 0 auto;\n  margin-top: 2vh;\n  padding-bottom: 3vh;\n  border-bottom: 1px solid #aaa;\n  align-items: center;\n  display: flex; \n  justify-content: space-between;\n  flex-flow: wrap;\n\n  .profileInfo{\n    display: flex; \n    align-items: center;\n    /* margin-left: 1vh; */\n  }\n  .location{\n    font-size: 1.2rem;\n  }\n  span{\n    margin-left: 1vh;\n  }\n  span.date {\n    font-size: .8rem;\n    color: #707B7C;\n  }\n\n  @media screen and (max-width: 1081px) {\n    width: 70%;\n  }\n  @media screen and (max-width: 594px) {\n    .location{\n      margin-top: 1.2vh;\n      font-size: 1.2rem;\n    }\n  }\n  @media screen and (max-width: 375px) {\n    width: 80%;\n    margin-top: 4vh;\n    span{\n      font-size: 0.5rem;\n    }\n    .location{\n      font-size: 0.5rem;\n    }\n  }\n`\n// 프로필 이미지\nconst ProfileImg = styled.img`\n  border: 1px solid #aaa;\n  width: 4rem;\n  height: 4rem;\n  border-radius: 50%;\n  @media screen and (max-width: 375px) {\n    width: 2rem;\n    height: 2rem;\n  }\n`\n\n// 게시물 사진 (있을 때, 없을때)\nconst PostImg = styled.img`\n  // 이미지 사이즈(1000*750) \n  // 다시 확인필요\n  width: 60rem;\n  height: 40rem;\n  display: block;\n  margin: 3vh auto;\n\n  @media screen and (max-width: 1081px) {\n    width: 70%;\n    height: 30rem;\n  }\n  @media screen and (max-width: 375px) {\n    width: 80%;\n    height: 18rem;\n  }\n`\n\n// 날씨,바람세기,온도 이모티콘 부분\nconst WeatherInfo = styled.div`\n  width: 330px;\n  margin-top: 4vh;\n  display: flex;\n  margin: 0 auto;\n  margin-bottom: 2vh;\n  justify-content: space-between;\n\n  @media screen and (max-width: 1081px) {\n    margin-top: 1vh;\n    margin-bottom: 1vw;\n    justify-content: space-around;\n  }\n  @media screen and (max-width: 375px) {\n    width: 50%;\n    margin-bottom: 3vh;\n  }\n`\n\nconst Icon = styled.img`\n  @media screen and (max-width: 1081px) {\n    width: 4rem;\n  }\n  @media screen and (max-width: 375px) {\n    width: 3rem;\n  }\n`\n\n// 오늘의 코디 (있을 때, 없을 때)\nconst TodayCodi = styled.div`\n  width: 20%;\n  text-align: center;\n  display: flex;\n  justify-content: center;\n  align-items:center;\n  margin: auto;\n  margin-top: 3vh;\n  margin-bottom: 3vh;\n  .warning{\n    display: none;\n  }\n  & p.warning {\n    font-size: .9rem;\n    width: 6rem;\n    height: 6rem;\n    text-align: center;\n  }\n\n  img {\n    width: 4rem;\n    height: auto;\n  }\n\n  @media screen and (max-width: 1081px) {\n    width: 50%;\n  }\n  @media screen and (max-width: 375px) {\n    width: 50vw;\n  }\n`\n\n// 게시물 내용 scroll\nconst Post = styled.div`\n  background-color: rgba(255, 255, 255, 0.5);\n  margin: 0 auto;\n  margin-bottom: 5vh;\n  padding: 1rem;\n  width: 60rem;\n\n  p{\n    line-height: 2.5rem;\n    font-size: 1.5rem;\n  }\n\n  @media screen and (max-width: 1081px) {\n    width: 70%;\n  }\n  @media screen and (max-width: 375px) {\n    width: 85%;\n    margin-top: 4vh;\n    p{\n      line-height: 1.5rem;\n      font-size: 1rem;\n    }\n  }\n`\n\n// 삭제, 수정 버튼\nconst Buttons = styled.div`\n  width: 15rem;\n  margin: 0 auto;\n  padding-bottom: 10vh;\n\n  .button{\n    width: 5rem;\n    height: 3rem;\n    border-radius: 5px;\n    background-color: var(--button-bg-normal);\n    font-size: 1.2rem;\n  }\n  .button2{\n    margin-left: 5rem;\n  }\n  .button:before{\n    height: 0%;\n    width: 2px;\n  }\n  .button:active{\n    border: none;\n    box-shadow:  4px 4px 6px 0 rgba(255,255,255,.5),\n    inset -4px -4px 6px 0 rgba(255,255,255,.2),\n    inset 4px 4px 6px 0 rgba(0, 0, 0, .4);\n  }\n\n  @media screen and (max-width: 1081px) {\n    .button2{\n      margin-left: 80px;\n    }\n  }\n  @media screen and (max-width: 375px) {\n    width: 40%;\n    display: flex;\n    justify-content: space-between;\n    .button{\n      width: 3rem;\n      height: 2rem;\n      font-size: 1rem;\n    }\n    .button2{\n      margin-left: 0;\n    }\n  }\n`\n\nlet url = process.env.REACT_APP_LOCAL_URL\nif (!url) url = \"https://thereweather.space\"\n\nexport default function PostRead(){\n  const history = useHistory()\n  const { readPostId, userInfo, postInfo } = useSelector(state => state.itemReducer);\n  console.log(userInfo) //현재접속한 유저 \n  console.log(readPostId) //포스트번호 \n  console.log(postInfo) //본인것만 보임\n  // console.log(pagePostInfo)\n  const postIds = Number(readPostId)\n  console.log(postIds) \n\n  // postData state 변수\n  const [postData, setPostData] = useState({\n    id: null,\n    post_title: '',\n    user_id: '',\n    createdAt: '',\n    updatedAt: '',\n    xLocation: '',\n    yLocation: '',\n    post_photo: '',\n    weather: '',\n    wind: '',\n    temp: '',\n    top_id: '',\n    bottom_id: '',\n    post_content: '',\n    address: ''\n  });\n  const [ noIdWarning, setNoIdWarning ] = useState('');\n\n  // 날짜 처리\n  const formatDate = (dateString) => {\n    // 예시 : 2021. 11. 5. 22:02\n    const dateObject = new Date(dateString);\n    let dateOnly = dateObject.toLocaleDateString();\n    let hourAndMin = dateObject.toLocaleTimeString('en-US', { hour12: false });\n    hourAndMin = hourAndMin.slice(0, -3);\n\n    return `${dateOnly} ${hourAndMin}`\n  }\n\n  // 글 불러오기\n  useEffect(() => {\n    function getOnePost(postId) {\n      axios.get(`${url}/readpost`, {\n        headers: { \"Content-Type\": \"application/json\" },\n        params: { id: postId },\n        withCredentials: true\n      })\n      .then (res => {\n        console.log(res.data);\n        return setPostData(prev => res.data);\n        // return res.data;\n      })\n      .catch (err => console.log(err));\n    };\n\n    let id;\n    if (history.location.state) {\n      id = history.location.state.postId;\n    } else {\n      id = readPostId;\n    }\n\n    if (!id) {\n      console.log('**postread: id가 없습니다**');\n      setNoIdWarning(prev => '잘못된 접근입니다.');\n    } else {\n      getOnePost(id);\n    }\n  }, [])\n\n  // 북마크 상태\n  const [bookmarked, setBookmarked] = useState(false);\n\n  // const [isOpen, setIsOpen] = useState(false);\n  // 게시물 수정\n  const [edit, setEdit] = useState(false)\n  // 게시물 삭제\n  const [removePost, setRemovePost] = useState(false)\n\n  // 게시물 수정\n  const editPost = () => {\n    console.log('수정버튼동작확인');\n    setEdit(true);\n  }\n\n  // 게시물 삭제\n  const deletePost = (e) => {\n    console.log('삭제버튼동작확인');\n    setRemovePost(true);\n  }\n\n  //게시물 수정 yse버튼 \n  const editModalYes = () => {\n    axios({\n      url: url + \"/editpost\",\n      method: \"put\",\n      data: {\n        user_id: userInfo.user_id,\n        post_id: postIds\n      },\n      withCredentials: true\n    })\n    .then((res) => {\n      alert(res.data)\n      if(res.data === \"게시물의 작성자가 아닙니다.\"){\n        history.push(\"/mypage\");\n      }\n      else{\n        history.push(\"/editpost\");\n      }\n    })\n    setEdit(false);\n  }\n\n  //게시물 삭제 yes버튼 \n  const removeModalYes = () => {\n    // console.log('삭제완료')\n    const token = JSON.parse(localStorage.getItem(\"ATOKEN\"))\n    //console.log(token)\n    axios({\n      url:  url + \"/deletepost\",\n      method: \"delete\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `token ${token}`,\n      },\n      data: { post_id: postIds },\n      withCredentials: true\n    })\n    .then((res) => {\n      console.log(res.data)\n      alert(res.data)\n      // alert(\"삭제 완료\")\n      history.push(\"/mypage\")\n    })\n    setRemovePost(false)\n  }\n\n  const modalNoButtonHandler = () => {\n    setRemovePost(false)\n    setEdit(false)\n  }\n\n  const modalCloseButtonHandler = () => {\n    setRemovePost(false)\n    setEdit(false)\n  }\n\n  const bookmarkHandler = (e) => {\n    console.log('글 읽기 - 북마크 버튼 동작 확인');\n    //눌렀을 때 북마크에 저장\n    //다시 누르면 해제\n      axios({\n        url: url + '/bookmark',\n        method: \"post\",\n        data: { user_id: userInfo.id, post_id: postIds },\n        // data: { post_id: postId },\n        headers: {  \"Content-Type\": \"application/json\" },\n        withCredentials: true,\n      })\n    .then((res) => {\n      console.log(res.data)\n      setBookmarked(prev => !prev);\n      // history.push(\"/bookmark\")  \n    })  \n  // console.log(e.currentTarget);\n  }\n\n  return (\n    <Outer>\n      {\n        noIdWarning.length !== 0 ?\n          <h2 className=\"warning--nodata\">{noIdWarning}</h2>\n        :\n          ''\n      }\n      <TopButton/>\n      <GoBackButton/>\n      <PostHeader className=\"postHeader\">\n        <Title className=\"title\">\n          <span>{postData.post_title}</span>\n          <BookmarkIcon\n            bookmarkHandler={bookmarkHandler}\n            color={bookmarked ? '#aaa' : '#ED4956' }\n          />\n         \n        </Title>\n\n        <Profile className=\"userProfile\">\n          <div className=\"profileInfo\">\n            <ProfileImg src={postData.user_Photo}/>\n            <span className=\"nickName\">{postData.nickName}</span>\n            <span className=\"date\">\n              {formatDate(postData.updatedAt)}\n            </span>\n          </div>\n          <div>\n            <p className=\"location\">{postData.address}</p>\n            {/* <p className=\"location\">{postData.xLocation.slice(0, -8)}</p>\n            <p className=\"location\">{postData.yLocation.slice(0, -8)}</p> */}\n          </div>\n        </Profile>\n      </PostHeader>\n      <PostImg src={postData.post_photo} alt=\"post picture\" />\n\n      <WeatherInfo>\n          {\n            !postData.weather?\n              ''\n            :\n              <Icon src={`${process.env.PUBLIC_URL}img/icons-write/${postData.weather}.png`} alt=\"날씨아이콘\"/>\n          }\n          {\n            !postData.wind?\n              ''\n            :\n              <Icon src={`${process.env.PUBLIC_URL}img/icons-write/${postData.wind}.png`} alt=\"바람아이콘\"/>\n          }\n          {\n            !postData.temp?\n              ''\n            :\n              <Icon src={`${process.env.PUBLIC_URL}img/icons-write/${postData.temp}.png`} alt=\"날씨아이콘\"/>\n          }\n      </WeatherInfo>\n\n      {/* 코디가 있을 때, 없을 때 */}\n      {\n        // 코디 3개 없을때\n        (!postData.outer_id || postData.outer_id === 'default') && (!postData.top_id || postData.top_id === 'default') && (!postData.bottom_id || postData.top_id === 'default') ?\n          null\n        :\n          <>\n          <h2 className=\"todayCodi\">오늘의 코디</h2>\n          <TodayCodi>\n            {\n              !postData.outer_id || postData.outer_id === 'default' ?\n              <p className=\"warning\">겉옷 데이터가 없습니다</p>\n              :\n                <Icon src={`${process.env.PUBLIC_URL}img/codi/${postData.outer_id}.png`} alt=\"겉옷\" />\n            }\n            {\n              !postData.top_id || postData.top_id === 'default' ?\n                <p className=\"warning\">상의 데이터가 없습니다</p>\n              :\n                <Icon src={`${process.env.PUBLIC_URL}img/codi/${postData.top_id}.png`} alt=\"상의\" />\n            }\n            {\n              !postData.bottom_id || postData.top_id === 'default' ?\n                <p className=\"warning\">하의 데이터가 없습니다</p>\n              :\n                <Icon src={`${process.env.PUBLIC_URL}img/codi/${postData.bottom_id}.png`} alt=\"하의\" />\n            }\n          </TodayCodi>\n          </>\n      }\n\n      <Post>\n        <p>\n          {postData.post_content}\n        </p>\n      </Post>\n\n      <Buttons>\n        <button className=\"button button1\" value=\"delete\" onClick={deletePost}>삭제</button>\n        {removePost === false ? null : (\n          <ModalConfirm\n            yesHandler={removeModalYes}\n            noHandler={modalNoButtonHandler}\n            closeHandler={modalCloseButtonHandler}\n          >삭제하시겠습니까?</ModalConfirm>\n          )}\n        <button className=\"button button2\" onClick={editPost}>수정</button>\n        {edit === false ? null : (\n          <ModalConfirm\n            yesHandler={editModalYes}\n            noHandler={modalNoButtonHandler}\n            closeHandler={modalCloseButtonHandler}\n          >수정하시겠습니까?</ModalConfirm>\n        )}\n      </Buttons>\n    </Outer>\n  )\n}","import React, { useState, useEffect } from \"react\"\nimport styled from \"styled-components\"\nimport axios from \"axios\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { useHistory } from \"react-router-dom\"\nimport { changeMapPage } from \"../actions/index\"\n\n/*\n    [수정]\n    이미지 태그에 alt 추가 (없으면 콘솔에 오류 뜸)\n*/\n\nconst Outer = styled.div`\n    overflow: scroll;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n    width: 100vw;\n    min-height: var(--mobile-page-height);\n    padding: 3rem auto;\n    background-color: var(--page-bg-color);\n\n    @media screen and (min-width: 1081px) {\n        flex-direction: row;\n        min-height: var(--desktop-page-height);\n        padding: 2rem;\n    }\n`\n\nconst Button = styled.button`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border: 1px solid black;\n    border-radius: ${(props) => (props.round ? \"50%\" : null)};\n    background-color: var(--button-bg-normal);\n    font-size: 1.25rem;\n    padding: ${(props) => (props.round ? \".5rem .5rem\" : \".5rem 2rem\")};\n    margin: ${(props) => (props.round ? \".5rem\" : \"1rem\")};\n\n    & > img {\n        height: 1.5rem;\n        width: 1.5rem;\n    }\n`\nconst Button2 = styled.input`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: 1rem;\n    padding: 0.8rem;\n    border-radius: 1rem;\n    font-size: 1rem;\n    font-weight: bold;\n    color: white;\n    background-color: #FEC0CB;\n\n    > span {\n        margin: 0.25rem;\n    }\n`\n\nconst PictureSection = styled.form`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 1rem;\n    height: inherit;\n\n    @media screen and (min-width: 1081px) {\n        justify-content: center;\n        width: 40vw;\n    }\n`\n\nconst DesktopRight = styled.section`\n    display: flex;\n    flex-grow: 1;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n\n    @media screen and (min-width: 1081px) {\n        justify-content: space-around;\n        width: 40vw;\n    }\n`\n\nconst ButtonsAndSelects = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 1rem;\n`\n\nconst FlexColumnCenter = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 1rem auto;\n\n    & > p {\n        margin: 0.5rem;\n        font-weight: bold;\n    }\n`\n\nconst FilteringButtons = styled.article`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    align-items: center;\n`\n\nconst FilteringBtn = styled.button`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border: 3px solid grey;\n    border: ${(props) => (props.active ? \"3px solid black\" : \"3px solid grey\")};\n    height: 2rem;\n    width: 2rem;\n    margin: 0.25rem;\n    background-color: white;\n    border-radius: 0.3rem;\n\n    img {\n        width: 1.5rem;\n        height: 1.5rem;\n    }\n`\n\nconst TextSection = styled.section`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n    margin: 2rem auto;\n    height: inherit;\n\n    & > .submitButton {\n        margin: 2rem auto;\n    }\n`\n\nconst SelectArea = styled.article`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    & > select {\n        padding: 0.3rem;\n        margin: auto 0.5rem;\n    }\n`\n\nconst WriteText = styled.textarea`\n    width: 70vw;\n    min-width: 250px;\n    height: ${(props) => (props.small ? \"3rem\" : \"20vh\")};\n    text-align: justify;\n    vertical-align: center;\n    line-height: 1.2rem;\n    font-size: 1.2rem;\n    margin: 2rem 1rem 4rem;\n    padding: 1rem;\n\n    @media screen and (min-width: 1081px) {\n        width: ${(props) => (props.small ? \"35vw\" : \"40vw\")};\n        max-width: ${(props) => (props.small ? \"500px\" : \"800px\")};\n    }\n`\nconst PhotoBox = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: auto;\n    height: auto;\n    min-width: 300px;\n    min-height: 300px;\n    background-color: #ececec;\n    border: 1px solid #b5b5b5;\n    object-fit: cover;\n`\n\nconst PhotoBox2 = styled.img`\n    min-width: 300px;\n    width: 30vh;\n    height: auto;\n`\n\nconst Button3 = styled.button`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: 0.5rem;\n    padding: 0.8rem;\n    font-size: 1rem;\n    font-weight: bold;\n    color: white;\n    background-color: #FEC0CB;\n    border-radius: 1rem;\n\n    > span {\n        margin: 0.25rem;\n    }\n`\n\nconst Secret = styled.div`\n    color: white;\n`\n\n\nlet url = process.env.REACT_APP_LOCAL_URL\nif (!url) url = \"https://thereweather.space\"\n\nexport default function Write() {\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const { userInfo, curLocation, postInfo, readPostId } = useSelector((state) => state.itemReducer)\n    // console.log('userId : ',userInfo);\n    // console.log('postInfo : ', postInfo);\n    // console.log('readPostId : ', readPostId);\n    const [postId, setPostId] = useState(readPostId)\n    const [selectWeather, setSelectWeather] = useState()    // 날씨\n    const [selectWind, setSelectWind] = useState()  // 바람\n    const [selectTemp, setSelectTemp] = useState()  // 온도\n    const [photo, setPhoto] = useState(\"\")\n    const [userPosts, setUserPosts] = useState()\n    const [uploadedImg, setUploadedImg] = useState({\n        fileName: \"blankPost.png\",\n        filePath: `${url}/img/blankPost.png`,\n    })\n    const postIds = Number(readPostId)\n    // console.log('postIds : ', postIds)\n\n    // 제목 handler\n    const [title, setTitle] = useState(\"\")\n\n    const titleInputHandler = (e) => {\n        setTitle((prev) => e.target.value)\n    }\n    useEffect(() => {\n        console.log(userInfo.user_id)\n    }, [])\n\n    // 날씨 버튼\n    const weathers = [\n        \"sunny\",\n        \"cloudy\",\n        \"rainy\",\n        \"snowy\",\n        \"breezy\",\n        \"windy\",\n        \"strong\",\n        \"cold\",\n        \"hot\",\n    ]\n    // 날씨 필터링용 state\n    const [clickedWeatherButtons, setClickedWeatherButtons] = useState([])\n    // 스타일 적용 state\n    const [isFilteringBtnActive, setIsFilteringBtnActive] = useState({\n        sunny: false,\n        cloudy: false,\n        rainy: false,\n        snowy: false,\n    })\n    const [isFilteringBtnActive2, setIsFilteringBtnActive2] = useState({\n        breezy: false,\n        windy: false,\n        strong: false,\n    })\n    const [isFilteringBtnActive3, setIsFilteringBtnActive3] = useState({\n        cold: false,\n        hot: false,\n    })\n\n    // 날씨 버튼 handler\n    const weatherBtnHandler = (e) => {\n        if (e.target.nodeName === \"ARTICLE\") return\n        let elem = e.target\n\n        while (!elem.classList.contains(\"weatherButton\")) {\n            elem = elem.parentNode\n            console.log(\"while - work?\", elem.name)\n            setSelectWeather(elem.name)\n\n            if (elem.nodeName === \"ARTICLE\") {\n                elem = null\n                return\n            }\n        }\n\n        if (elem && clickedWeatherButtons.includes(elem.name)) {\n            setClickedWeatherButtons((arr) => [\n                ...arr.filter((btnName) => btnName !== elem.name),\n            ])\n            setIsFilteringBtnActive((btnListObj) => {\n                return { ...btnListObj, [elem.name]: false }\n            })\n        } else {\n            setClickedWeatherButtons((arr) => [...arr, elem.name])\n            setIsFilteringBtnActive((btnListObj) => {\n                return { ...btnListObj, [elem.name]: true }\n            })\n        }\n    }\n\n    // 겉옷 더미데이터\n    const outer = [\n        [\"default\", \"겉옷 선택\"],\n        [\"가디건\", \"가디건\"],\n        [\"자켓\", \"자켓\"],\n        [\"얇은코트\", \"얇은 코트\"],\n        [\"두꺼운코트\", \"두꺼운 코트\"],\n        [\"패딩\", \"패딩\"],\n    ]\n\n    // 상의 더미데이터 (state 변수가 필요하게 될까?)\n    const clothesTop = [\n        [\"default\", \"상의 선택\"],\n        [\"민소매\", \"민소매\"],\n        [\"반팔\", \"반팔\"],\n        [\"긴팔\", \"긴팔\"],\n        [\"셔츠\", \"셔츠\"],\n        [\"니트\", \"니트\"],\n    ]\n\n    // 하의 더미데이터\n    const clothesBottom = [\n        [\"default\", \"하의 선택\"],\n        [\"반바지\", \"반바지\"],\n        [\"긴바지\", \"긴 바지\"],\n    ]\n\n    // select 상태 관리 & 이벤트 핸들러\n    const [selectValueOuter, setSelectValueOuter] = useState(\"default\")\n    const [selectValueTop, setSelectValueTop] = useState(\"default\")\n    const [selectValueBottom, setSelectValueBottom] = useState(\"default\")\n\n    const selectOuterHandler = (e) => {\n        setSelectValueOuter(e.target.value)\n    }\n\n    const selectTopHandler = (e) => {\n        setSelectValueTop(e.target.value)\n    }\n\n    const selectBottomHandler = (e) => {\n        setSelectValueBottom(e.target.value)\n    }\n\n    // textarea state & handler\n    const [postText, setPostText] = useState(\"\")\n    const postTextHandler = (e) => {\n        setPostText(e.target.value)\n    }\n\n    \n    // 기존 데이터 렌더링\n    useEffect(() => {\n        axios({\n            url: url + `/readpost?searchID=${userInfo.postIds}`,\n            method: \"get\",\n            params: {id : postIds},\n            withCredentials: true,\n        })\n        .then((res) => {\n            console.log('res : ', res.data);    // 해당 게시물 데이터 들어옴\n            // 제목\n            setTitle(res.data.post_title)\n            // 사진\n            setUploadedImg({ filePath: res.data.post_photo })\n            // 날씨\n            setIsFilteringBtnActive({ [res.data.weather]:true })\n            setIsFilteringBtnActive2({ [res.data.wind]:true })\n            setIsFilteringBtnActive3({ [res.data.temp]:true })\n\n            // 코디\n            setSelectValueOuter(res.data.outer_id)\n            setSelectValueTop(res.data.top_id)\n            setSelectValueBottom(res.data.bottom_id)\n            // 내용\n            setPostText(res.data.post_content)\n        })\n        .catch(err => console.log(err))\n    }, [])\n\n\n    // 등록버튼 이벤트\n    const submitButtonHandler = (e) => {\n        if (curLocation.lat === \"\") {\n            alert(\"gps활용 허용하신 회원만 예보를 작성 할 수 있습니다.\")\n            history.push(\"/map\")\n        } else if (\n            title.length > 0 &&\n            postText.length > 0 &&\n            uploadedImg.fileName !== \"blankPost.png\" &&\n            // selectValueOuter !== \"default\" &&\n            selectValueTop !== \"default\" &&\n            selectValueBottom !== \"default\" &&\n            selectWeather &&\n            selectWind &&\n            selectTemp &&\n            curLocation\n        ) {\n            //&& !photo && !selectWeather && !selectWind && !setSelectTemp\n\n            axios({\n                url: url + \"/editpost\",\n                method: \"put\",\n                data: {\n                    user_id: userInfo.user_id,\n                    post_id: postId,\n                    post_photo: uploadedImg.filePath,\n                    post_title: title,\n                    post_content: postText,\n                    weather: selectWeather,\n                    wind: selectWind,\n                    temp: selectTemp,\n                    outer_id: selectValueOuter,\n                    top_id: selectValueTop,\n                    bottom_id: selectValueBottom,\n                    xLocation: curLocation.lat,\n                    yLocation: curLocation.lon,\n                },\n                withCredentials: true,\n            })\n                .then((res) => {\n                    alert(\"작성 완료\")\n                    history.push(\"/mypage\")\n                })\n                .catch((err) => console.log(err))\n        } else {\n            alert(\"모든 항목은 필수입니다:)\")\n        }\n    }\n    useEffect(() => {\n        dispatch(changeMapPage(false))\n    }, [])\n    useEffect(() => {\n        setIsFilteringBtnActive({\n            sunny: false,\n            cloudy: false,\n            rainy: false,\n            snowy: false,\n            [selectWeather]: true,\n        })\n    }, [selectWeather])\n    useEffect(() => {\n        setIsFilteringBtnActive2({\n            breezy: false,\n            windy: false,\n            strong: false,\n            [selectWind]: true,\n        })\n    }, [selectWind])\n    useEffect(() => {\n        setIsFilteringBtnActive3({\n            cold: false,\n            hot: false,\n            [selectTemp]: true,\n        })\n    }, [selectTemp])\n    function weatherFunc(select) {\n        console.log(\"select=\" + select)\n        setSelectWeather(select)\n    }\n    function weatherFunc2(select) {\n        console.log(\"select=\" + select)\n        setSelectWind(select)\n    }\n    function weatherFunc3(select) {\n        console.log(\"select=\" + select)\n        setSelectTemp(select)\n    }\n    const onSubmit = (e) => {\n        console.log(e)\n        e.preventDefault()\n        const formData = new FormData()\n        formData.append(\"img\", photo)\n        console.log(formData)\n        axios\n            .post(url + \"/post/photo\", formData, {\n                \"Content-Type\": \"application/json\",\n                withCredentials: true,\n            })\n            .then((res) => {\n                const { fileName } = res.data\n                setUploadedImg({\n                    fileName,\n                    filePath: `${url}/img/${fileName}`,\n                })\n                alert(\"사진을 성공적으로 업로드 하였습니다!\")\n            })\n            .catch((err) => {\n                console.error(err)\n            })\n    }\n    const addFile = (e) => {\n        console.log(e.target.files[0])\n        setPhoto(e.target.files[0])\n    }\n    function sFunc() {\n        function random(min, max) {\n            return parseFloat((Math.random() * (max - min) + min).toFixed(7))\n        }\n        function getRandomIntInclusive(min, max) {\n            min = Math.ceil(min)\n            max = Math.floor(max)\n            return Math.floor(Math.random() * (max - min + 1)) + min\n        }\n        for (let n = 0; n < 20; n++) {\n            axios({\n                url: url + \"/post/write\",\n                method: \"post\",\n                data: {\n                    user_id: Math.random().toString(36).substr(2, 5),\n                    post_photo: `http://placeimg.com/640/${getRandomIntInclusive(\n                        480,\n                        640\n                    )}/nature`,\n                    post_title: Math.random().toString(36).substr(2, 20),\n                    post_content: Math.random().toString(36).substr(2, 100),\n                    weather: [\"sunny\", \"cloudy\", \"rainy\", \"snowy\"][\n                        getRandomIntInclusive(0, 3)\n                    ],\n                    wind: [\"breezy\", \"windy\", \"strong\"][\n                        getRandomIntInclusive(0, 2)\n                    ],\n                    temp: [\"cold\", \"hot\"][getRandomIntInclusive(0, 1)],\n                    outer_id: [\n                        \"가디건\",\n                        \"자켓\",\n                        \"얇은코트\",\n                        \"두꺼운코트\",\n                        \"패딩\",\n                    ][getRandomIntInclusive(0, 4)],\n                    top_id: [\"민소매\", \"반팔\", \"긴팔\", \"셔츠\", \"니트\"][\n                        getRandomIntInclusive(0, 4)\n                    ],\n                    bottom_id: [\"반바지\", \"긴바지\"][\n                        getRandomIntInclusive(0, 1)\n                    ],\n                    xLocation: random(34.468469558695375, 38.215952021543174),\n                    yLocation: random(126.25754765741554, 128.58236509939096),\n                },\n                withCredentials: true,\n            })\n        }\n    }\n\n    return (\n        <Outer className=\"writePage\">\n            <PictureSection\n                className=\"pictureUploadSection writePageLeft\"\n                onSubmit={onSubmit}\n            >\n                <article className=\"titleInput\">\n                    <WriteText\n                        onChange={titleInputHandler}\n                        value={title}\n                        placeholder=\"제목을 입력하세요.\"\n                        small\n                    ></WriteText>\n                </article>\n                <PhotoBox>\n                    {uploadedImg ? (\n                        <PhotoBox2 src={uploadedImg.filePath} alt=\"icon\" />\n                    ) : (\n                        <div></div>\n                    )}\n                </PhotoBox>\n                <Button2\n                    type=\"file\"\n                    className=\"uploadButton\"\n                    onChange={addFile}\n                    round\n                />\n                <Button3 type=\"submit\">업로드 </Button3>\n            </PictureSection>\n\n            <DesktopRight className=\"writePageRight\">\n                <ButtonsAndSelects className=\"buttonsAndSelects\">\n                    <FlexColumnCenter className=\"smallSection\">\n                        <p>날씨를 선택하세요.</p>\n                        <FilteringButtons className=\"filteringButtons\">\n                            {/* {weathers.map((weather, idx) => { */}\n                            {/* return ( */}\n                            <FilteringBtn\n                                name={\"sunny\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive[\"sunny\"]}\n                                onClick={() => weatherFunc(\"sunny\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"sunny\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            <FilteringBtn\n                                name={\"cloudy\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive[\"cloudy\"]}\n                                onClick={() => weatherFunc(\"cloudy\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"cloudy\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            <FilteringBtn\n                                name={\"rainy\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive[\"rainy\"]}\n                                onClick={() => weatherFunc(\"rainy\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"rainy\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            <FilteringBtn\n                                name={\"snowy\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive[\"snowy\"]}\n                                onClick={() => weatherFunc(\"snowy\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"snowy\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            <FilteringBtn\n                                name={\"breezy\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive2[\"breezy\"]}\n                                onClick={() => weatherFunc2(\"breezy\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"breezy\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            <FilteringBtn\n                                name={\"windy\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive2[\"windy\"]}\n                                onClick={() => weatherFunc2(\"windy\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"windy\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            <FilteringBtn\n                                name={\"strong\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive2[\"strong\"]}\n                                onClick={() => weatherFunc2(\"strong\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"strong\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            <FilteringBtn\n                                name={\"hot\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive3[\"hot\"]}\n                                onClick={() => weatherFunc3(\"hot\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"hot\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            <FilteringBtn\n                                name={\"cold\"}\n                                className=\"weatherButton\"\n                                type=\"button\"\n                                active={isFilteringBtnActive3[\"cold\"]}\n                                onClick={() => weatherFunc3(\"cold\")}\n                            >\n                                <img\n                                    src={`${\n                                        process.env.PUBLIC_URL\n                                    }img/icons-write/${\"cold\"}.png`}\n                                    alt=\"icon\"\n                                />\n                            </FilteringBtn>\n                            {/* ) */}\n                            {/* })} */}\n                        </FilteringButtons>\n                    </FlexColumnCenter>\n\n                    <FlexColumnCenter className=\"smallSection\">\n                        <p>의상을 선택하세요.</p>\n                        <SelectArea>\n                            <select\n                                className=\"outer\"\n                                value={selectValueOuter}\n                                onChange={selectOuterHandler}\n                            >\n                                {outer.map((elem, idx) => {\n                                    return (\n                                        <option value={elem[0]} key={idx}>\n                                            {elem[1]}\n                                        </option>\n                                    )\n                                })}\n                            </select>\n                            <select\n                                className=\"top\"\n                                value={selectValueTop}\n                                onChange={selectTopHandler}\n                            >\n                                {clothesTop.map((elem, idx) => {\n                                    return (\n                                        <option value={elem[0]} key={idx}>\n                                            {elem[1]}\n                                        </option>\n                                    )\n                                })}\n                            </select>\n                            <select\n                                className=\"bottom\"\n                                value={selectValueBottom}\n                                onChange={selectBottomHandler}\n                            >\n                                {clothesBottom.map((elem, idx) => {\n                                    return (\n                                        <option value={elem[0]} key={idx}>\n                                            {elem[1]}\n                                        </option>\n                                    )\n                                })}\n                            </select>\n                        </SelectArea>\n                    </FlexColumnCenter>\n                </ButtonsAndSelects>\n\n                <TextSection>\n                    <WriteText\n                        type=\"text\"\n                        placeholder=\"글을 입력하세요.\"\n                        value={postText}\n                        onChange={postTextHandler}\n                    />\n                    <Button\n                        className=\"submitButton\"\n                        onClick={submitButtonHandler}\n                    >\n                        등록\n                    </Button>\n                    <Secret onClick={() => sFunc()}>.</Secret>\n                </TextSection>\n            </DesktopRight>\n        </Outer>\n    )\n}\n","import styled from \"styled-components\"\nimport { useHistory } from \"react-router-dom\"\n\n// const InputCheckbox = styled.input.attrs({\n//   type: 'checkbox',\n//   checked: true,\n//  })`\n//   border-radius: 5px;\n//   color: red;\n//  `;\n\nexport const Contents = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    width: 100vw;\n\n    @media screen and (min-width: 1081px) {\n        flex-direction: row;\n    }\n`\n\nexport const HalfPage = styled.article`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    width: 100vw;\n    height: calc(var(--mobile-page-height) - var(--mobile-menubar-height));\n\n    & img {\n        margin: 2rem;\n        width: 50vw;\n        height: auto;\n    }\n\n    & p {\n        font-size: 1.5rem;\n        margin: 1rem;\n        line-height: 150%;\n    }\n\n    @media screen and (min-width: 1081px) {\n        height: var(--desktop-page-height);\n        & img {\n            margin: 2rem;\n            width: 95%;\n            height: auto;\n        }\n\n        & p {\n            margin: 2rem;\n            width: 35vw;\n            height: auto;\n        }\n    }\n`\n\nexport const AnimatedP = styled.p`\n    animation: fade-in ease-in 1 backwards;\n    animation-duration: ${(props) => props.duration || \"1.5s\"};\n    animation-delay: ${(props) => props.delay || null};\n`\n\nexport const AnimatedImg = styled.img`\n    animation: fade-in ease-in 1 backwards;\n    animation-duration: ${(props) => props.duration || \".5s\"};\n    animation-delay: ${(props) => props.delay || null};\n`\nconst Button = styled.button`\n// width: 140px;\n// height: 45px;\n// font-size: 11px;\n// border:3px solid pink;\nfont-family: 'IBM Plex Sans KR', sans-serif;\n\nfont-size: ${(props) => (props.isText ? \"1.6rem\" : \"1.6rem\")};\npadding: ${(props) => (props.bgGrey ? \".6rem\" : \".4rem\")};\nmargin: 0.5rem;\nborder-radius: 10%;\ncolor: ${(props) => (props.bgGrey || props.isText ? \"#ff6384\" : \"grey\")};\nbackground-color: ${(props) =>\n    props.bgGrey || props.isText ? \"white\" : \"white\"};\ntext-transform: uppercase;\nletter-spacing: 2.5px;\nfont-weight: 500;\ncolor: #000;\nbackground-color: #fff;\n// border: none;\nborder-radius: 45px;\nbox-shadow: 0px 8px 15px rgba(0, 0, 0, 0.1);\ntransition: all 0.3s ease 0s;\ncursor: pointer;\noutline: none;\n}\n\n&:hover {\n    background-color: pink;\n    box-shadow: 0px 15px 20px #f7cac9;\n    color: #fff;\ntransform: translateY(-4px);\n}\n`\nconst Buttons = styled.button`\n    // height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`\nexport default function One({ delayOne, delayTwo }) {\n    const history = useHistory()\n\n    return (\n        <Contents className={[\"landingPagePart\", \"one\"]}>\n            <HalfPage className=\"half-page\">\n                <AnimatedP className=\"desc\">\n                    일기 예보가 <br />\n                    믿음직스럽지 못하시다구요?\n                    <br />\n                </AnimatedP>\n                <div className=\"picture-png left\">\n                    <AnimatedImg\n                        src=\"img/firstpage/phone-and-human.png\"\n                        alt=\"human with phone\"\n                    />\n                </div>\n\n                <Buttons>\n                    <Button onClick={() => history.push(\"/map\")}>\n                        시작하기\n                    </Button>\n                </Buttons>\n            </HalfPage>\n\n            <HalfPage className=\"half-page\">\n                <AnimatedP className=\"desc\" delay={delayOne}>\n                    동네 주민이 올린 하늘의 사진을 <br />\n                    실시간으로 확인할 수 있어요.\n                    <br />\n                </AnimatedP>\n                <AnimatedP className=\"desc\" delay={delayOne}>\n                    여러분도 하늘사진을 공유하고 <br />\n                    동네 날씨예보관이 되어 보세요!\n                </AnimatedP>\n                <div className=\"picture-png right\">\n                    <AnimatedImg\n                        src=\"img/firstpage/town.png\"\n                        alt=\"street\"\n                        delay={delayTwo}\n                    />\n                </div>\n            </HalfPage>\n        </Contents>\n    )\n}\n","import styled from \"styled-components\";\nimport { Contents, HalfPage, AnimatedP, AnimatedImg } from \"./One\";\n\nexport const TitleAndContents = styled(Contents)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  & > h2 {\n    padding: 3rem;\n    font-size: 3rem;\n    text-align: center;\n  }\n\n  @media screen and (min-width: 1081px) {\n    height: 110vh;\n    & >h2 {\n      height: 12rem;\n      padding: 5rem;\n    }\n  }\n`;\n\nexport const ContentsUnderTitle = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100vw;\n  justify-content: center;\n  align-items: center;\n\n  @media screen and (min-width: 1081px) {\n    flex-direction: row;\n    height: calc(var(--desktop-page-height) - 12rem);\n  }\n`;\n\nexport const AnimatedTitle = styled.h2`\n  animation: fade-in ease-in 1 backwards;\n  animation-duration: ${props => props.duration || '.3s'};\n  animation-delay: ${props => props.delay || null};\n`;\n\nexport default function Two({\n  delayOne, delayTwo, delayThree, delayFour, delayFive\n}) {\n  return (\n    <TitleAndContents className={[\"landingPagePart\", \"two\"]}>\n      <AnimatedTitle delay={delayOne}>\n        step 1\n      </AnimatedTitle>\n      <ContentsUnderTitle className=\"contents\">\n        <HalfPage className=\"half-page\" delay={delayTwo}>\n          <AnimatedP className=\"desc\">\n            사는 곳이나 <br/>\n            여행지를 검색하세요.\n          </AnimatedP>\n          <div className=\"picture-png left\">\n            <AnimatedImg\n              src=\"img/firstpage/web_search.png\"\n              alt=\"web surfing\"\n              delay={delayThree}\n            />\n          </div>\n        </HalfPage>\n\n        <HalfPage className=\"half-page\">\n          <div className=\"picture-png right\">\n            <AnimatedImg\n              src=\"img/firstpage/adventure_map.png\"\n              alt=\"walking\"\n              delay={delayFour}\n            />\n          </div>\n          <AnimatedP className=\"desc\" delay={delayFive}>\n            여행을 준비중이시라면 <br/>\n            여행지에 사는 사람이 올린 <br/>\n            사실적인 예보글을 토대로 <br/>\n            계획해보세요.\n        </AnimatedP>\n        </HalfPage>\n      </ContentsUnderTitle>\n    </TitleAndContents>\n  );\n}\n\n// style={{ opacity: `${opacityOffset}`}}","import styled from \"styled-components\";\nimport { HalfPage, AnimatedP, AnimatedImg } from \"./One\";\nimport { TitleAndContents, ContentsUnderTitle, AnimatedTitle } from \"./Two\";\n\nexport const TwoPictures = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  & > img {\n    width: 40vw;\n  }\n\n  @media screen and (min-width: 1081px) {\n    & > img {\n      width: 40%;\n    }\n  }\n`;\n\nexport default function Three({\n  delayOne, delayTwo, delayThree, delayFour, delayFive\n}) {\n  return (\n    <TitleAndContents className={[\"landingPagePart\", \"three\"]}>\n      <AnimatedTitle delay={delayOne}>\n        step 2\n      </AnimatedTitle>\n      <ContentsUnderTitle className=\"contents\">\n        <HalfPage className=\"half-page\">\n          <AnimatedP className=\"desc\" delay={delayTwo}>\n            자신이 있는 곳의 <br/>\n            하늘 사진을 찍어서 <br/>\n            예보글을 작성하세요.\n          </AnimatedP>\n          <div className=\"picture-png left\">\n            <AnimatedImg\n              src=\"img/firstpage/photos.png\"\n              alt=\"photos\"\n              delay={delayThree}\n            />\n          </div>\n        </HalfPage>\n\n        <HalfPage className=\"half-page\">\n          <AnimatedP className=\"desc\" delay={delayFour}>\n            하늘 사진을 공유하여 <br/>\n            다른사람에게 <br/>\n            도움을 줄 수도 있어요.\n          </AnimatedP>\n          <TwoPictures className=\"picture-png right\">\n            <AnimatedImg\n              src=\"img/firstpage/mobile.png\"\n              alt=\"touching mobile phone\"\n              delay={delayFive}\n            />\n            <AnimatedImg\n              src=\"img/firstpage/after_the_rain.png\"\n              alt=\"holding umbrella\"\n              delay={delayFive}\n            />\n          </TwoPictures>\n        </HalfPage>\n      </ContentsUnderTitle>\n    </TitleAndContents>\n  );\n}","import { HalfPage, AnimatedP, AnimatedImg } from \"./One\"\nimport { TitleAndContents, ContentsUnderTitle, AnimatedTitle } from \"./Two\"\nimport { useHistory } from \"react-router-dom\"\nimport { TwoPictures } from \"./Three\"\nimport styled from \"styled-components\"\n\nconst Button = styled.button`\n// width: 140px;\n// height: 45px;\n// font-size: 11px;\nborder:3px solid pink;\nfont-size: ${(props) => (props.isText ? \"1.6rem\" : \"1.6rem\")};\nfont-family: 'IBM Plex Sans KR', sans-serif;\n\npadding: ${(props) => (props.bgGrey ? \".6rem\" : \".4rem\")};\nmargin: 0.5rem;\nborder-radius: 10%;\ncolor: ${(props) => (props.bgGrey || props.isText ? \"#ff6384\" : \"grey\")};\nbackground-color: ${(props) =>\n    props.bgGrey || props.isText ? \"white\" : \"white\"};\ntext-transform: uppercase;\nletter-spacing: 2.5px;\nfont-weight: 500;\ncolor: #000;\nbackground-color: #fff;\n// border: none;\nborder-radius: 45px;\nbox-shadow: 0px 8px 15px rgba(0, 0, 0, 0.1);\ntransition: all 0.3s ease 0s;\ncursor: pointer;\noutline: none;\n}\n\n&:hover {\n    background-color: pink;\n    box-shadow: 0px 15px 20px #f7cac9;\n    color: #fff;\ntransform: translateY(-4px);\n}\n`\nconst Buttons = styled.button`\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`\nexport default function Four({\n    delayOne,\n    delayTwo,\n    delayThree,\n    delayFour,\n    delayFive,\n}) {\n    const history = useHistory()\n    return (\n        <TitleAndContents className={[\"landingPagePart\", \"four\"]}>\n            <AnimatedTitle delay={delayOne}>step 3</AnimatedTitle>\n            <ContentsUnderTitle className=\"contents\">\n                <HalfPage className=\"half-page\">\n                    <AnimatedP className=\"desc\" delay={delayTwo}>\n                        날씨에 따라 코디를 <br />\n                        추천하거나 <br />\n                        코디를 추천 받으세요.\n                    </AnimatedP>\n                    <div className=\"picture-png left\">\n                        <AnimatedImg\n                            src=\"img/firstpage/destination.png\"\n                            alt=\"reading mobile phone map\"\n                            delay={delayThree}\n                        />\n                    </div>\n                </HalfPage>\n                <HalfPage className=\"half-page\">\n                    <TwoPictures className=\"picture-png right\">\n                        <AnimatedImg\n                            src=\"img/firstpage/publish_post.png\"\n                            alt=\"publishing post\"\n                            delay={delayFour}\n                        />\n                        <AnimatedImg\n                            src=\"img/firstpage/among_nature.png\"\n                            alt=\"watching tree\"\n                            delay={delayFour}\n                        />\n                    </TwoPictures>\n                    <AnimatedP className=\"desc\" delay={delayFive}>\n                        날씨에 따라 코디를 추천받거나, <br />\n                        예보글을 작성하여 <br />\n                        적절한 코디를 추천할 수 있어요.\n                        <Buttons>\n                            <Button onClick={() => history.push(\"/map\")}>\n                                시작하기\n                            </Button>\n                        </Buttons>\n                    </AnimatedP>\n                </HalfPage>\n            </ContentsUnderTitle>\n        </TitleAndContents>\n    )\n}\n","import React, { useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport styled from \"styled-components\"\nimport { changeUser } from \"../actions/index\"\nimport LoadingSpinner from \"../components/LoadingSpinner\"\n\n// 부모요소에 postion: relative 필요함\n// props\n// duration : 따옴표 안에 s(초) 단위로 지정\n// ex) duration={'3s'}\n// 지정하지 않은 경우 기본값 2s\n// 숫자가 작을수록 빨리 돌아간다\n// size : 따옴표 안에 px 단위로 지정\n// ex) size={'30px'}\n// 지정하지 않은 경우 기본값 (가로 === 세로)\n// 모바일 50px\n// 데스크탑 100px\n// hide\n// true -> display: none;\n// false(지정하지 않은 경우 포함) -> display: flex;\n\nconst LoadingContainer = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    display: ${(props) => (props.hide ? \"none\" : \"flex\")};\n    justify-content: center;\n    width: 100vw;\n    min-height: 100vh;\n    background-color: rgba(253, 254, 254, 0.5);\n    // 밝은 회색, opacity 0.3\n    z-index: 300;\n\n    & > img {\n        margin-top: calc(var(--mobile-header-height) + 10vh);\n\n        @media screen and (min-width: 1081px) {\n            margin-top: calc(var(--desktop-header-height) + 10vh);\n        }\n    }\n`\n\nexport default function Loading({ size, duration, hide }) {\n    // const dispatch = useDispatch()\n    // const { userInfo } = useSelector((state) => state.itemReducer)\n    // dispatch(changeUser(axiosData))\n\n    return (\n        <LoadingContainer className=\"loadingContainer\" hide={hide}>\n            <LoadingSpinner size={size} duration={duration} />\n        </LoadingContainer>\n    )\n}\n","// import { useState, useEffect } from \"react\";\nimport styled from \"styled-components\"\nimport One from \"../components/FirstPage/One\"\nimport Two from \"../components/FirstPage/Two\"\nimport Three from \"../components/FirstPage/Three\"\nimport Four from \"../components/FirstPage/Four\"\nimport { changeMapPage } from \"../actions/index\"\nimport React, { useEffect } from \"react\"\nimport { useDispatch } from \"react-redux\"\nimport Loading from \"../pages/Loading\"\n\nconst FirstPageContainer = styled.div`\n    background: linear-gradient(#fff, #fef9ef, #fff5dc, #d7f9ff, #aaf2ff);\n`\n\nexport default function FirstPage() {\n    const dispatch = useDispatch()\n    console.log(One)\n    console.log(Two)\n    console.log(Three)\n    console.log(Four)\n\n    // let assignedHeight = window.innerHeight * 0.95;\n    // const [ locationY, setLocationY ] = useState(0);\n    // console.log('[스크롤 위치]', Math.floor(locationY));\n    // const scrollHandler = () => {\n    //   setLocationY(window.pageYOffset);\n    // }\n\n    // useEffect(()=>{\n    //   window.addEventListener('scroll', scrollHandler);\n    //   return () => {\n    //     window.removeEventListener('scroll', scrollHandler);\n    //   }\n    // }, []);\n    useEffect(() => {\n        dispatch(changeMapPage(false))\n    }, [])\n\n    return (\n        <>\n            {!One && !Two && !Three && !Four ? (\n                <Loading></Loading>\n            ) : (\n                <FirstPageContainer className=\"firstPageWhole\">\n                    <One delayOne={\"1s\"} delayTwo={\"1.2s\"} />\n                    <Two\n                        delayOne={\"2.2s\"}\n                        delayTwo={\"2.5s\"}\n                        delayThree={\"2.6s\"}\n                        delayFour={\"2.7s\"}\n                        delayFive={\"2.8s\"}\n                    />\n                    <Three\n                        delayOne={\"4.0s\"}\n                        delayTwo={\"4.3s\"}\n                        delayThree={\"4.4s\"}\n                        delayFour={\"4.5s\"}\n                        delayFive={\"4.6s\"}\n                    />\n                    <Four\n                        delayOne={\"5.5s\"}\n                        delayTwo={\"5.8s\"}\n                        delayThree={\"5.9s\"}\n                        delayFour={\"6.0s\"}\n                        delayFive={\"6.1s\"}\n                    />\n                </FirstPageContainer>\n            )}\n        </>\n    )\n}\n","import React, { useEffect, useState, useRef } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useHistory } from \"react-router-dom\"\nimport styled from \"styled-components\"\nimport MapBox from \"../components/MapBox\"\nimport Peer from \"simple-peer\"\nimport io from \"socket.io-client\"\nimport axios from \"axios\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport {\n    faPlusSquare,\n    faChevronLeft,\n    faPaperPlane,\n} from \"@fortawesome/free-solid-svg-icons\"\nimport { changeCurRoom } from \"../actions/index\"\n\nconst Container = styled.div`\n    // 여기는 데스크탑\n    margin: 0 auto;\n    background-color: var(--page-bg-color);\n    width: 100vw;\n    height: var(--desktop-page-height);\n    // display: flex;\n    // align-items: center;\n\n    @media screen and (max-width: 1081px) {\n        // 여기가 모바일\n        height: calc(100vh - 125px - 70px);\n    }\n`\nconst ProfileName = styled.div`\n    // background-color: #f1319e;\n    // width: 15%;\n    font-size: 2rem;\n    border: 1px solid pink;\n    // position: relative;\n\n    @media screen and (min-width: 1081px) {\n        font-size: 2rem;\n        // position: relative;\n    }\n`\nconst UserPhotoDiv = styled.div`\n    // background-color: #f1319e;\n    width: 15%;\n\n    // border: 1px solid pink;\n    // position: relative;\n\n    @media screen and (min-width: 1081px) {\n        // background-color: yellow;\n        // max-width: 100%;\n        width: 20%;\n        // position: relative;\n    }\n`\nconst UserPhotoImg = styled.img`\n    // background-color: #f1319e;\n    width: 100%;\n    // border: 1px solid pink;\n    // position: relative;\n    border-radius: 100%;\n\n    @media screen and (min-width: 1081px) {\n        // background-color: yellow;\n        // max-width: 100%;\n        // width: 100%;\n        // position: relative;\n    }\n`\nconst RoomChatDiv = styled.div`\n    // background-color: #f1319e;\n    // width: 100%;\n    border: 1px solid pink;\n    height: 100%;\n\n    // position: relative;\n    // display: flex;\n\n    @media screen and (min-width: 1081px) {\n        // background-color: yellow;\n        // max-width: 100%;\n        border: 1px solid pink;\n        height: 100%;\n        // width: 100%;\n        // position: relative;\n    }\n`\nconst RoomList = styled.div`\n    // background-color: #f1319e;\n    // width: 100%;\n    // border: 2px solid pink;\n    // position: relative;\n    display: flex;\n    flex-direction: column;\n    // justify-content: center;\n    // align-content: center;\n    // align-items: center;\n    @media screen and (min-width: 1081px) {\n        // background-color: yellow;\n        // max-width: 100%;\n        // border: 2px solid pink;\n\n        // width: 100%;\n        // position: relative;\n    }\n`\n\nconst Buttons = styled.button`\n    display: flex;\n    justify-content: center;\n`\n\nconst Button = styled.button`\n    color: ${(props) => (props.bgGrey || props.isText ? \"black\" : \"grey\")};\n    font-size: ${(props) => (props.isText ? \"1.2rem\" : \"1.6rem\")};\n    // padding: ${(props) => (props.isText ? \".6rem\" : \".4rem\")};\n    // margin-top: 1rem;\n    border-radius: 10%;\n    // border: 1px solid black;\n    // display: flex;\n    // justify-content: center;\n`\nconst FriendInput = styled.input`\n    // margin-top: rem;\n    // margin: 1px solid black;\n    // padding: 0.5rem;\n`\nconst FriendInputAndBtn = styled.div`\n    // margin-top: rem;\n    // margin: 1px solid black;\n    // padding: 0.5rem;\n    display: flex;\n    // justify-content: between-around;\n`\nconst FriendListDiv = styled.div`\n    border-bottom: 1px solid black;\n    margin-bottom: 1rem;\n    margin-top: 1rem;\n    // padding-bottom: 0.5rem;\n    // vertical-align: center;\n    // align-self: center;\n`\n\nlet url = process.env.REACT_APP_LOCAL_URL\nif (!url) url = \"https://thereweather.space\"\nconst socket = io.connect(url)\n\nexport default function Messenger() {\n    const dispatch = useDispatch()\n    const [prevmsg, setprevmsg] = useState([])\n    const { userInfo } = useSelector((state) => state.itemReducer)\n    //새로 추가할 메시지 한줄에 대한 이벤트 타겟(onChange용)-hoon\n    const [msgevent, setmsgevent] = useState(\"\")\n    //메시지의 총 집합-hoon\n    const [newMsgSection, setNewMsgSection] = useState([])\n    //방을 새로 개설할때 쓰인다-hoon\n    const [receiver_id, setreceiver_id] = useState(\"\")\n    const [curRoom, setcurRoom] = useState(\"\") //현재접속중인방-hoon\n    //이 회원이 채팅을 나누고 있는 다양한 채팅방 리스트-hoon\n    const [joinedRoom, setjoinedRoom] = useState([\"\"])\n    const [roomInOut, setRoomInOut] = useState(false)\n\n    const [recievemessage, setrecievemessage] = useState([])\n    const history = useHistory()\n    console.log(recievemessage)\n    //새로 방을 개설할때 , 채팅할 상대의 아이디를 쓰는 이벤트타겟(onChange용)-hoon\n    function roomNamefunc(e) {\n        console.log(e.target.value)\n        setreceiver_id(e.target.value)\n    }\n    //방을 개설할때 클릭된 함수\n    function roomNameSubmit() {\n        //방이름을 통일하기 위해 sort로 문자 정렬을 해준다.-hoon\n        const user_id_sort = [userInfo.user_id, receiver_id].sort()\n        // socket.emit(\"enter_room\", `${user_id_sort[0]}_${user_id_sort[1]}`)\n        // setcurRoom(`${user_id_sort[0]}_${user_id_sort[1]}`)\n\n        //룸네임이 만들어지면 axios로 접속된 목록을 추가하여 데이터 베이스에 저장해주자-hoon\n        axios({\n            url: url + \"/chat/rooms\",\n            method: \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            data: {\n                user_id: userInfo.user_id,\n                receiver_id: receiver_id,\n                roomName: `${user_id_sort[0]}_${user_id_sort[1]}`,\n            },\n            withCredentials: true,\n        }).then((res) => {\n            const joinRoom = new Set(res.data)\n            setjoinedRoom([...joinRoom])\n        })\n    }\n    //처음에 가지고 있는 참여된 방이 있는지 조회-hoon\n    useEffect(() => {\n        axios({\n            url: url + `/chat/rooms?user_id=${userInfo.user_id}`,\n            method: \"get\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            withCredentials: true,\n        }).then((res) => {\n            const joinRoom = new Set(res.data)\n            setjoinedRoom([...joinRoom])\n        })\n    }, [])\n    \n\n    useState(() => {\n        setNewMsgSection([...newMsgSection])\n        setprevmsg([...prevmsg])\n        console.log(newMsgSection)\n    }, [roomInOut, prevmsg, newMsgSection])\n\n    //방을 클릭했을때 방을 입장하게 할 함수-hoon\n    function roomListClick(clickRoomName) {\n        console.log(clickRoomName)\n        // setcurRoom(clickRoomName)\n        dispatch(changeCurRoom(clickRoomName))\n\n        history.push(\"/chatroom\")\n\n        // setRoomInOut(true)\n\n        // //현재 방입장-hoon\n        // // socket.emit(\"enter_room\", clickRoomName)\n        // //방입장시 렌더링 할 메시지를 가져와야한다.\n        // axios({\n        //     url: url + `/chat/messagelist`,\n        //     method: \"post\",\n        //     headers: {\n        //         \"Content-Type\": \"application/json\",\n        //     },\n        //     data: {\n        //         user_id: userInfo.user_id,\n        //         receiver_id: curRoom\n        //             .replace(\"_\", \"\")\n        //             .replace(`${userInfo.user_id}`, \"\"),\n        //         roomName: curRoom,\n        //     },\n        //     withCredentials: true,\n        // }).then((res) => {\n        //     setprevmsg(res.data)\n        // })\n    }\n    // useEffect(() => {\n    //     console.log(curRoom)\n    // }, [curRoom])\n    //채팅방 메시지 글작성 이벤트타겟용 함수\n   \n    //채팅방 메시지 글 보내기 함수\n    function msgSubmit() {\n        axios({\n            url: url + `/chat/messagelist`,\n            method: \"put\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            data: {\n                user_id: userInfo.user_id,\n                receiver_id: curRoom\n                    .replace(\"_\", \"\")\n                    .replace(`${userInfo.user_id}`, \"\"),\n                roomName: curRoom,\n                chatcontent: msgevent,\n            },\n            withCredentials: true,\n        }).then((res) =>\n            socket.emit(\"message\", {\n                user_id: userInfo.user_id,\n                receiver_id: curRoom\n                    .replace(\"_\", \"\")\n                    .replace(`${userInfo.user_id}`, \"\"),\n                chatcontent: msgevent,\n            })\n        )\n        setmsgevent(\"\")\n    }\n\n    // socket.on(\"newMsg\", (msg2) => {\n    //     // console.log(\"메시지 적용되야됨\")\n    //     //총 메시지리스트를 여기서 업데이트하고있다\n    //     setprevmsg([...msg, msg2])\n    // })\n    // useEffect(() => {\n    //     axios({\n    //         url: url + \"/chat/messagelist\",\n    //         method: \"post\",\n    //         headers: {\n    //             \"Content-Type\": \"application/json\",\n    //         },\n    //         data: {\n    //             roomName: curRoom,\n    //             chatcontent: JSON.stringify(msg),\n    //         },\n    //         withCredentials: true,\n    //     }).then((res) => {})\n    //     // .then((res) => console.log(\"글 업데이트 완료\"))\n    // }, [msg])\n\n    const goBackHandler = () => {\n        setRoomInOut(false)\n    }\n\n    return (\n        <Container className=\"mapcontainer\">\n            <RoomChatDiv>\n                <ProfileName>{userInfo.user_id}</ProfileName>\n                <UserPhotoDiv>\n                    <UserPhotoImg src={userInfo.user_Photo} />\n                </UserPhotoDiv>\n                <FriendInputAndBtn>\n                    <FriendInput\n                        onChange={(e) => roomNamefunc(e)}\n                        placeholder=\"친구 ID\"\n                        required\n                        type=\"text\"\n                    />\n                    <Buttons>\n                        <Button>\n                            <FontAwesomeIcon\n                                onClick={roomNameSubmit}\n                                icon={faPlusSquare}\n                            />\n                        </Button>\n                    </Buttons>\n                </FriendInputAndBtn>\n                <RoomList>\n                    <FriendListDiv>{\"개인 메시지\"}</FriendListDiv>\n                    {joinedRoom.map((el) => (\n                        <FriendListDiv onClick={() => roomListClick(el)}>\n                            {el\n                                .replace(\"_\", \"\")\n                                .replace(`${userInfo.user_id}`, \"\")}\n                        </FriendListDiv>\n                    ))}\n                </RoomList>\n            </RoomChatDiv>\n        </Container>\n    )\n}\n","import React, { useEffect, useState, useRef } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useHistory } from \"react-router-dom\"\nimport styled from \"styled-components\"\nimport MapBox from \"../components/MapBox\"\nimport Peer from \"simple-peer\"\nimport io from \"socket.io-client\"\nimport axios from \"axios\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport {\n    faPlusSquare,\n    faChevronLeft,\n    faPaperPlane,\n} from \"@fortawesome/free-solid-svg-icons\"\n\nconst Container = styled.div`\n    // 여기는 데스크탑\n    margin: 0 auto;\n    background-color: var(--page-bg-color);\n    width: 100vw;\n    height: var(--desktop-page-height);\n    // display: flex;\n    // align-items: center;\n\n    @media screen and (max-width: 1081px) {\n        // 여기가 모바일\n        height: calc(100vh - 125px - 70px);\n    }\n`\nconst ProfileName = styled.div`\n    // background-color: #f1319e;\n    // width: 15%;\n    font-size: 2rem;\n    border: 1px solid pink;\n    // position: relative;\n\n    @media screen and (min-width: 1081px) {\n        font-size: 2rem;\n        // position: relative;\n    }\n`\nconst UserPhotoDiv = styled.div`\n    // background-color: #f1319e;\n    width: 15%;\n\n    // border: 1px solid pink;\n    // position: relative;\n\n    @media screen and (min-width: 1081px) {\n        // background-color: yellow;\n        // max-width: 100%;\n        width: 20%;\n        // position: relative;\n    }\n`\nconst UserPhotoImg = styled.img`\n    // background-color: #f1319e;\n    width: 100%;\n    // border: 1px solid pink;\n    // position: relative;\n    border-radius: 100%;\n\n    @media screen and (min-width: 1081px) {\n        // background-color: yellow;\n        // max-width: 100%;\n        // width: 100%;\n        // position: relative;\n    }\n`\nconst RoomChatDiv = styled.div`\n    // background-color: #f1319e;\n    // width: 100%;\n    border: 1px solid pink;\n    height: 100%;\n\n    // position: relative;\n    // display: flex;\n\n    @media screen and (min-width: 1081px) {\n        // background-color: yellow;\n        // max-width: 100%;\n        border: 1px solid pink;\n        height: 100%;\n        // width: 100%;\n        // position: relative;\n    }\n`\nconst RoomList = styled.div`\n    // background-color: #f1319e;\n    // width: 100%;\n    // border: 2px solid pink;\n    // position: relative;\n    display: flex;\n    flex-direction: column;\n    // justify-content: center;\n    // align-content: center;\n    // align-items: center;\n    @media screen and (min-width: 1081px) {\n        // background-color: yellow;\n        // max-width: 100%;\n        // border: 2px solid pink;\n\n        // width: 100%;\n        // position: relative;\n    }\n`\nconst ChatList = styled.div`\n    // background-color: #f1319e;\n    // width: 100%;\n    // border: 2px solid pink;\n    // position: relative;\n\n    @media screen and (min-width: 1081px) {\n        // background-color: yellow;\n        // max-width: 100%;\n        // border: 2px solid pink;\n\n        // width: 100%;\n        // position: relative;\n    }\n`\nconst Buttons = styled.button`\n    display: flex;\n    justify-content: center;\n`\n\nconst Button = styled.button`\n    color: ${(props) => (props.bgGrey || props.isText ? \"black\" : \"grey\")};\n    font-size: ${(props) => (props.isText ? \"1.2rem\" : \"1.6rem\")};\n    // padding: ${(props) => (props.isText ? \".6rem\" : \".4rem\")};\n    // margin-top: 1rem;\n    border-radius: 10%;\n    // border: 1px solid black;\n    // display: flex;\n    // justify-content: center;\n`\nconst FriendInput = styled.input`\n    // margin-top: rem;\n    // margin: 1px solid black;\n    // padding: 0.5rem;\n`\nconst FriendInputAndBtn = styled.div`\n    // margin-top: rem;\n    // margin: 1px solid black;\n    // padding: 0.5rem;\n    display: flex;\n    // justify-content: between-around;\n`\nconst FriendListDiv = styled.div`\n    border-bottom: 1px solid black;\n    margin-bottom: 1rem;\n    margin-top: 1rem;\n    // padding-bottom: 0.5rem;\n    // vertical-align: center;\n    // align-self: center;\n`\nconst GoBackButton = styled.button`\n    display: none;\n\n    @media screen and (max-width: 1081px) {\n        display: inline;\n        /* top: 90vh; */\n        // top: 1.5vh;\n        // position: fixed;\n        border-radius: 50%;\n        z-index: 100;\n        .fa-fw {\n            font-size: 50px;\n        }\n    }\n    @media screen and (max-width: 375px) {\n        .fa-fw {\n            font-size: 35px;\n        }\n    }\n`\n\nlet url = process.env.REACT_APP_LOCAL_URL\nif (!url) {\n    url = \"https://thereweather.space\"\n}\nconst socket = io.connect(url)\n\nexport default function Messenger2() {\n    // const dispatch = useDispatch()\n    const { userInfo } = useSelector((state) => state.itemReducer)\n    // dispatch(changeUser(axiosData))\n    // {/* <Container2 src=\"/img/fhd.png\" /> */}\n    //방을 새로 개설할때 쓰인다\n    const [roomName, setroomName] = useState(\"\")\n    const [curRoom, setcurRoom] = useState(\"\") //현재접속중인방\n    //메시지의 총 집합\n    const [msg, setmsg] = useState([\"\"])\n    //새로 추가할 메시지 한줄에 대한 이벤트 타겟(onChange용)\n    const [msgevent, setmsgevent] = useState(\"\")\n    //이 회원이 채팅을 나누고 있는 다양한 채팅방 리스트\n    const [joinedRoom, setjoinedRoom] = useState([])\n    const history = useHistory()\n    const [roomInOut, setRoomInOut] = useState(false)\n\n    //새로 방을 개설할때 , 채팅할 상대의 아이디를 쓰는 이벤트타겟(onChange용)\n    function roomNamefunc(e) {\n        console.log(e.target.value)\n        setroomName(e.target.value)\n    }\n    //방을 개설할때 클릭된 함수\n    function roomNameSubmit() {\n        //방이름을 통일하기 위해 sort로 문자 정렬을 해준다.\n        const user_id_sort = [userInfo.user_id, roomName].sort()\n        socket.emit(\"enter_room\", `${user_id_sort[0]}_${user_id_sort[1]}`)\n\n        setcurRoom(`${user_id_sort[0]}_${user_id_sort[1]}`)\n        //axios로 접속된 목록을 추가하여 데이터 베이스에 저장하는데, 유즈이펙트로, 변화가 있을때만 저장한다.\n        axios({\n            url: url + \"/chat/rooms\",\n            method: \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            data: {\n                user_id: userInfo.user_id,\n                opponent: roomName,\n                roomlist: `${user_id_sort[0]}_${user_id_sort[1]}`,\n            },\n            withCredentials: true,\n        }).then((res) => {\n            console.log(res.data)\n            setjoinedRoom(res.data)\n        })\n    }\n\n    useEffect(() => {\n        axios({\n            url: url + `/chat/rooms?user_id=${userInfo.user_id}`,\n            method: \"get\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            withCredentials: true,\n        }).then((res) => setjoinedRoom(res.data))\n    }, [])\n\n    function roomListClick(clickRoomName) {\n        setRoomInOut(true)\n        socket.emit(\"enter_room\", clickRoomName)\n        setcurRoom(clickRoomName)\n\n        axios({\n            url: url + `/chat/messagelist?roomlist=${clickRoomName}`,\n            method: \"get\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            withCredentials: true,\n        }).then((res) => {\n            setmsg(res.data)\n        })\n    }\n\n    function msgfunc(e) {\n        console.log(e.target.value)\n        setmsgevent(e.target.value)\n    }\n\n    function msgSubmit() {\n        socket.emit(\n            \"newMsg\",\n            `${userInfo.user_id} : ` + msgevent,\n            curRoom,\n            () => {\n                // console.log(\"메시지추가 찍혀라\")\n                setmsg([...msg, `${userInfo.user_id} : ` + msgevent])\n            }\n        )\n    }\n    // socket.on(\"newMsg\", setmsg([msg, ...msg]))\n\n    // socket.on(\"welcome\", () => {\n    //     // console.log(\"메시지가 찍히나\")\n    //     // setmsg([\"상대방이 방에 들어왔습니다\", ...msg])\n    // })\n    // socket.on(\"bye\", () => {\n    //     // console.log(\"메시지가 찍히나\")\n    //     // setmsg([\"상대방이 나갔습니다\", ...msg])\n    // })\n    socket.on(\"newMsg\", (msg2) => {\n        // console.log(\"메시지 적용되야됨\")\n        //총 메시지리스트를 여기서 업데이트하고있다\n        setmsg([...msg, msg2])\n    })\n    useEffect(() => {\n        axios({\n            url: url + \"/chat/messagelist\",\n            method: \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            data: {\n                roomlist: curRoom,\n                chatcontent: JSON.stringify(msg),\n            },\n            withCredentials: true,\n        }).then((res) => {})\n        // .then((res) => console.log(\"글 업데이트 완료\"))\n    }, [msg])\n\n    const goBackHandler = () => {\n        setRoomInOut(false)\n    }\n    return (\n        <Container className=\"mapcontainer\">\n            {!roomInOut ? (\n                <RoomChatDiv>\n                    <ProfileName>{userInfo.user_id}</ProfileName>\n                    <UserPhotoDiv>\n                        <UserPhotoImg src={userInfo.user_Photo} />\n                    </UserPhotoDiv>\n                    <FriendInputAndBtn>\n                        <FriendInput\n                            onChange={(e) => roomNamefunc(e)}\n                            placeholder=\"친구 ID\"\n                            required\n                            type=\"text\"\n                        />\n                        <Buttons>\n                            <Button>\n                                <FontAwesomeIcon\n                                    onClick={roomNameSubmit}\n                                    icon={faPlusSquare}\n                                />\n                            </Button>\n                        </Buttons>\n                    </FriendInputAndBtn>\n                    <RoomList>\n                        <FriendListDiv>{\"개인 메시지\"}</FriendListDiv>\n                        {joinedRoom.map((el) => (\n                            <FriendListDiv onClick={() => roomListClick(el)}>\n                                {el.split(\"_\").indexOf(userInfo.user_id) === 0\n                                    ? el.split(\"_\")[1]\n                                    : el.split(\"_\")[0]}\n                            </FriendListDiv>\n                        ))}\n                    </RoomList>\n                </RoomChatDiv>\n            ) : (\n                <>\n                    <GoBackButton>\n                        <FontAwesomeIcon\n                            icon={faChevronLeft}\n                            className=\"fa-fw\"\n                            color=\"#ACB5BD\"\n                            onClick={goBackHandler}\n                        />\n                    </GoBackButton>\n                    <ChatList>\n                        <div>{\"채팅창\"}</div>\n                        {msg.map((el) => {\n                            return <div>{el}</div>\n                        })}\n                    </ChatList>\n                    <input\n                        onChange={(e) => msgfunc(e)}\n                        placeholder=\"메시지\"\n                        required\n                        type=\"text\"\n                    />\n                    <Buttons>\n                        <Button>\n                            <FontAwesomeIcon\n                                onClick={msgSubmit}\n                                icon={faPaperPlane}\n                            />\n                        </Button>\n                    </Buttons>\n                </>\n            )}\n        </Container>\n    )\n}\n","import styled from \"styled-components\"\nimport { useState } from \"react\"\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\"\nimport axios from \"axios\";\nimport DaumPostcode from \"react-daum-postcode\"\n\n\nconst Outer = styled.div`\n    overflow: scroll;\n    display: flex;\n    flex-direction: column;\n    /* justify-content: space-around; */\n    justify-content: start;\n    align-items: center;\n    width: 100vw;\n    min-height: var(--mobile-page-height);\n    padding: 3rem auto;\n    background-color: var(--page-bg-color);\n\n    @media screen and (min-width: 1081px) {\n        flex-direction: row;\n        min-height: var(--desktop-page-height);\n        padding: 2rem;\n    }\n`\n\n\nconst Button = styled.button`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border: 1px solid black;\n    border-radius: ${(props) => (props.round ? \"50%\" : null)};\n    background-color: var(--button-bg-normal);\n    font-size: 1.25rem;\n    padding: ${(props) => (props.round ? \".5rem .5rem\" : \".5rem 2rem\")};\n    margin: ${(props) => (props.round ? \".5rem\" : \"1rem\")};\n\n    & > img {\n        height: 1.5rem;\n        width: 1.5rem;\n    }\n`\n\nconst Button2 = styled.input`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: 1rem;\n    padding: 0.8rem;\n    border-radius: 1rem;\n    font-size: 1rem;\n    font-weight: bold;\n    color: white;\n    background-color: #FEC0CB;\n\n    > span {\n        margin: 0.25rem;\n    }\n`\n\nconst PictureSection = styled.form`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 1rem;\n    height: inherit;\n\n    @media screen and (min-width: 1081px) {\n        justify-content: center;\n        /* justify-content: flex-start; */\n        width: 40vw;\n    }\n`\n\nconst DesktopRight = styled.section`\n    display: flex;\n    flex-grow: 1;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n\n    @media screen and (min-width: 1081px) {\n        justify-content: space-around;\n        width: 40vw;\n    }\n`\n\n\nconst WriteText = styled.div`\n    width: 70vw;\n    min-width: 250px;\n    height: ${(props) => (props.small ? \"3rem\" : \"5vh\")};\n    text-align: center;\n    vertical-align: center;\n    line-height: 1.2rem;\n    font-size: 1.2rem;\n    /* margin: 2rem 1rem 4rem; */\n    margin: 1.5rem;\n    padding: 1rem;\n\n    @media screen and (min-width: 1081px) {\n        width: ${(props) => (props.small ? \"35vw\" : \"40vw\")};\n        max-width: ${(props) => (props.small ? \"500px\" : \"800px\")};\n    }\n`\n\nconst PhotoBox = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: auto;\n    height: auto;\n    min-width: 300px;\n    min-height: 300px;\n    background-color: #ececec;\n    border: 1px solid #b5b5b5;\n    object-fit: cover;\n`\n\nconst PhotoBox2 = styled.img`\n    min-width: 300px;\n    width: 30vh;\n    height: auto;\n`\n\nconst Button3 = styled.button`\n    width: 50vw;\n    min-width: 100px;\n    max-width: 300px;\n    margin: .5rem;\n    padding: 0.8rem;\n    font-size: 1rem;\n    font-weight: bold;\n    color: white;\n    background-color: #FEC0CB;\n    border-radius: 1rem;\n\n    > span {\n        margin: 0.25rem;\n    }\n`\n\nconst ValidationListBox = styled.ul`\n    list-style: none;\n    padding: 0 1.5rem;\n    font-size: 1rem;\n\n    li {\n        height: 1.2rem;\n        padding: 0 1.5rem;\n        color: var(--font-validation-negative);\n    }\n`\n\nlet url = process.env.REACT_APP_LOCAL_URL\nif (!url) url = \"https://thereweather.space\"\n\nexport default function Write() {\n    const dispatch = useDispatch()\n    const history = useHistory();\n    const { userInfo, curLocation } = useSelector((state) => state.itemReducer)\n    const [userRoadAddress, setRoadUserAddress] =\n        useState(\"위 검색창에서 검색해주세요.\")\n    const [photo, setPhoto] = useState(\"\")\n    const [uploadedImg, setUploadedImg] = useState({\n        fileName: \"blankPost.png\",\n        filePath: `${url}/img/blankPost.png`,\n    })\n    if (!url) {\n        url = \"https://thereweather.space\"\n    }\n  \n\n\n    // 등록버튼 이벤트\n    const submitButtonHandler = (e) => {\n        const token = JSON.parse(localStorage.getItem(\"ATOKEN\"))\n        axios({\n            url: url + \"/edituserinfo\",\n            method: \"put\",\n            data: { \n                location: userRoadAddress,\n                user_photo: uploadedImg.filePath,\n            },\n            headers: { \n                \"Content-Type\": \"application/json\",\n                \"Authorization\": `token ${token}` },\n            withCredentials: true,\n        })\n        .then((res) => {\n            alert(\"변경 완료, 로그아웃 후 확인해주세요:)\")\n            history.push(\"/home\")\n            console.log(res.data)\n        })\n        .catch((err) => console.log(err))\n    }\n   \n    const onSubmit = (e) => {\n        console.log(e)\n        e.preventDefault()\n        const formData = new FormData()\n        formData.append(\"img\", photo)\n        console.log(formData)\n        axios\n            .post(url + \"/post/photo\", formData, {\n                \"Content-Type\": \"multipart/form-data\",\n                withCredentials: true,\n            })\n            .then((res) => {\n                const { fileName } = res.data\n                setUploadedImg({\n                    fileName,\n                    filePath: `${url}/img/${fileName}`,\n                })\n                alert(\"사진을 성공적으로 업로드 하였습니다!\")\n            })\n            .catch((err) => {\n                console.error(err)\n            })\n    }\n    const addFile = (e) => {\n        console.log(e.target.files[0])\n        setPhoto(e.target.files[0])\n    }\n\n    function handleComplete(complevent) {\n        setRoadUserAddress(complevent.roadAddress)\n    }\n\n    return (\n        <Outer className=\"writePage\">\n            <PictureSection\n                className=\"pictureUploadSection writePageLeft\"\n                onSubmit={onSubmit}>\n                    <WriteText>프로필 사진</WriteText>\n                <PhotoBox>\n                    {uploadedImg ? (\n                        <PhotoBox2 src={uploadedImg.filePath} alt=\"icon\"/>\n                    ) : (\n                        <div></div>\n                    )}\n                </PhotoBox>\n                <Button2\n                    type=\"file\"\n                    className=\"uploadButton\"\n                    onChange={addFile}\n                    round\n                />\n                <Button3 type=\"submit\">업로드</Button3>\n            </PictureSection>\n\n            <DesktopRight className=\"writePageRight\">\n              <WriteText>사는곳</WriteText>\n            <DaumPostcode onComplete={handleComplete} />\n            <ValidationListBox className=\"pwValidationList\">\n                        {userRoadAddress}\n            </ValidationListBox>\n              <Button className=\"submitButton\"\n                      onClick={submitButtonHandler}>\n                        등록\n                    </Button>\n            </DesktopRight>\n        </Outer>\n    )\n}","import React, { useEffect, useState, useRef } from \"react\"\nimport styled from \"styled-components\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport {\n    faPlusSquare,\n    faChevronLeft,\n    faPaperPlane,\n} from \"@fortawesome/free-solid-svg-icons\"\nimport { useHistory } from \"react-router-dom\"\nimport axios from \"axios\"\nimport io from \"socket.io-client\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { changeNewMsgSection } from \"../actions/index\"\n\nconst Container = styled.div`\n    // 여기는 데스크탑\n    margin: 0 auto;\n    background-color: var(--page-bg-color);\n    width: 100vw;\n    height: var(--desktop-page-height);\n    // display: flex;\n    // align-items: center;\n\n    @media screen and (max-width: 1081px) {\n        // 여기가 모바일\n        height: calc(100vh - 125px - 70px);\n    }\n`\nconst GoBackButton = styled.button`\n    display: none;\n\n    @media screen and (max-width: 1081px) {\n        display: inline;\n        /* top: 90vh; */\n        // top: 1.5vh;\n        // position: fixed;\n        border-radius: 50%;\n        z-index: 100;\n        .fa-fw {\n            font-size: 50px;\n        }\n    }\n    @media screen and (max-width: 375px) {\n        .fa-fw {\n            font-size: 35px;\n        }\n    }\n`\nconst ChatList = styled.div`\n    // background-color: #f1319e;\n    // width: 100%;\n    // border: 2px solid pink;\n    // position: relative;\n\n    @media screen and (min-width: 1081px) {\n        // background-color: yellow;\n        // max-width: 100%;\n        // border: 2px solid pink;\n\n        // width: 100%;\n        // position: relative;\n    }\n`\nconst Buttons = styled.button`\n    display: flex;\n    justify-content: center;\n`\n\nconst Button = styled.button`\n    color: ${(props) => (props.bgGrey || props.isText ? \"black\" : \"grey\")};\n    font-size: ${(props) => (props.isText ? \"1.2rem\" : \"1.6rem\")};\n    // padding: ${(props) => (props.isText ? \".6rem\" : \".4rem\")};\n    // margin-top: 1rem;\n    border-radius: 10%;\n    // border: 1px solid black;\n    // display: flex;\n    // justify-content: center;\n`\n\nconst MeDiv = styled.div`\n    // border-bottom: 1px solid green;\n    // margin-bottom: 1rem;\n    // margin-top: 1rem;\n    // padding-bottom: 0.5rem;\n    // vertical-align: center;\n    // align-self: center;\n    text-align: right;\n\n    overflow: auto;\n`\nconst YouDiv = styled.div`\n    // border-bottom: 1px solid black;\n    // margin-bottom: 1rem;\n    // margin-top: 1rem;\n    // padding-bottom: 0.5rem;\n    // vertical-align: center;\n    // align-self: center;\n    text-align: left;\n\n    overflow: auto;\n`\nlet url = process.env.REACT_APP_LOCAL_URL\nif (!url) url = \"https://thereweather.space\"\nconst socket = io.connect(url)\n\nexport default function ChatRoom() {\n    const dispatch = useDispatch()\n\n    const history = useHistory()\n    const { userInfo, curRoom, newMsgSection } = useSelector(\n        (state) => state.itemReducer\n    )\n    const [prevmsg, setprevmsg] = useState([])\n    // const [newMsgSection, setNewMsgSection] = useState([])\n    const [msgevent, setmsgevent] = useState(\"\")\n\n    console.log(curRoom)\n    // useEffect(() => {\n    //     setprevmsg([...prevmsg, newMsgSection])\n    // }, [newMsgSection])\n\n    // recievemessage = prevmsg\n    // useEffect(() => {\n    //     setprevmsg([...prevmsg])\n    // }, [recievemessage])\n    // let recievemessage = function (msgobj) {\n    function recievemessage(msgobj) {\n        // this.setState({\n        //     messages:[...this.state.messages,messageobject]\n        // })\n        return dispatch(changeNewMsgSection([...newMsgSection, msgobj]))\n    }\n    /////////////메시지를 받았을때/////\n    useEffect(() => {\n        axios({\n            url: url + `/chat/messagelist`,\n            method: \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            data: {\n                user_id: userInfo.user_id,\n                receiver_id: curRoom\n                    .replace(\"_\", \"\")\n                    .replace(`${userInfo.user_id}`, \"\"),\n                roomName: curRoom,\n            },\n            withCredentials: true,\n        }).then((res) => {\n            setprevmsg(res.data)\n        })\n        socket.on(\"sendmsg\", (msgobj) =>\n            // setNewMsgSection([...newMsgSection, msgobj])\n            {\n                console.log(newMsgSection)\n                console.log(msgobj)\n                // return dispatch(changeNewMsgSection([...newMsgSection, msgobj]))\n                recievemessage({\n                    user_id: msgobj.receiver_id,\n                    receiver_id: msgobj.user_id,\n                    chatcontent: msgobj.chatcontent,\n                })\n            }\n        )\n    }, [])\n\n    useEffect(() => {\n        axios({\n            url: url + `/chat/messagelist`,\n            method: \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            data: {\n                user_id: userInfo.user_id,\n                receiver_id: curRoom\n                    .replace(\"_\", \"\")\n                    .replace(`${userInfo.user_id}`, \"\"),\n                roomName: curRoom,\n            },\n            withCredentials: true,\n        }).then((res) => {\n            setprevmsg(res.data)\n        })\n    }, [])\n    function msgfunc(e) {\n        console.log(e.target.value)\n        setmsgevent(e.target.value)\n    }\n\n    //채팅방 메시지 글 보내기 함수\n    function msgSubmit() {\n        axios({\n            url: url + `/chat/messagelist`,\n            method: \"put\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            data: {\n                user_id: userInfo.user_id,\n                receiver_id: curRoom\n                    .replace(\"_\", \"\")\n                    .replace(`${userInfo.user_id}`, \"\"),\n                roomName: curRoom,\n                chatcontent: msgevent,\n            },\n            withCredentials: true,\n        }).then((res) =>\n            socket.emit(\"message\", {\n                user_id: userInfo.user_id,\n                receiver_id: curRoom\n                    .replace(\"_\", \"\")\n                    .replace(`${userInfo.user_id}`, \"\"),\n                // user_id: curRoom\n                //     .replace(\"_\", \"\")\n                //     .replace(`${userInfo.user_id}`, \"\"),\n                // receiver_id: userInfo.user_id,\n\n                chatcontent: msgevent,\n            })\n        )\n        setmsgevent(\"\")\n    }\n    return (\n        <Container className=\"mapcontainer\">\n            <GoBackButton>\n                <FontAwesomeIcon\n                    icon={faChevronLeft}\n                    className=\"fa-fw\"\n                    color=\"#ACB5BD\"\n                    onClick={() => history.push(\"/messenger\")}\n                />\n            </GoBackButton>\n            <ChatList>\n                <div>{\"채팅창\"}</div>\n            </ChatList>\n            {prevmsg.map((el) => {\n                if (userInfo.user_id === el.user_id) {\n                    return <MeDiv>{el.chatcontent}</MeDiv>\n                } else {\n                    return <YouDiv>{el.chatcontent}</YouDiv>\n                }\n            })}\n            {newMsgSection.map((el) => {\n                console.log(el)\n                if (userInfo.user_id === el.user_id) {\n                    return <MeDiv>{el.chatcontent}</MeDiv>\n                } else {\n                    return <YouDiv>{el.chatcontent}</YouDiv>\n                }\n            })}\n            <input\n                onChange={(e) => msgfunc(e)}\n                placeholder=\"메시지\"\n                required\n                type=\"text\"\n                value={msgevent}\n            />\n            <Buttons>\n                <Button>\n                    <FontAwesomeIcon onClick={msgSubmit} icon={faPaperPlane} />\n                </Button>\n            </Buttons>\n        </Container>\n    )\n}\n","import { createGlobalStyle } from \"styled-components\"\n\nconst GlobalStyle = createGlobalStyle`\n*, *::before, *::after {\n  box-sizing: border-box;   \n}\n\nbody { \n  font-family: 'IBM Plex Sans KR', sans-serif;\n  }\n  \n`\n\nexport default GlobalStyle\n","import React, { useEffect } from \"react\"\nimport { Switch, Route, Redirect, useHistory } from \"react-router-dom\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport axios from \"axios\"\nimport \"./App.css\"\nimport Map from \"./pages/Map\"\nimport Home from \"./pages/Home\"\nimport BookMark from \"./pages/BookMark\"\nimport Header from \"./components/Header\"\nimport MenuBar from \"./components/MenuBar\"\nimport UserInfo from \"./pages/UserInfo\"\nimport More from \"./pages/More\"\nimport MyPage from \"./pages/MyPage\"\nimport Login from \"./pages/Login\"\nimport PasswordEdit from \"./pages/PasswordEdit\"\nimport SignUp from \"./pages/SignUp\"\nimport MyPost from \"./pages/MyPost\"\nimport Write from \"./pages/Write\"\nimport PostRead from \"./pages/PostRead\"\nimport ReadBookMarkPost from \"./pages/ReadBookMarkPost\"\nimport PostEdit from \"./pages/PostEdit\"\nimport FirstPage from \"./pages/FirstPage\"\nimport Messenger from \"./pages/Messenger\"\nimport Messenger2 from \"./pages/Messenger2\"\nimport Loading from \"./pages/Loading\"\nimport EditUserInfo from \"./pages/EditUserInfo\"\nimport ChatRoom from \"./pages/ChatRoom\"\n\nimport { changeIsLogin, changeUser } from \"./actions/index\"\n\nimport styled from \"styled-components\"\nimport GlobalStyle from \"./components/GlobalStyle\"\n\nlet url = process.env.REACT_APP_LOCAL_URL\n\nexport default function App() {\n    if (!url) {\n        url = \"https://thereweather.space\"\n    }\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    const isInput = true\n    const { isLogin } = useSelector((state) => state.itemReducer)\n    useEffect(() => {\n        console.log(JSON.parse(localStorage.getItem(\"ATOKEN\")))\n        //auth할차례\n        if (localStorage.getItem(\"ATOKEN\")) {\n            axios({\n                url: url + \"/users/auth\",\n                method: \"get\",\n                headers: {\n                    authorization: `token ${JSON.parse(\n                        localStorage.getItem(\"ATOKEN\")\n                    )}`,\n                },\n            }).then((res) => {\n                console.log(res.data.data)\n                dispatch(changeUser(res.data.data))\n                dispatch(changeIsLogin(res.data.login))\n            })\n        }\n    }, [isLogin])\n\n    return (\n        <>\n            <GlobalStyle />\n            <Header isInput={isInput} />\n            <Switch>\n                <Route exact path=\"/map\">\n                    <Map></Map>\n                </Route>\n                <Route exact path=\"/home\">\n                    <Home></Home>\n                </Route>\n                <Route exact path=\"/bookmark\">\n                    <BookMark></BookMark>\n                </Route>\n                <Route exact path=\"/userinfo\">\n                    <UserInfo></UserInfo>\n                </Route>\n                <Route exact path=\"/edituserinfo\">\n                    <EditUserInfo></EditUserInfo>\n                </Route>\n                <Route exact path=\"/more\">\n                    <More></More>\n                </Route>\n                <Route exact path=\"/mypage\">\n                    <MyPage></MyPage>\n                </Route>\n                <Route exact path=\"/login\">\n                    <Login></Login>\n                </Route>\n                <Route exact path=\"/signup\">\n                    <SignUp></SignUp>\n                </Route>\n                <Route exact path=\"/editpassword\">\n                    <PasswordEdit></PasswordEdit>\n                </Route>\n                <Route exact path=\"/write\">\n                    <Write></Write>\n                </Route>\n                <Route exact path=\"/mypost\">\n                    <MyPost></MyPost>\n                </Route>\n                <Route exact path=\"/postread\">\n                    <PostRead></PostRead>\n                </Route>\n                <Route exact path=\"/bookmarkpost\">\n                    <ReadBookMarkPost></ReadBookMarkPost>\n                </Route>\n                <Route exact path=\"/postedit\">\n                    <PostEdit></PostEdit>\n                </Route>\n                <Route exact path=\"/first\">\n                    <FirstPage />\n                </Route>\n                <Route exact path=\"/Messenger\">\n                    <Messenger />\n                </Route>\n                <Route exact path=\"/Messenger2\">\n                    <Messenger2 />\n                </Route>\n                <Route exact path=\"/loading\">\n                    <Loading />\n                </Route>\n                <Route exact path=\"/chatroom\">\n                    <ChatRoom />\n                </Route>\n\n                <Route exact path=\"/writeorlogin\">\n                    {isLogin ? (\n                        <Redirect to=\"/write\" />\n                    ) : (\n                        <Redirect to=\"/login\" />\n                    )}\n                </Route>\n                <Route exact path=\"/bookmarkorlogin\">\n                    {isLogin ? (\n                        <Redirect to=\"/bookmark\" />\n                    ) : (\n                        <Redirect to=\"/login\" />\n                    )}\n                </Route>\n                <Route exact path=\"/homeorlogin\">\n                    {isLogin ? (\n                        <Redirect to=\"/home\" />\n                    ) : (\n                        <Redirect to=\"/login\" />\n                    )}\n                </Route>\n                <Route exact path=\"/moreoruserinfo\">\n                    {isLogin ? (\n                        <Redirect to=\"/userinfo\" />\n                    ) : (\n                        <Redirect to=\"/more\" />\n                    )}\n                </Route>\n                <Route exact path=\"/editpost\">\n                    <PostEdit></PostEdit>\n                </Route>\n                <Route exact path=\"/\">\n                    <Redirect to=\"/first\" />\n                </Route>\n            </Switch>\n            <MenuBar></MenuBar>\n        </>\n    )\n}\n","export const initialState = {\n    //만드신 변수는 어떤 변수인지 설명 부탁드려요-hoon\n    isLogin: false, //로그인상태 -hoon\n    genderToggle: 1, //기본값 1, 회원가입시에 젠더 토글 클릭시 남=1 여=2으로 변함-hoon\n    curLocation: { lat: \"\", lon: \"\" }, //현재 위치 변수-hoon\n    userInfo: {}, //회원 로그인시 정보 저장할 변수-hoon\n    weatherFilter: \"\", //헤더에서 날씨 필터에서 선택된 날씨-hoon\n    mapPage: false, //헤더에서 날씨필터 없애기용 변수-hoon\n    curRoom: null, //메신져에서 방입장시 사용할 변수-hoon\n    newMsgSection: [\n        // {\n        //     user_id: \"\",\n        //     receiver_id: \"\",\n        //     roomName: \"\",\n        // },\n    ], //메신져기능에서 새로운 메시지를 렌더링할 변수\n    searchWord: \"\",\n    selectWord: \"\",\n    editPassword: false,\n    start: 0, //북마크 페이지네이션\n    end: 10,\n    current: 1,\n    item: [], //기상청 데이터\n    postInfo: {}, //post 정보\n    readPostId: \"\", // 북마크나 지도 모달에서 클릭한 게시물의 아이디\n    homePost: [], // Home의 최근 게시물\n}\n","import {\n    CHANGE_SEARCH_WORD,\n    CHANGE_SELECT_WORD,\n    CHANGE_USER_INFO,\n    CHANGE_USER_GENDER,\n    CHANGE_IS_LOGIN,\n    UPDATE_CURRENT_PAGE,\n    UPDATE_START_END_PAGE,\n    CHANGE_USER_PW,\n    CHANGE_CUR_LOCATION,\n    UPDATE_WEATHERINFO,\n    UPDATE_USER_POST,\n    UPDATE_POST_ID,\n    CHANGE_WHEATER_FILTER,\n    CHANGE_MAP_PAGE,\n    CHANGE_CURROOM,\n    CHANGE_NEWMSGSECTION,\n} from \"../actions/index\"\nimport { initialState } from \"./initialState\"\n\nconst itemReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case CHANGE_NEWMSGSECTION:\n            return {\n                ...state,\n                newMsgSection: action.payload.newmsg,\n            }\n        case CHANGE_CURROOM:\n            return {\n                ...state,\n                curRoom: action.payload.room,\n            }\n        case CHANGE_USER_INFO:\n            return {\n                ...state,\n                userInfo: action.payload,\n            }\n        // 새로운기능은 위의 양식으로 아래쪽에 만들어서 쓸수있다.-hoon\n\n        case CHANGE_USER_GENDER:\n            return {\n                ...state,\n                genderToggle: action.payload,\n            }\n\n        case UPDATE_CURRENT_PAGE:\n            return {\n                ...state,\n                current: action.payload,\n            }\n\n        case UPDATE_START_END_PAGE:\n            return {\n                ...state,\n                start: action.payload.start,\n                end: action.payload.end,\n            }\n\n        case CHANGE_IS_LOGIN:\n            return {\n                ...state,\n                isLogin: action.payload,\n            }\n\n        case CHANGE_USER_PW:\n            return {\n                ...state,\n                editPassword: action.payload,\n            }\n\n        case CHANGE_SEARCH_WORD:\n            return {\n                ...state,\n                searchWord: action.payload,\n            }\n\n        case CHANGE_SELECT_WORD:\n            return {\n                ...state,\n                selectWord: action.payload,\n            }\n\n        case CHANGE_CUR_LOCATION:\n            return {\n                ...state,\n                curLocation: action.payload,\n            }\n        case UPDATE_WEATHERINFO:\n            return {\n                ...state,\n                item: action.payload,\n            }\n\n        case UPDATE_USER_POST:\n            return {\n                ...state,\n                postInfo: action.payload,\n            }\n\n        case UPDATE_POST_ID:\n            return {\n                ...state,\n                readPostId: action.payload,\n            }\n        case CHANGE_WHEATER_FILTER:\n            return {\n                ...state,\n                weatherFilter: action.payload,\n            }\n        case CHANGE_MAP_PAGE:\n            return {\n                ...state,\n                mapPage: action.payload,\n            }\n        default:\n            return state\n    }\n}\n\nexport default itemReducer\n","//노터치\nimport { combineReducers } from \"redux\"\nimport itemReducer from \"./itemReducer\"\n\nconst rootReducer = combineReducers({\n    itemReducer,\n})\n\nexport default rootReducer\n","//노터치\r\nimport { compose, createStore, applyMiddleware } from \"redux\"\r\nimport rootReducer from \"../reducers/index\"\r\nimport thunk from \"redux-thunk\"\r\nimport logger from \"redux-logger\"\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}) : compose\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk, logger)))\r\n\r\nexport default store\r\n","/* eslint-disable */\nimport React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport store from \"./store/store\"\nimport { Provider } from \"react-redux\"\nimport { BrowserRouter } from \"react-router-dom\"\nimport \"./index.css\"\n\nReactDOM.render(\n    <BrowserRouter>\n        <React.StrictMode>\n            <Provider store={store}>\n                <App />\n            </Provider>\n        </React.StrictMode>\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n)\n"],"sourceRoot":""}